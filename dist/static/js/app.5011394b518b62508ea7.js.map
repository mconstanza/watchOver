{"version":3,"sources":["webpack:///static/js/app.5011394b518b62508ea7.js","webpack:///./src/router/index.js","webpack:///./src/App.vue?fc6a","webpack:///App.vue","webpack:///HeroCard.vue","webpack:///Home.vue","webpack:///PlayerHeader.vue","webpack:///Profile.vue","webpack:///user-search.vue","webpack:///./src/components/HeroCard.vue?3bc7","webpack:///./src/components/Home.vue?3806","webpack:///./src/components/PlayerHeader.vue?1022","webpack:///./src/components/Profile.vue?bbe6","webpack:///./src/components/user-search.vue?c174","webpack:///./src/components/Home.vue?5d6d","webpack:///./src/components/HeroCard.vue?63c6","webpack:///./src/components/PlayerHeader.vue?30cd","webpack:///./src/components/user-search.vue?7353","webpack:///./src/App.vue?1700","webpack:///./src/components/Profile.vue?ec9f","webpack:///./src/main.js"],"names":["webpackJsonp","module","__webpack_exports__","__webpack_require__","__WEBPACK_IMPORTED_MODULE_0_vue__","__WEBPACK_IMPORTED_MODULE_1_vuetify__","__WEBPACK_IMPORTED_MODULE_1_vuetify___default","n","__WEBPACK_IMPORTED_MODULE_2_vue_router__","__WEBPACK_IMPORTED_MODULE_3__components_Home__","__WEBPACK_IMPORTED_MODULE_3__components_Home___default","__WEBPACK_IMPORTED_MODULE_4__components_Profile__","__WEBPACK_IMPORTED_MODULE_4__components_Profile___default","use","a","routes","path","name","component","props","exports","Component","Object","defineProperty","value","__WEBPACK_IMPORTED_MODULE_0__components_user_search_vue__","__WEBPACK_IMPORTED_MODULE_0__components_user_search_vue___default","__WEBPACK_IMPORTED_MODULE_1_axios__","__WEBPACK_IMPORTED_MODULE_1_axios___default","__WEBPACK_IMPORTED_MODULE_2__router_index_js__","components","userSearch","data","loading","appStyleObject","backgroundImage","heroQueryString","currentBattletag","loaded","tag","platform","region","profile","combinedStats","quick","competitive","heroStats","Ana","image","role","Bastion","DVa","Genji","Hanzo","Junkrat","Lucio","Mccree","Mei","Mercy","Pharah","Reaper","Reinhardt","Roadhog","Soldier76","Sombra","Symmetra","Tracer","Torbjoern","Widowmaker","Winston","Zarya","Zenyatta","view","mode","roles","tank","support","offense","defense","methods","renderBackground","console","log","this","toggleLoading","onClickSearch","query","battletag","toLowerCase","replace","push","switchView","loadHeroData","_this","$route","params","all","get","then","response","quickplay","hero","switchRoleView","created","fullStats","noCrit","toggleHeroStats","spliceInt","string","parseInt","numberWithCommas","x","parts","toString","split","join","headerId","onClickButton","event","$emit","__WEBPACK_IMPORTED_MODULE_0__HeroCard_vue__","__WEBPACK_IMPORTED_MODULE_0__HeroCard_vue___default","__WEBPACK_IMPORTED_MODULE_1__PlayerHeader_vue__","__WEBPACK_IMPORTED_MODULE_1__PlayerHeader_vue___default","msg","heroCard","playerHeader","viewMode","watch","render","_vm","_h","$createElement","_c","_self","attrs","fluid","md12","md4","_v","id","md2","directives","rawName","expression","staticClass","on","change","$event","$$selectedVal","Array","prototype","filter","call","target","options","o","selected","map","_value","multiple","md8","modifiers","trim","type","label","placeholder","domProps","keyup","_k","keyCode","input","composing","blur","$forceUpdate","click","staticRenderFns","_s","_e","img","TimePlayed","GamesWon","GamesLost","WinPercentage","TimeSpentonFire","Cards","Card","Eliminations","Elimination","Deaths","Death","indexOf","md6","lg2","md3","sm3","src","avatar","width","height","lg10","md9","sm9","style","to","clicked","current-battletag","size","indeterminate","_l","key","__WEBPACK_IMPORTED_MODULE_1__App__","__WEBPACK_IMPORTED_MODULE_1__App___default","__WEBPACK_IMPORTED_MODULE_2__router__","config","productionTip","el","router","h"],"mappings":"AAAAA,cAAc,EAAE,IACT,CACA,CACA,CAED,SAAUC,EAAQC,EAAqBC,GAE7C,YACqB,IAAIC,GAAoCD,EAAoB,GACxDE,EAAwCF,EAAoB,IAC5DG,EAAgDH,EAAoBI,EAAEF,GACtEG,EAA2CL,EAAoB,IAC/DM,EAAiDN,EAAoB,IACrEO,EAAyDP,EAAoBI,EAAEE,GAC/EE,EAAoDR,EAAoB,IACxES,EAA4DT,EAAoBI,EAAEI,ECT3GP,GAAA,EAAIS,IAAIL,EAAA,GACRJ,EAAA,EAAIS,IAAIP,EAAAQ,GAERZ,EAAA,EAAe,GAAIM,GAAA,GACjBO,SAEIC,KAAM,IACNC,KAAM,OACNC,UAAWR,EAAAI,EACXK,OAAO,IAGPH,KAAM,yCACNC,KAAM,UACNC,UAAWN,EAAAE,EACXK,OAAO,ODmBN,CACA,CACA,CACA,CACA,CACA,CAED,SAAUlB,EAAQmB,EAASjB,GE7CjCA,EAAA,GAEA,IAAAkB,GAAAlB,EAAA,GAEAA,EAAA,IAEAA,EAAA,IAEA,KAEA,KAGAF,GAAAmB,QAAAC,EAAAD,SFqDQ,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CAEF,SAAUnB,EAAQC,EAAqBC,GAE7C,YACAmB,QAAOC,eAAerB,EAAqB,cAAgBsB,OAAO,GAC7C,IAAIC,GAA4DtB,EAAoB,IAChFuB,EAAoEvB,EAAoBI,EAAEkB,GAC1FE,EAAsCxB,EAAoB,IAC1DyB,EAA8CzB,EAAoBI,EAAEoB,GACpEE,EAAiD1B,EAAoB,EGzE9FD,GAAA,SHgFEe,KG9EF,MH+EEa,YG5EFC,WAAAL,EAAAZ,GH+EEkB,KAAM,WACJ,OACEC,SG9EN,EH+EMC,gBACEC,gBG7ER,0BH+EMC,gBG9EN,sNH+EMC,kBACEC,QG9ER,EH+EQC,IG9ER,GH+EQC,SG9ER,KH+EQC,OG9ER,KH+EQC,WACAC,eACEC,SACAC,gBAEFC,WACEC,KACE9B,KG9EZ,MH+EY+B,MG9EZ,iBH+EYC,KG7EZ,WH+EUC,SACEjC,KG9EZ,UH+EY+B,MG9EZ,qBH+EYC,KG7EZ,WH+EUE,KACElC,KG9EZ,OH+EY+B,MG9EZ,iBH+EYC,KG7EZ,QH+EUG,OACEnC,KG9EZ,QH+EY+B,MG9EZ,mBH+EYC,KG7EZ,WH+EUI,OACEpC,KG9EZ,QH+EY+B,MG9EZ,mBH+EYC,KG7EZ,WH+EUK,SACErC,KG9EZ,UH+EY+B,MG9EZ,qBH+EYC,KG7EZ,WH+EUM,OACEtC,KG9EZ,QH+EY+B,MG9EZ,mBH+EYC,KG7EZ,WH+EUO,QACEvC,KG9EZ,SH+EY+B,MG9EZ,oBH+EYC,KG7EZ,WH+EUQ,KACExC,KG9EZ,MH+EY+B,MG9EZ,iBH+EYC,KG7EZ,WH+EUS,OACEzC,KG9EZ,QH+EY+B,MG9EZ,mBH+EYC,KG7EZ,WH+EUU,QACE1C,KG9EZ,SH+EY+B,MG9EZ,oBH+EYC,KG7EZ,WH+EUW,QACE3C,KG9EZ,SH+EY+B,MG9EZ,oBH+EYC,KG7EZ,WH+EUY,WACE5C,KG9EZ,YH+EY+B,MG9EZ,uBH+EYC,KG7EZ,QH+EUa,SACE7C,KG9EZ,UH+EY+B,MG9EZ,qBH+EYC,KG7EZ,QH+EUc,WACE9C,KG9EZ,cH+EY+B,MG9EZ,qBH+EYC,KG7EZ,WH+EUe,QACE/C,KG9EZ,SH+EY+B,MG9EZ,oBH+EYC,KG7EZ,WH+EUgB,UACEhD,KG9EZ,WH+EY+B,MG9EZ,sBH+EYC,KG7EZ,WH+EUiB,QACEjD,KG9EZ,SH+EY+B,MG9EZ,oBH+EYC,KG7EZ,WH+EUkB,WACElD,KG9EZ,WH+EY+B,MG9EZ,kBH+EYC,KG7EZ,WH+EUmB,YACEnD,KG9EZ,aH+EY+B,MG9EZ,wBH+EYC,KG7EZ,WH+EUoB,SACEpD,KG9EZ,UH+EY+B,MG9EZ,qBH+EYC,KG7EZ,QH+EUqB,OACErD,KG9EZ,QH+EY+B,MG9EZ,mBH+EYC,KG7EZ,QH+EUsB,UACEtD,KG9EZ,WH+EY+B,MG9EZ,sBH+EYC,KG3EZ,aH+EMuB,MACEC,KG9ER,cH+EQC,OACEC,MG9EV,EH+EUC,SG9EV,EH+EUC,SG9EV,EH+EUC,SG3EV,MHiFEC,SACEC,iBAAkB,WAKdC,QAAQC,IG/EhB,yBHgFQC,KAAKjD,eAAeC,gBAAkB,8BAM1CiD,cAAe,WACTD,KAAKlD,WAAY,EACnBkD,KAAKlD,SG/Eb,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","file":"static/js/app.5011394b518b62508ea7.js","sourcesContent":["webpackJsonp([1,2],[\n/* 0 */,\n/* 1 */,\n/* 2 */,\n/* 3 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_vuetify__ = __webpack_require__(55);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_vuetify___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_vuetify__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_vue_router__ = __webpack_require__(53);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_Home__ = __webpack_require__(43);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_Home___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__components_Home__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__components_Profile__ = __webpack_require__(45);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__components_Profile___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4__components_Profile__);\n\n\n\n\n\n\n__WEBPACK_IMPORTED_MODULE_0_vue__[\"a\" /* default */].use(__WEBPACK_IMPORTED_MODULE_2_vue_router__[\"a\" /* default */]);\n__WEBPACK_IMPORTED_MODULE_0_vue__[\"a\" /* default */].use(__WEBPACK_IMPORTED_MODULE_1_vuetify___default.a);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = new __WEBPACK_IMPORTED_MODULE_2_vue_router__[\"a\" /* default */]({\n  routes: [{\n    path: '/',\n    name: 'Home',\n    component: __WEBPACK_IMPORTED_MODULE_3__components_Home___default.a,\n    props: true\n  }, {\n    path: '/profile/:platform/:region/:battletag/',\n    name: 'Profile',\n    component: __WEBPACK_IMPORTED_MODULE_4__components_Profile___default.a,\n    props: true\n  }]\n});\n\n/***/ }),\n/* 4 */,\n/* 5 */,\n/* 6 */,\n/* 7 */,\n/* 8 */,\n/* 9 */,\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(39)\n\nvar Component = __webpack_require__(1)(\n  /* script */\n  __webpack_require__(29),\n  /* template */\n  __webpack_require__(51),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 11 */,\n/* 12 */,\n/* 13 */,\n/* 14 */,\n/* 15 */,\n/* 16 */,\n/* 17 */,\n/* 18 */,\n/* 19 */,\n/* 20 */,\n/* 21 */,\n/* 22 */,\n/* 23 */,\n/* 24 */,\n/* 25 */,\n/* 26 */,\n/* 27 */,\n/* 28 */,\n/* 29 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_user_search_vue__ = __webpack_require__(46);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_user_search_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__components_user_search_vue__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_axios__ = __webpack_require__(11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_axios___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_axios__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__router_index_js__ = __webpack_require__(3);\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = {\n  name: 'app',\n  components: {\n    userSearch: __WEBPACK_IMPORTED_MODULE_0__components_user_search_vue___default.a\n  },\n  data: function data() {\n    return {\n      loading: false,\n      appStyleObject: {\n        backgroundImage: '/static/Dorado_004.jpg'\n      },\n      heroQueryString: 'Ana%2CBastion%2CDVa%2CGenji%2CHanzo%2CJunkrat%2CLucio%2CMccree%2CMei%2CMercy%2CPharah%2CReaper%2CReinhardt%2CRoadhog%2CSoldier76%2CSombra%2CSymmetra%2CTracer%2CTorbjoern%2CWidowmaker%2CWinston%2CZarya%2CZenyatta',\n      currentBattletag: {\n        loaded: false,\n        tag: '',\n        platform: 'pc',\n        region: 'us',\n        profile: {},\n        combinedStats: {\n          quick: [],\n          competitive: []\n        },\n        heroStats: {\n          Ana: {\n            name: 'Ana',\n            image: 'static/Ana.png',\n            role: 'support'\n          },\n          Bastion: {\n            name: 'Bastion',\n            image: 'static/Bastion.png',\n            role: 'defense'\n          },\n          DVa: {\n            name: 'D.Va',\n            image: 'static/Dva.png',\n            role: 'tank'\n          },\n          Genji: {\n            name: 'Genji',\n            image: 'static/Genji.png',\n            role: 'offense'\n          },\n          Hanzo: {\n            name: 'Hanzo',\n            image: 'static/Hanzo.png',\n            role: 'defense'\n          },\n          Junkrat: {\n            name: 'Junkrat',\n            image: 'static/Junkrat.png',\n            role: 'defense'\n          },\n          Lucio: {\n            name: 'Lúcio',\n            image: 'static/Lucio.png',\n            role: 'support'\n          },\n          Mccree: {\n            name: 'McCree',\n            image: 'static/McCree.png',\n            role: 'offense'\n          },\n          Mei: {\n            name: 'Mei',\n            image: 'static/Mei.png',\n            role: 'defense'\n          },\n          Mercy: {\n            name: 'Mercy',\n            image: 'static/Mercy.png',\n            role: 'support'\n          },\n          Pharah: {\n            name: 'Pharah',\n            image: 'static/Pharah.png',\n            role: 'offense'\n          },\n          Reaper: {\n            name: 'Reaper',\n            image: 'static/Reaper.png',\n            role: 'offense'\n          },\n          Reinhardt: {\n            name: 'Reinhardt',\n            image: 'static/Reinhardt.png',\n            role: 'tank'\n          },\n          Roadhog: {\n            name: 'Roadhog',\n            image: 'static/Roadhog.png',\n            role: 'tank'\n          },\n          Soldier76: {\n            name: 'Soldier: 76',\n            image: 'static/Soldier.png',\n            role: 'offense'\n          },\n          Sombra: {\n            name: 'Sombra',\n            image: 'static/Sombra.png',\n            role: 'offense'\n          },\n          Symmetra: {\n            name: 'Symmetra',\n            image: 'static/Symmetra.png',\n            role: 'support'\n          },\n          Tracer: {\n            name: 'Tracer',\n            image: 'static/Tracer.png',\n            role: 'offense'\n          },\n          Torbjoern: {\n            name: 'Torbjörn',\n            image: 'static/Torb.png',\n            role: 'defense'\n          },\n          Widowmaker: {\n            name: 'Widowmaker',\n            image: 'static/Widowmaker.png',\n            role: 'defense'\n          },\n          Winston: {\n            name: 'Harambe',\n            image: 'static/Harambe.png',\n            role: 'tank'\n          },\n          Zarya: {\n            name: 'Zarya',\n            image: 'static/Zarya.png',\n            role: 'tank'\n          },\n          Zenyatta: {\n            name: 'Zenyatta',\n            image: 'static/Zenyatta.png',\n            role: 'support'\n          }\n        }\n      },\n      view: {\n        mode: 'Competitive',\n        roles: {\n          tank: true,\n          support: true,\n          offense: true,\n          defense: true\n        }\n      }\n    };\n  },\n\n  methods: {\n    renderBackground: function renderBackground() {\n      var proImage = 'static/Dorado_004.jpg';\n      var devImage = '/static/Dorado_004.jpg';\n\n      if (true) {\n        console.log('production background');\n        this.appStyleObject.backgroundImage = 'url(' + proImage + ')';\n      } else {\n        console.log('dev background');\n        this.appStyleObject.backgroundImage = 'url(' + devImage + ')';\n      }\n    },\n    toggleLoading: function toggleLoading() {\n      if (this.loading === true) {\n        this.loading = false;\n      } else if (this.loading === false) {\n        this.loading = true;\n      }\n    },\n    onClickSearch: function onClickSearch(query) {\n      this.currentBattletag.loaded = false;\n      this.currentBattletag.tag = query.battletag;\n      this.currentBattletag.platform = query.platform.toLowerCase();\n      this.currentBattletag.region = query.region.toLowerCase();\n      var battletag = this.currentBattletag.tag.replace('#', '-');\n      var platform = this.currentBattletag.platform;\n      var region = this.currentBattletag.region;\n      __WEBPACK_IMPORTED_MODULE_2__router_index_js__[\"a\" /* default */].push('/profile/' + platform + '/' + region + '/' + battletag + '/');\n    },\n    switchView: function switchView(view) {\n      this.view.mode = view;\n    },\n    loadHeroData: function loadHeroData() {\n      var _this = this;\n\n      this.loading = true;\n      this.currentBattletag.tag = this.$route.params.battletag.replace('-', '#');\n      var battletag = this.$route.params.battletag || this.currentBattletag.tag.replace('#', '-');\n      var platform = this.$route.params.platform || this.currentBattletag.platform;\n      var region = this.$route.params.region || this.currentBattletag.region;\n\n      __WEBPACK_IMPORTED_MODULE_1_axios___default.a.all([__WEBPACK_IMPORTED_MODULE_1_axios___default.a.get('https://api.lootbox.eu/' + platform + '/' + region + '/' + battletag + '/profile'), __WEBPACK_IMPORTED_MODULE_1_axios___default.a.get('https://api.lootbox.eu/' + platform + '/' + region + '/' + battletag + '/competitive/allHeroes/'), __WEBPACK_IMPORTED_MODULE_1_axios___default.a.get('https://api.lootbox.eu/' + platform + '/' + region + '/' + battletag + '/quickplay/allHeroes/'), __WEBPACK_IMPORTED_MODULE_1_axios___default.a.get('https://api.lootbox.eu/' + platform + '/' + region + '/' + battletag + '/competitive/hero/' + this.heroQueryString + '/'), __WEBPACK_IMPORTED_MODULE_1_axios___default.a.get('https://api.lootbox.eu/' + platform + '/' + region + '/' + battletag + '/quickplay/hero/' + this.heroQueryString + '/')]).then(function (response) {\n        _this.currentBattletag.profile = response[0].data.data;\n        _this.currentBattletag.combinedStats.competitive = response[1].data;\n        _this.currentBattletag.combinedStats.quickplay = response[2].data;\n\n        for (var hero in response[3].data) {\n          _this.currentBattletag.heroStats[hero].competitive = response[3].data[hero];\n        }\n        for (hero in response[4].data) {\n          _this.currentBattletag.heroStats[hero].quickplay = response[4].data[hero];\n        }\n        _this.currentBattletag.loaded = true;\n        _this.loading = false;\n      });\n    },\n    switchRoleView: function switchRoleView(role) {\n      if (role === 'all') {\n        this.view.roles.tank = true;\n        this.view.roles.support = true;\n        this.view.roles.offense = true;\n        this.view.roles.defense = true;\n      } else if (role === 'damage') {\n        this.view.roles.offense = true;\n        this.view.roles.defense = true;\n        this.view.roles.support = false;\n        this.view.roles.tank = false;\n      } else if (role === 'tank') {\n        this.view.roles.offense = false;\n        this.view.roles.defense = false;\n        this.view.roles.support = false;\n        this.view.roles.tank = true;\n      } else if (role === 'support') {\n        this.view.roles.offense = false;\n        this.view.roles.defense = false;\n        this.view.roles.support = true;\n        this.view.roles.tank = false;\n      }\n    }\n  },\n  created: function created() {\n    this.renderBackground();\n  }\n};\n\n/***/ }),\n/* 30 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = {\n  name: 'hero-card',\n  props: ['hero', 'viewMode'],\n  data: function data() {\n    return {\n      fullStats: false,\n      noCrit: ['Ana', 'Junkrat', 'Pharah', 'Symmetra', 'Reinhardt', 'Harambe', 'Zarya']\n    };\n  },\n\n  methods: {\n    toggleHeroStats: function toggleHeroStats() {\n      if (this.fullStats === true) {\n        this.fullStats = false;\n      } else if (this.fullStats === false) {\n        this.fullStats = true;\n      }\n    },\n    spliceInt: function spliceInt(string) {\n      var int = parseInt(string.replace(/,/g, ''));\n\n      return int;\n    },\n    numberWithCommas: function numberWithCommas(x) {\n      console.log('x', x);\n      var parts = x.toString().split('.');\n      parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n      return parts.join('.');\n    },\n    headerId: function headerId(hero) {\n      switch (hero.name) {\n        case 'D.Va':\n          return 'DVa';\n        case 'Lúcio':\n          return 'Lucio';\n        case 'Soldier: 76':\n          return 'Soldier76';\n        case 'Torbjörn':\n          return 'Torbjoern';\n        default:\n          return hero.name;\n      }\n    }\n  }\n};\n\n/***/ }),\n/* 31 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = {\n  name: 'home',\n  data: function data() {\n    return {\n      query: {\n        region: 'US',\n        platform: 'PC',\n        battletag: ''\n      }\n\n    };\n  },\n\n  props: ['loading', 'currentBattletag', 'viewMode', 'view'],\n  methods: {\n    onClickButton: function onClickButton(event) {\n      console.log('clicked');\n      this.$emit('clicked', this.query);\n    }\n  }\n};\n\n/***/ }),\n/* 32 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = {\n  name: 'player-header',\n  data: function data() {\n    return {};\n  },\n\n  props: ['currentBattletag', 'viewMode']\n};\n\n/***/ }),\n/* 33 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__HeroCard_vue__ = __webpack_require__(42);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__HeroCard_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__HeroCard_vue__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__PlayerHeader_vue__ = __webpack_require__(44);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__PlayerHeader_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__PlayerHeader_vue__);\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = {\n  name: 'profile',\n  data: function data() {\n    return {\n      msg: 'test'\n    };\n  },\n\n  components: {\n    heroCard: __WEBPACK_IMPORTED_MODULE_0__HeroCard_vue___default.a,\n    playerHeader: __WEBPACK_IMPORTED_MODULE_1__PlayerHeader_vue___default.a\n  },\n  props: ['loading', 'currentBattletag', 'viewMode', 'view', 'loadHeroData', 'toggleLoading'],\n  methods: {\n    switchView: function switchView(event) {\n      if (this.viewMode === 'Competitive') {\n        this.$emit('switchView', 'Quickplay');\n      } else if (this.viewMode === 'Quickplay') {\n        this.$emit('switchView', 'Competitive');\n      }\n    },\n    switchRoleView: function switchRoleView(role) {\n      this.$emit('switchRoleView', role);\n    }\n  },\n  created: function created() {\n    if (!this.currentBattletag.loaded || this.currentBattletag.tag !== this.$route.params.battletag.replace('-', '#')) {\n      this.toggleLoading();\n      this.loadHeroData();\n    }\n  },\n  watch: {\n    '$route': 'loadHeroData'\n  }\n};\n\n/***/ }),\n/* 34 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = {\n  name: 'user-search',\n  data: function data() {\n    return {\n      query: {\n        region: 'US',\n        platform: 'PC',\n        battletag: ''\n      }\n    };\n  },\n\n  methods: {\n    onClickButton: function onClickButton(event) {\n      this.$emit('clicked', this.query);\n    }\n  }\n};\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 41 */,\n/* 42 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(36)\n\nvar Component = __webpack_require__(1)(\n  /* script */\n  __webpack_require__(30),\n  /* template */\n  __webpack_require__(48),\n  /* scopeId */\n  \"data-v-3261f70e\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(35)\n\nvar Component = __webpack_require__(1)(\n  /* script */\n  __webpack_require__(31),\n  /* template */\n  __webpack_require__(47),\n  /* scopeId */\n  \"data-v-313bdd43\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(37)\n\nvar Component = __webpack_require__(1)(\n  /* script */\n  __webpack_require__(32),\n  /* template */\n  __webpack_require__(49),\n  /* scopeId */\n  \"data-v-631b6c9c\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(40)\n\nvar Component = __webpack_require__(1)(\n  /* script */\n  __webpack_require__(33),\n  /* template */\n  __webpack_require__(52),\n  /* scopeId */\n  \"data-v-ce282216\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(38)\n\nvar Component = __webpack_require__(1)(\n  /* script */\n  __webpack_require__(34),\n  /* template */\n  __webpack_require__(50),\n  /* scopeId */\n  \"data-v-767ff654\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('v-container', {\n    attrs: {\n      \"fluid\": \"\"\n    }\n  }, [_c('v-row', [_c('v-col', {\n    attrs: {\n      \"md12\": \"\"\n    }\n  }, [_c('v-row', [_c('v-col', {\n    attrs: {\n      \"md4\": \"\"\n    }\n  }), _vm._v(\" \"), _c('v-col', {\n    attrs: {\n      \"md4\": \"\"\n    }\n  }, [_c('v-card', {\n    attrs: {\n      \"id\": \"battletagCard\"\n    }\n  }, [_c('v-row', {\n    attrs: {\n      \"id\": \"battletagCardInputRow\"\n    }\n  }, [_c('v-col', {\n    attrs: {\n      \"md2\": \"\"\n    }\n  }, [_c('p', [_vm._v(\"Platform\")]), _vm._v(\" \"), _c('select', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.query.platform),\n      expression: \"query.platform\"\n    }],\n    staticClass: \"select\",\n    attrs: {\n      \"name\": \"Platform\"\n    },\n    on: {\n      \"change\": function($event) {\n        var $$selectedVal = Array.prototype.filter.call($event.target.options, function(o) {\n          return o.selected\n        }).map(function(o) {\n          var val = \"_value\" in o ? o._value : o.value;\n          return val\n        });\n        _vm.query.platform = $event.target.multiple ? $$selectedVal : $$selectedVal[0]\n      }\n    }\n  }, [_c('option', [_vm._v(\"PC\")]), _vm._v(\" \"), _c('option', [_vm._v(\"XBL\")]), _vm._v(\" \"), _c('option', [_vm._v(\"PSN\")])])]), _vm._v(\" \"), _c('v-col', {\n    attrs: {\n      \"md2\": \"\"\n    }\n  }, [_c('p', [_vm._v(\"Region\")]), _vm._v(\" \"), _c('select', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.query.region),\n      expression: \"query.region\"\n    }],\n    staticClass: \"select\",\n    attrs: {\n      \"name\": \"Region\"\n    },\n    on: {\n      \"change\": function($event) {\n        var $$selectedVal = Array.prototype.filter.call($event.target.options, function(o) {\n          return o.selected\n        }).map(function(o) {\n          var val = \"_value\" in o ? o._value : o.value;\n          return val\n        });\n        _vm.query.region = $event.target.multiple ? $$selectedVal : $$selectedVal[0]\n      }\n    }\n  }, [_c('option', [_vm._v(\"US\")]), _vm._v(\" \"), _c('option', [_vm._v(\"EU\")]), _vm._v(\" \"), _c('option', [_vm._v(\"CN\")]), _vm._v(\" \"), _c('option', [_vm._v(\"KR\")])])]), _vm._v(\" \"), _c('v-col', {\n    staticClass: \"battletagCol\",\n    attrs: {\n      \"md8\": \"\"\n    }\n  }, [_c('v-row', [_c('p', [_vm._v(\"Battletag\")])]), _vm._v(\" \"), _c('v-row', {\n    attrs: {\n      \"id\": \"inputRow\"\n    }\n  }, [_c('div', {\n    attrs: {\n      \"id\": \"inputContainer\"\n    }\n  }, [_c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model.trim\",\n      value: (_vm.query.battletag),\n      expression: \"query.battletag\",\n      modifiers: {\n        \"trim\": true\n      }\n    }],\n    attrs: {\n      \"type\": \"text\",\n      \"name\": \"user-search\",\n      \"label\": \"Search\",\n      \"placeholder\": \"Battletag is case sensitive!\"\n    },\n    domProps: {\n      \"value\": (_vm.query.battletag)\n    },\n    on: {\n      \"keyup\": function($event) {\n        if (!('button' in $event) && _vm._k($event.keyCode, \"enter\", 13)) { return null; }\n        _vm.onClickButton($event)\n      },\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.query.battletag = $event.target.value.trim()\n      },\n      \"blur\": function($event) {\n        _vm.$forceUpdate()\n      }\n    }\n  }), _vm._v(\" \"), _c('button', {\n    attrs: {\n      \"id\": \"submit\"\n    },\n    on: {\n      \"click\": _vm.onClickButton\n    }\n  }, [_vm._v(\"Onward\")])])])], 1)], 1)], 1)], 1), _vm._v(\" \"), _c('v-col', {\n    attrs: {\n      \"md4\": \"\"\n    }\n  })], 1)], 1)], 1)], 1)\n},staticRenderFns: []}\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('v-card', {\n    staticClass: \"heroCard\"\n  }, [_c('v-card-row', {\n    staticClass: \"cardTitleRow\",\n    attrs: {\n      \"id\": _vm.headerId(_vm.hero)\n    }\n  }, [_c('v-card-title', {\n    on: {\n      \"click\": _vm.toggleHeroStats\n    }\n  }, [_c('span', {\n    staticClass: \"white--text heroName\"\n  }, [_vm._v(_vm._s(_vm.hero.name))]), _vm._v(\" \"), _c('v-spacer'), _vm._v(\" \"), _c('span', [(_vm.fullStats) ? _c('v-icon', [_vm._v(\"expand_more\")]) : _vm._e(), _vm._v(\" \"), (!_vm.fullStats) ? _c('v-icon', [_vm._v(\"expand_less\")]) : _vm._e()], 1)], 1)], 1), _vm._v(\" \"), _c('v-card-row', [_c('v-card-column', {\n    attrs: {\n      \"id\": \"avatar\"\n    }\n  }, [_c('v-card-row', {\n    attrs: {\n      \"img\": _vm.hero.image\n    }\n  })], 1), _vm._v(\" \"), _c('v-card-column', [_c('v-card-row', [_c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Time Played\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive.TimePlayed || '---') + \" \")])]) : _vm._e(), _vm._v(\" \"), (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Time Played\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay.TimePlayed || '---'))])]) : _vm._e()], 1), _vm._v(\" \"), _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Games Won\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive.GamesWon || '---') + \" \")])]) : _vm._e(), _vm._v(\" \"), (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Games Won\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay.GamesWon || '---') + \" \")])]) : _vm._e()], 1), _vm._v(\" \"), _c('v-card-column', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Competitive'),\n      expression: \"viewMode ==='Competitive'\"\n    }]\n  }, [_c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Games Lost\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive.GamesLost || '---') + \" \")])])], 1), _vm._v(\" \"), _c('v-card-column', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Competitive'),\n      expression: \"viewMode ==='Competitive'\"\n    }]\n  }, [_c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Win %\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive.WinPercentage || '---') + \" \")])])], 1), _vm._v(\" \"), _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Time on Fire\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive.TimeSpentonFire || '---') + \" \")])]) : _vm._e(), _vm._v(\" \"), (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Time on Fire\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay.TimeSpentonFire || '---') + \" \")])]) : _vm._e()], 1), _vm._v(\" \"), _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Fire\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['TimeSpentonFire-Average'] || '---') + \" \")])]) : _vm._e(), _vm._v(\" \"), (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Fire\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['TimeSpentonFire-Average'] || '---') + \" \")])]) : _vm._e()], 1), _vm._v(\" \"), _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Fire\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['TimeSpentonFire-MostinGame'] || '---') + \" \")])]) : _vm._e(), _vm._v(\" \"), (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Fire\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['TimeSpentonFire-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1), _vm._v(\" \"), _c('v-card-column', {\n    staticClass: \"medalColumn\"\n  }, [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text medalText\"\n  }, [_c('v-icon', {\n    staticClass: \"goldMedal\"\n  }, [_vm._v(\"fiber_manual_record\")]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['Medals-Gold'] || '---') + \" \")])], 1) : _vm._e(), _vm._v(\" \"), (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text medalText\"\n  }, [_c('v-icon', {\n    staticClass: \"goldMedal\"\n  }, [_vm._v(\"fiber_manual_record\")]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['Medals-Gold'] || '---') + \" \")])], 1) : _vm._e()], 1), _vm._v(\" \"), _c('v-card-column', {\n    staticClass: \"medalColumn\"\n  }, [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text medalText\"\n  }, [_c('v-icon', {\n    staticClass: \"silverMedal\"\n  }, [_vm._v(\"fiber_manual_record\")]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['Medals-Silver'] || '---') + \" \")])], 1) : _vm._e(), _vm._v(\" \"), (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text medalText\"\n  }, [_c('v-icon', {\n    staticClass: \"silverMedal\"\n  }, [_vm._v(\"fiber_manual_record\")]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['Medals-Silver'] || '---') + \" \")])], 1) : _vm._e()], 1), _vm._v(\" \"), _c('v-card-column', {\n    staticClass: \"medalColumn\"\n  }, [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text medalText\"\n  }, [_c('v-icon', {\n    staticClass: \"bronzeMedal\"\n  }, [_vm._v(\"fiber_manual_record\")]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['Medals-Bronze'] || '---') + \" \")])], 1) : _vm._e(), _vm._v(\" \"), (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text medalText\"\n  }, [_c('v-icon', {\n    staticClass: \"bronzeMedal\"\n  }, [_vm._v(\"fiber_manual_record\")]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['Medals-Bronze'] || '---') + \" \")])], 1) : _vm._e()], 1), _vm._v(\" \"), _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Cards\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive.Cards || _vm.hero.competitive.Card || '---') + \" \")])]) : _vm._e(), _vm._v(\" \"), (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Cards\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay.Cards || _vm.hero.quickplay.Card || '---') + \" \")])]) : _vm._e()], 1), _vm._v(\" \"), _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Elims\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive.Eliminations || _vm.hero.competitive.Elimination || '---') + \" \")])]) : _vm._e(), _vm._v(\" \"), (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Elims\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay.Eliminations || _vm.hero.quickplay.Elimination || '---') + \" \")])]) : _vm._e()], 1), _vm._v(\" \"), _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Elims\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['Eliminations-Average'] || '---') + \" \")])]) : _vm._e(), _vm._v(\" \"), (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Elims\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['Eliminations-Average'] || '---') + \" \")])]) : _vm._e()], 1), _vm._v(\" \"), _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Deaths\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive.Deaths || _vm.hero.competitive.Death || '---') + \" \")])]) : _vm._e(), _vm._v(\" \"), (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Deaths\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay.Deaths || _vm.hero.quickplay.Death || '---') + \" \")])]) : _vm._e()], 1), _vm._v(\" \"), _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Deaths\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['Deaths-Average'] || '---') + \" \")])]) : _vm._e(), _vm._v(\" \"), (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Deaths\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['Deaths-Average'] || '---') + \" \")])]) : _vm._e()], 1), _vm._v(\" \"), _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Elims/Life\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['EliminationsperLife'] || '---') + \" \")])]) : _vm._e(), _vm._v(\" \"), (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Elims/Life\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['EliminationsperLife'] || '---') + \" \")])]) : _vm._e()], 1), _vm._v(\" \"), _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Best Streak\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['KillStreak-Best'] || '---') + \" \")])]) : _vm._e(), _vm._v(\" \"), (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Best Streak\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['KillStreak-Best'] || '---') + \" \")])]) : _vm._e()], 1), _vm._v(\" \"), _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Weapon Accuracy\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['WeaponAccuracy'] || '---') + \" \")])]) : _vm._e(), _vm._v(\" \"), (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Weapon Accuracy\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['WeaponAccuracy'] || '---') + \" \")])]) : _vm._e()], 1), _vm._v(\" \"), _c('v-card-column', [_c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Competitive'),\n      expression: \"viewMode ==='Competitive'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Damage Done\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['DamageDone'] || '---') + \" \")])]), _vm._v(\" \"), _c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Quickplay'),\n      expression: \"viewMode ==='Quickplay'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Damage Done\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['DamageDone'] || '---') + \" \")])])], 1), _vm._v(\" \"), _c('v-card-column', [_c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Competitive'),\n      expression: \"viewMode ==='Competitive'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Damage\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['DamageDone-Average'] || '---') + \" \")])]), _vm._v(\" \"), _c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Quickplay'),\n      expression: \"viewMode ==='Quickplay'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Damage\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['DamageDone-Average'] || '---') + \" \")])])], 1), _vm._v(\" \"), _c('v-card-column', [_c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Competitive'),\n      expression: \"viewMode ==='Competitive'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Damage\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['DamageDone-MostinGame'] || '---') + \" \")])]), _vm._v(\" \"), _c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Quickplay'),\n      expression: \"viewMode ==='Quickplay'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Damage\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['DamageDone-MostinGame'] || '---') + \" \")])])], 1)], 1)], 1)], 1), _vm._v(\" \"), _c('hr'), _vm._v(\" \"), (_vm.hero.name !== 'Symmetra') ? _c('v-card-row', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.fullStats),\n      expression: \"fullStats\"\n    }],\n    staticClass: \"roleStatRow\"\n  }, [_c('v-card-column', [_c('v-card-row', {\n    staticClass: \"statHeader\"\n  }, [_c('p', [_vm._v(_vm._s(_vm.hero.role) + \" Stats\")])]), _vm._v(\" \"), _c('v-card-row', [(_vm.hero.role === 'support') ? _c('v-card-column', [_c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Competitive'),\n      expression: \"viewMode ==='Competitive'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Healing Done\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['HealingDone'] || '---') + \" \")])]), _vm._v(\" \"), _c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Quickplay'),\n      expression: \"viewMode ==='Quickplay'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Healing Done\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['HealingDone'] || '---') + \" \")])])], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.role === 'support') ? _c('v-card-column', [_c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Competitive'),\n      expression: \"viewMode ==='Competitive'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Healing\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['HealingDone-Average'] || '---') + \" \")])]), _vm._v(\" \"), _c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Quickplay'),\n      expression: \"viewMode ==='Quickplay'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Healing\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['HealingDone-Average'] || '---') + \" \")])])], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.role === 'support') ? _c('v-card-column', [_c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Competitive'),\n      expression: \"viewMode ==='Competitive'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Healing in Game\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['HealingDone-MostinGame'] || '---') + \" \")])]), _vm._v(\" \"), _c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Quickplay'),\n      expression: \"viewMode ==='Quickplay'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Healing in Game\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['HealingDone-MostinGame'] || '---') + \" \")])])], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.role === 'support') ? _c('v-card-column', [_c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Competitive'),\n      expression: \"viewMode ==='Competitive'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Healing in Life\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['HealingDone-MostinLife'] || '---') + \" \")])]), _vm._v(\" \"), _c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Quickplay'),\n      expression: \"viewMode ==='Quickplay'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Healing in Life\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['HealingDone-MostinLife'] || '---') + \" \")])])], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.role === 'support') ? _c('v-card-column', [_c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Competitive'),\n      expression: \"viewMode ==='Competitive'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Self Healing\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['SelfHealing'] || '---') + \" \")])]), _vm._v(\" \"), _c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Quickplay'),\n      expression: \"viewMode ==='Quickplay'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Self Healing\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['SelfHealing'] || '---') + \" \")])])], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.role === 'support') ? _c('v-card-column', [_c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Competitive'),\n      expression: \"viewMode ==='Competitive'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Self Healing\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['SelfHealing-Average'] || '---') + \" \")])]), _vm._v(\" \"), _c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Quickplay'),\n      expression: \"viewMode ==='Quickplay'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Self Healing\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['SelfHealing-Average'] || '---') + \" \")])])], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.role === 'support') ? _c('v-card-column', [_c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Competitive'),\n      expression: \"viewMode ==='Competitive'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"D. Assists\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['DefensiveAssists'] || '---') + \" \")])]), _vm._v(\" \"), _c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Quickplay'),\n      expression: \"viewMode ==='Quickplay'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"D. Assists\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['DefensiveAssists'] || '---') + \" \")])])], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.role === 'support') ? _c('v-card-column', [_c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Competitive'),\n      expression: \"viewMode ==='Competitive'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg D. Assists\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['DefensiveAssists-Average'] || '---') + \" \")])]), _vm._v(\" \"), _c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Quickplay'),\n      expression: \"viewMode ==='Quickplay'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg D. Assists\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['DefensiveAssists-Average'] || '---') + \" \")])])], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.role === 'support') ? _c('v-card-column', [_c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Competitive'),\n      expression: \"viewMode ==='Competitive'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most D. Assists\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['DefensiveAssists-MostinGame'] || '---') + \" \")])]), _vm._v(\" \"), _c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Quickplay'),\n      expression: \"viewMode ==='Quickplay'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most D. Assists\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['DefensiveAssists-MostinGame'] || '---') + \" \")])])], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.role === 'support') ? _c('v-card-column', [_c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Competitive'),\n      expression: \"viewMode ==='Competitive'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"O. Assists\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['OffensiveAssists'] || '---') + \" \")])]), _vm._v(\" \"), _c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Quickplay'),\n      expression: \"viewMode ==='Quickplay'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"O. Assists\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['OffensiveAssists'] || '---') + \" \")])])], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.role === 'support') ? _c('v-card-column', [_c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Competitive'),\n      expression: \"viewMode ==='Competitive'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg O. Assists\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['OffensiveAssists-Average'] || '---') + \" \")])]), _vm._v(\" \"), _c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Quickplay'),\n      expression: \"viewMode ==='Quickplay'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg O. Assists\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['OffensiveAssists-Average'] || '---') + \" \")])])], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.role === 'support') ? _c('v-card-column', [_c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Competitive'),\n      expression: \"viewMode ==='Competitive'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most O. Assists\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['OffensiveAssists-MostinGame'] || '---') + \" \")])]), _vm._v(\" \"), _c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Quickplay'),\n      expression: \"viewMode ==='Quickplay'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most O. Assists\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['OffensiveAssists-MostinGame'] || '---') + \" \")])])], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.role === 'tank') ? _c('v-card-column', [_c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Competitive'),\n      expression: \"viewMode ==='Competitive'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Damage Blocked\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['DamageBlocked'] || '---') + \" \")])]), _vm._v(\" \"), _c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Quickplay'),\n      expression: \"viewMode ==='Quickplay'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Damage Blocked\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['DamageBlocked'] || '---') + \" \")])])], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.role === 'tank') ? _c('v-card-column', [_c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Competitive'),\n      expression: \"viewMode ==='Competitive'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Damage Blocked\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['DamageBlocked-Average'] || '---') + \" \")])]), _vm._v(\" \"), _c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Quickplay'),\n      expression: \"viewMode ==='Quickplay'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Damage Blocked\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['DamageBlocked-Average'] || '---') + \" \")])])], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.role === 'tank') ? _c('v-card-column', [_c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Competitive'),\n      expression: \"viewMode ==='Competitive'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Damage Blocked\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['DamageBlocked-MostinGame'] || '---') + \" \")])]), _vm._v(\" \"), _c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Quickplay'),\n      expression: \"viewMode ==='Quickplay'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Damage Blocked\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['DamageBlocked-MostinGame'] || '---') + \" \")])])], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.role === 'tank') ? _c('v-card-column', [_c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Competitive'),\n      expression: \"viewMode ==='Competitive'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Objective Time\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['ObjectiveTime'] || '---') + \" \")])]), _vm._v(\" \"), _c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Quickplay'),\n      expression: \"viewMode ==='Quickplay'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Objective Time\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['ObjectiveTime'] || '---') + \" \")])])], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.role === 'tank') ? _c('v-card-column', [_c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Competitive'),\n      expression: \"viewMode ==='Competitive'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Obj Time\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['ObjectiveTime-Average'] || '---') + \" \")])]), _vm._v(\" \"), _c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Quickplay'),\n      expression: \"viewMode ==='Quickplay'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Obj Time\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['ObjectiveTime-Average'] || '---') + \" \")])])], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.role === 'tank') ? _c('v-card-column', [_c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Competitive'),\n      expression: \"viewMode ==='Competitive'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Obj Time\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['ObjectiveTime-MostinGame'] || '---') + \" \")])]), _vm._v(\" \"), _c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Quickplay'),\n      expression: \"viewMode ==='Quickplay'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Obj Time\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['ObjectiveTime-MostinGame'] || '---') + \" \")])])], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.role === 'tank') ? _c('v-card-column', [_c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Competitive'),\n      expression: \"viewMode ==='Competitive'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Objective Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['ObjectiveKills'] || '---') + \" \")])]), _vm._v(\" \"), _c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Quickplay'),\n      expression: \"viewMode ==='Quickplay'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Objective Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['ObjectiveKills'] || '---') + \" \")])])], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.role === 'tank') ? _c('v-card-column', [_c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Competitive'),\n      expression: \"viewMode ==='Competitive'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Obj Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['ObjectiveKills-Average'] || '---') + \" \")])]), _vm._v(\" \"), _c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Quickplay'),\n      expression: \"viewMode ==='Quickplay'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Obj Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['ObjectiveKills-Average'] || '---') + \" \")])])], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.role === 'tank') ? _c('v-card-column', [_c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Competitive'),\n      expression: \"viewMode ==='Competitive'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Obj Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['ObjectiveKills-MostinGame'] || '---') + \" \")])]), _vm._v(\" \"), _c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Quickplay'),\n      expression: \"viewMode ==='Quickplay'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Obj Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['ObjectiveKills-MostinGame'] || '---') + \" \")])])], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.role === 'offense' || _vm.hero.role === 'defense') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Solo Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['SoloKills'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Solo Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['SoloKills'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.role === 'offense' || _vm.hero.role === 'defense') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Solo Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['SoloKills-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Solo Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['SoloKills-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.role === 'offense' || _vm.hero.role === 'defense') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Solo Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['SoloKills-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Solo Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['SoloKills-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.role === 'offense' || _vm.hero.role === 'defense') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Final Blows\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['FinalBlows'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Final Blows\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['FinalBlows'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.role === 'offense' || _vm.hero.role === 'defense') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Final Blows\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['FinalBlows-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Final Blows\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['FinalBlows-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.role === 'offense' || _vm.hero.role === 'defense') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Final Blows\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['FinalBlows-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Final Blows\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['FinalBlows-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.role === 'offense' || _vm.hero.role === 'defense') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Melee Final Blows\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['MeleeFinalBlows'] || _vm.hero.competitive['MeleeFinalBlow'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Melee Final Blows\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['MeleeFinalBlows'] || _vm.hero.quickplay['MeleeFinalBlow'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.role === 'offense' || _vm.hero.role === 'defense') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Melee Final Blows\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['MeleeFinalBlows-Average'] || _vm.hero.competitive['MeleeFinalBlow-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Melee Final Blows\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['MeleeFinalBlows-Average'] || _vm.hero.quickplay['MeleeFinalBlow-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.role === 'offense' || _vm.hero.role === 'defense') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Melee Final Blows\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['MeleeFinalBlows-MostinGame'] || _vm.hero.competitive['MeleeFinalBlow-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Melee Final Blows\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['MeleeFinalBlows-MostinGame'] || _vm.hero.quickplay['MeleeFinalBlow-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e()], 1)], 1)], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name !== 'Symmetra') ? _c('hr') : _vm._e(), _vm._v(\" \"), _c('v-card-row', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.fullStats),\n      expression: \"fullStats\"\n    }],\n    staticClass: \"heroStatRow\"\n  }, [_c('v-card-column', [_c('v-card-row', {\n    staticClass: \"statHeader\"\n  }, [_c('p', [_vm._v(\"Hero Stats\")])]), _vm._v(\" \"), _c('v-card-row', [(_vm.noCrit.indexOf(_vm.hero.name) < 0) ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Crits\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['CriticalHits'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Crits\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['CriticalHits'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.noCrit.indexOf(_vm.hero.name) < 0) ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Crits\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['CriticalHits-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Crits\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['CriticalHits-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.noCrit.indexOf(_vm.hero.name) < 0) ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Crits\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['CriticalHits-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Crits\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['CriticalHits-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.noCrit.indexOf(_vm.hero.name) < 0) ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Crit %\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['CriticalHitAccuracy'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Crit %\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['CriticalHitAccuracy'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Ana') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Enemies Slept\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['EnemiesSlept'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Enemies Slept\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['EnemiesSlept'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Ana') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Enemies Slept\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['EnemiesSlept-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Enemies Slept\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['EnemiesSlept-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Ana') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Enemies Slept\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['EnemiesSlept-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Enemies Slept\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['EnemiesSlept-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Ana') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Nano Boosts\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['NanoBoostsApplied'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Nano Boosts\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['NanoBoostsApplied'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Ana') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Nano Boosts\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['NanoBoostsApplied-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Nano Boosts\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['NanoBoostsApplied-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Ana') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Nano Boosts\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['NanoBoostsApplied-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Nano Boosts\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['NanoBoostsApplied-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Ana') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Nano Boost Assits\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['NanoBoostAssists'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Nano Boost Assits\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['NanoBoostAssists'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Ana') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Nano Assits\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['NanoBoostAssists-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Nano Assits\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['NanoBoostAssists-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Ana') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Nano Assits\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['NanoBoostAssists-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Nano Assits\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['NanoBoostAssists-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Ana') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Scoped Hits\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['ScopedHits'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Scoped Hits\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['ScopedHits'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Ana') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Scoped Accuracy\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['ScopedAccuracy'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Scoped Accuracy\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['ScopedAccuracy'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Ana') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Scoped Best\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['ScopedAccuracy-BestinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Scoped Best\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['ScopedAccuracy-BestinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Ana') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Unscoped Hits\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['UnscopedShots'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Unscoped Hits\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['UnscopedShots'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Ana') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Unscoped Accuracy\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['UnscopedAccuracy'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Unscoped Accuracy\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['UnscopedAccuracy'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Ana') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Unscoped Best\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['UnscopedAccuracy-BestinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Unscoped Best\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['UnscopedAccuracy-BestinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Bastion') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Shots Fired\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['ShotsFired'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Shots Fired\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['ShotsFired'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Bastion') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Shots Hit\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['ShotsHit'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Shots Hit\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['ShotsHit'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Bastion') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Recon Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['ReconKills'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Recon Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['ReconKills'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Bastion') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Recon Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['ReconKills-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Recon Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['ReconKills-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Bastion') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Recon Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['ReconKills-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Recon Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['ReconKills-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Bastion') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Sentry Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['SentryKills'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Sentry Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['SentryKills'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Bastion') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Sentry Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['SentryKills-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Sentry Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['SentryKills-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Bastion') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Sentry Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['SentryKills-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Sentry Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['SentryKills-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Bastion') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Tank Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['TankKills'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Tank Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['TankKills'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Bastion') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Tank Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['TankKills-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Tank Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['TankKills-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Bastion') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Tank Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['TankKills-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Tank Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['TankKills-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Bastion') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Self Healing\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['SelfHealing'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Self Healing\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['SelfHealing'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Bastion') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Self Healing\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['SelfHealing-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Self Healing\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['SelfHealing-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Bastion') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Self Healing\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['SelfHealing-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Self Healing\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['SelfHealing-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'D.Va') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Mech Deaths\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['MechDeaths'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Mech Deaths\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['MechDeaths'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'D.Va') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Mechs Called\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['MechsCalled'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Mechs Called\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['MechsCalled'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'D.Va') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Self-Destruct Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['Self-DestructKills'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Self-Destruct Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['Self-DestructKills'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'D.Va') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Self-Destruct Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['Self-DestructKills-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Self-Destruct Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['Self-DestructKills-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'D.Va') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Self-Destruct Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['Self-DestructKills-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Self-Destruct Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['Self-DestructKills-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Genji') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Dragonblades\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['Dragonblades'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Dragonblades\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['Dragonblades'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Genji') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Dragonblade Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['DragonbladeKills'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Dragonblade Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['DragonbladeKills'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Genji') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Dragonblade Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['DragonbladeKills-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Dragonblade Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['DragonbladeKills-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Genji') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Dragonblade Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['DragonbladeKills-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Dragonblade Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['DragonbladeKills-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Hanzo') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Dragonstrike Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['DragonstrikeKills'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Dragonstrike Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['DragonstrikeKills'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Hanzo') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Dragonstrike Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['DragonstrikeKills-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Dragonstrike Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['DragonstrikeKills-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Hanzo') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Dragonstrike Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['DragonstrikeKills-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Dragonstrike Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['DragonstrikeKills-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Hanzo') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Scatter Arrow Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['ScatterArrowKills'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Scatter Arrow Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['ScatterArrowKills'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Hanzo') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Scatter Arrow Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['ScatterArrowKills-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Scatter Arrow Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['ScatterArrowKills-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Hanzo') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Scatter Arrow Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['ScatterArrowKills-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Scatter Arrow Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['ScatterArrowKills-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Junkrat') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Enemies Trapped\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['EnemiesTrapped'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Enemies Trapped\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['EnemiesTrapped'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Junkrat') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Enemies Trapped\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['EnemiesTrapped-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Enemies Trapped\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['EnemiesTrapped-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Junkrat') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"RIP Tire Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['RIP-TireKills'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"RIP Tire Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['RIP-TireKills'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Junkrat') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg RIP Tire Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['RIP-TireKills-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg RIP Tire Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['RIP-TireKills-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Junkrat') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most RIP Tire Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['RIP-TireKills-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most RIP Tire Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['RIP-TireKills-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Lúcio') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Environmental Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['EnvironmentalKills'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Environmental Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['EnvironmentalKills'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Lúcio') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Sound Barriers\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['SoundBarriersProvided'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Sound Barriers\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['SoundBarriersProvided'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Lúcio') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Sound Barriers\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['SoundBarriersProvided-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Sound Barriers\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['SoundBarriersProvided-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Lúcio') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Sound Barriers\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['SoundBarriersProvided-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Sound Barriers\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['SoundBarriersProvided-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'McCree') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Fan the Hammer Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['FantheHammerKills'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Fan the Hammer Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['FantheHammerKills'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'McCree') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Fan the Hammer Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['FantheHammerKills-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Fan the Hammer Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['FantheHammerKills-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'McCree') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Fan the Hammer Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['FantheHammerKills-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Fan the Hammer Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['FantheHammerKills-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'McCree') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Deadeye Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['DeadeyeKills'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Deadeye Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['DeadeyeKills'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'McCree') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Deadeye Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['DeadeyeKills-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Deadeye Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['DeadeyeKills-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'McCree') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Deadeye Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['DeadeyeKills-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Deadeye Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['DeadeyeKills-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Mei') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Blizzard Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['BlizzardKills'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Blizzard Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['BlizzardKills'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Mei') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Blizzard Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['BlizzardKills-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Blizzard Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['BlizzardKills-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Mei') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Blizzard Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['BlizzardKills-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Blizzard Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['BlizzardKills-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Mei') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Enemies Frozen\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['EnemiesFrozen'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Enemies Frozen\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['EnemiesFrozen'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Mei') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Enemies Frozen\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['EnemiesFrozen-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Enemies Frozen\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['EnemiesFrozen-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Mei') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Enemies Frozen\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['EnemiesFrozen-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Enemies Frozen\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['EnemiesFrozen-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Mercy') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Players Resurrected\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['PlayersResurrected'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Players Resurrected\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['PlayersResurrected'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Mercy') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Players Resurrected\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['PlayersResurrected-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Players Resurrected\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['PlayersResurrected-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Mercy') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Players Resurrected\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['PlayersResurrected-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Players Resurrected\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['PlayersResurrected-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Mercy') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Damage Amplified\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['DamageAmplified'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Damage Amplified\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['DamageAmplified'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Mercy') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Damage Amplified\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['DamageAmplified-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Damage Amplified\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['DamageAmplified-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Mercy') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Damage Amplified\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['DamageAmplified-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Damage Amplified\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['DamageAmplified-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Mercy') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Blaster Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['BlasterKills'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Blaster Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['BlasterKills'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Mercy') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Blaster Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['BlasterKills-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Blaster Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['BlasterKills-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Mercy') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Blaster Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['BlasterKills-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Blaster Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['BlasterKills-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Pharah') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Direct Hits\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['RocketDirectHits'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Direct Hits\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['RocketDirectHits'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Pharah') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Direct Hits\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['RocketDirectHits-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Direct Hits\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['RocketDirectHits-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Pharah') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Direct Hits\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['RocketDirectHits-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Direct Hits\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['RocketDirectHits-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Pharah') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Barrage Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['BarrageKills'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Barrage Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['BarrageKills'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Pharah') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Barrage Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['BarrageKills-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Barrage Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['BarrageKills-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Pharah') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Barrage Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['BarrageKills-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Barrage Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['BarrageKills-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Reaper') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Souls Consumed\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['SoulsConsumed'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Souls Consumed\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['SoulsConsumed'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Reaper') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Souls Consumed\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['SoulsConsumed-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Souls Consumed\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['SoulsConsumed-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Reaper') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Souls Consumed\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['SoulsConsumed-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Souls Consumed\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['SoulsConsumed-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Reaper') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Death Blossom Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['DeathBlossomKills'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Death Blossom Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['DeathBlossomKills'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Reaper') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Death Blossom Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['DeathBlossomKills-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Death Blossom Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['DeathBlossomKills-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Reaper') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Death Blossom Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['DeathBlossomKills-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Death Blossom Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['DeathBlossomKills-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Reinhardt') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Charge Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['ChargeKills'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Charge Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['ChargeKills'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Reinhardt') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Charge Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['ChargeKills-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Charge Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['ChargeKills-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Reinhardt') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Charge Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['ChargeKills-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Charge Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['ChargeKills-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Reinhardt') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Fire Strike Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['FireStrikeKills'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Fire Strike Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['FireStrikeKills'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Reinhardt') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Fire Strike Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['FireStrikeKills-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Fire Strike Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['FireStrikeKills-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Reinhardt') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Fire Strike Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['FireStrikeKills-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Fire Strike Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['FireStrikeKills-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Reinhardt') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Earthshatter Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['EarthshatterKills'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Earthshatter Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['EarthshatterKills'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Reinhardt') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Earthshatter Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['EarthshatterKills-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Earthshatter Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['EarthshatterKills-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Reinhardt') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Earthshatter Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['EarthshatterKills-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Earthshatter Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['EarthshatterKills-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Roadhog') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Hooks Attempted\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['HooksAttempted'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Hooks Attempted\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['HooksAttempted'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Roadhog') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Hook Accuracy\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['HookAccuracy'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Hook Accuracy\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['HookAccuracy'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Roadhog') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Best Hook Accuracy\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['HookAccuracy-BestinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Best Hook Accuracy\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['HookAccuracy-BestinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Roadhog') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Enemies Hooked\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['EnemiesHooked'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Enemies Hooked\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['EnemiesHooked'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Roadhog') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Enemies Hooked\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['EnemiesHooked-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Enemies Hooked\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['EnemiesHooked-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Roadhog') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Enemies Hooked\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['EnemiesHooked-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Enemies Hooked\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['EnemiesHooked-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Roadhog') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Whole Hog Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['WholeHogKills'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Whole Hog Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['WholeHogKills'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Roadhog') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Whole Hog Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['WholeHogKills-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Whole Hog Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['WholeHogKills-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Roadhog') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Whole Hog Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['WholeHogKills-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Whole Hog Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['WholeHogKills-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Soldier: 76') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Helix Rocket Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['HelixRocketKIlls'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Helix Rocket Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['HelixRocketKIlls'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Soldier: 76') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg H. Rocket Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['HelixRocketKIlls-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg H. Rocket Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['HelixRocketKIlls-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Soldier: 76') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most H. Rocket Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['HelixRocketKIlls-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most H. Rocket Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['HelixRocketKIlls-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Soldier: 76') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Tactical Visor Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['TacticalVisorKills'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Tactical Visor Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['TacticalVisorKills'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Soldier: 76') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg T. Visor Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['TacticalVisorKills-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg T. Visor Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['TacticalVisorKills-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Soldier: 76') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most T. Visor Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['TacticalVisorKills-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most T. Visor Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['TacticalVisorKills-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Soldier: 76') ? _c('v-card-column', [_c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Competitive'),\n      expression: \"viewMode ==='Competitive'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Healing Done\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['HealingDone'] || '---') + \" \")])]), _vm._v(\" \"), _c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Quickplay'),\n      expression: \"viewMode ==='Quickplay'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Healing Done\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['HealingDone'] || '---') + \" \")])])], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Soldier: 76') ? _c('v-card-column', [_c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Competitive'),\n      expression: \"viewMode ==='Competitive'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Healing\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['HealingDone-Average'] || '---') + \" \")])]), _vm._v(\" \"), _c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Quickplay'),\n      expression: \"viewMode ==='Quickplay'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Healing\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['HealingDone-Average'] || '---') + \" \")])])], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Soldier: 76') ? _c('v-card-column', [_c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Competitive'),\n      expression: \"viewMode ==='Competitive'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Healing in Game\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['HealingDone-MostinGame'] || '---') + \" \")])]), _vm._v(\" \"), _c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Quickplay'),\n      expression: \"viewMode ==='Quickplay'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Healing in Game\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['HealingDone-MostinGame'] || '---') + \" \")])])], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Soldier: 76') ? _c('v-card-column', [_c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Competitive'),\n      expression: \"viewMode ==='Competitive'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Healing in Life\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['HealingDone-MostinLife'] || '---') + \" \")])]), _vm._v(\" \"), _c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Quickplay'),\n      expression: \"viewMode ==='Quickplay'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Healing in Life\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['HealingDone-MostinLife'] || '---') + \" \")])])], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Soldier: 76') ? _c('v-card-column', [_c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Competitive'),\n      expression: \"viewMode ==='Competitive'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Biotic Fields Deployed\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['BioticFieldsDeployed'] || '---') + \" \")])]), _vm._v(\" \"), _c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Quickplay'),\n      expression: \"viewMode ==='Quickplay'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Biotic Fields Deployed\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['BioticFieldsDeployed'] || '---') + \" \")])])], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Soldier: 76') ? _c('v-card-column', [_c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Competitive'),\n      expression: \"viewMode ==='Competitive'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Biotic Field Healing\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['BioticFieldHealingDone'] || '---') + \" \")])]), _vm._v(\" \"), _c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Quickplay'),\n      expression: \"viewMode ==='Quickplay'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Biotic Field Healing\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['BioticFieldHealingDone'] || '---') + \" \")])])], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Symmetra') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Teleporter Uptime\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['TeleporterUptime'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Teleporter Uptime\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['TeleporterUptime'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Symmetra') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Teleporter Uptime\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['TeleporterUptime-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Teleporter Uptime\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['TeleporterUptime-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Symmetra') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Best Teleporter Uptime\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['TeleporterUptime-BestinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Best Teleporter Uptime\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['TeleporterUptime-BestinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Symmetra') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Players Teleported\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['PlayersTeleported'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Players Teleported\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['PlayersTeleported'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Symmetra') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Players Teleported\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['PlayersTeleported-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Players Teleported\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['PlayersTeleported-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Symmetra') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Players Teleported\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['PlayersTeleported-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Players Teleported\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['PlayersTeleported-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Symmetra') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Sentry Turret Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['SentryTurretKills'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Sentry Turret Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['SentryTurretKills'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Symmetra') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Sentry Turret Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['SentryTurretKills-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Sentry Turret Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['SentryTurretKills-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Symmetra') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Sentry Turret Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['SentryTurretKills-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Sentry Turret Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['SentryTurretKills-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Symmetra') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Damage Blocked\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['DamageBlocked'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Damage Blocked\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['DamageBlocked'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Symmetra') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Damage Blocked\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['DamageBlocked-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Damage Blocked\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['DamageBlocked-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Symmetra') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Damage Blocked\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['DamageBlocked-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Damage Blocked\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['DamageBlocked-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Tracer') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Pulse Bombs Attached\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['PulseBombsAttached'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Pulse Bombs Attached\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['PulseBombsAttached'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Tracer') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Pulse Bombs Attached\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['PulseBombsAttached-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Pulse Bombs Attached\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['PulseBombsAttached-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Tracer') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Pulse Bombs Attached\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['PulseBombsAttached-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Pulse Bombs Attached\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['PulseBombsAttached-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Tracer') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Pulse Bomb Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['PulseBombKills'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Pulse Bomb Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['PulseBombKills'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Tracer') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Pulse Bomb Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['PulseBombKills-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Pulse Bomb Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['PulseBombKills-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Tracer') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Pulse Bomb Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['PulseBombKills-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Pulse Bomb Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['PulseBombKills-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Torbjörn') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Torbjörn Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['TorbjörnKills'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Torbjörn Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['TorbjörnKills'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Torbjörn') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Torbjörn Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['TorbjörnKills-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Torbjörn Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['TorbjörnKills-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Torbjörn') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Torbjörn Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['TorbjörnKills-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Torbjörn Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['TorbjörnKills-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Torbjörn') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Turret Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['TurretKills'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Turret Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['TurretKills'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Torbjörn') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Turret Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['TurretKills-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Turret Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['TurretKills-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Torbjörn') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Molten Core Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['MoltenCoreKillsKills'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Molten Core Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['MoltenCoreKills'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Torbjörn') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Molten Core Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['MoltenCoreKills-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Molten Core Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['MoltenCoreKills-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Torbjörn') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Molten Core Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['MoltenCoreKills-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Molten Core Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['MoltenCoreKills-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Torbjörn') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Armor Packs Created\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['ArmorPacksCreated'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Armor Packs Created\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['ArmorPacksCreated'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Torbjörn') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Armor Packs Created\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['ArmorPacksCreated-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Armor Packs Created\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['ArmorPacksCreated-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Widowmaker') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Scoped Shots\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['Scoped Shots'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Scoped Shots\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['ScopedShots'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Widowmaker') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Scoped Accuracy\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['ScopedAccuracy'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Scoped Accuracy\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['ScopedAccuracy'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Widowmaker') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Best Scoped Accuracy\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['ScopedAccuracy-BestinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Best Scoped Accuracy\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['ScopedAccuracy-BestinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Widowmaker') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Scoped Critical Hits\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['ScopedCriticalHits'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Scoped Critical Hits\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['ScopedCriticalHits'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Widowmaker') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Scoped Critical Hits\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['ScopedCriticalHits-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Scoped Critical Hits\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['ScopedCriticalHits-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Widowmaker') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Scoped Critical Hits\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['ScopedCriticalHits-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Scoped Critical Hits\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['ScopedCriticalHits-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Widowmaker') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Venom Mine Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['VenomMineKills'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Venom Mine Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['VenomMineKills'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Widowmaker') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Venom Mine Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['VenomMineKills-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Venom Mine Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['VenomMineKills-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Widowmaker') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Venom Mine Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['VenomMineKills-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Venom Mine Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['VenomMineKills-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Harambe') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Jump Pack Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['JumpPackKills'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Jump Pack Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['JumpPackKills'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Harambe') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Jump Pack Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['JumpPackKills-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Jump Pack Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['JumpPackKills-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Harambe') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Jump Pack Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['JumpPackKills-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Jump Pack Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['JumpPackKills-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Harambe') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Primal Rage Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['PrimalRageKills'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Primal Rage Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['PrimalRageKills'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Harambe') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Primal Rage Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['PrimalRageKills-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Primal Rage Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['PrimalRageKills-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Harambe') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Primal Rage Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['PrimalRageKills-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Primal Rage Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['PrimalRageKills-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Harambe') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Players Knocked Back\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['PlayersKnockedBack'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Players Knocked Back\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['PlayersKnockedBack'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Harambe') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Players Knocked Back\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['PlayersKnockedBack-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Players Knocked Back\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['PlayersKnockedBack-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Harambe') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Players Knocked Back\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['PlayersKnockedBack-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Players Knocked Back\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['PlayersKnockedBack-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Harambe') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Environmental Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['EnvironmentalKills'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Environmental Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['EnvironmentalKills'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Zarya') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Lifetime Energy Accumulation\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['LifetimeEnergyAccumulation'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Lifetime Energy Accumulation\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['LifetimeEnergyAccumulation'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Zarya') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"High Energy Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['HighEnergyKills'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"High Energy Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['HighEnergyKills'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Zarya') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg High Energy Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['HighEnergyKills-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg High Energy Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['HighEnergyKills-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Zarya') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most High Energy Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['HighEnergyKills-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most High Energy Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['HighEnergyKills-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Zarya') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Projected Barriers Applied\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['ProjectedBarriersApplied'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Projected Barriers Applied\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['ProjectedBarriersApplied'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Zarya') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Projected Barriers Applied\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['ProjectedBarriersApplied-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Projected Barriers Applied\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['ProjectedBarriersApplied-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Zarya') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Projected Barriers Applied\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['ProjectedBarriersApplied-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Projected Barriers Applied\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['ProjectedBarriersApplied-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Zarya') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Lifetime Graviton Surge Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['LifetimeGravitonSurgeKills'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Lifetime Graviton Surge Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['LifetimeGravitonSurgeKills'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Zarya') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Graviton Surge Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['GravitonSurgeKills-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Graviton Surge Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['GravitonSurgeKills-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Zarya') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Graviton Surge Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['GravitonSurgeKills-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Graviton Surge Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['GravitonSurgeKills-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Zenyatta') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Orb Healing\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['HealingDone'] - _vm.hero.competitive['TranscendenceHealing'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Orb Healing\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(this.numberWithCommas(this.spliceInt(_vm.hero.quickplay['HealingDone']) - this.spliceInt(_vm.hero.quickplay['TranscendenceHealing'])) || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Zenyatta') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Transcendence Healing\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['TranscendenceHealing'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Transcendence Healing\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['TranscendenceHealing'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Zenyatta') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Best Transcendence Healing\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['TranscendenceHealing-Best'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Best Transcendence Healing\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['TranscendenceHealing-Best'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e()], 1)], 1)], 1)], 1)\n},staticRenderFns: []}\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('v-container', {\n    attrs: {\n      \"fluid\": \"\",\n      \"id\": \"playerHeader\"\n    }\n  }, [_c('v-row', [_c('v-col', {\n    attrs: {\n      \"md6\": \"\"\n    }\n  }, [_c('v-container', {\n    attrs: {\n      \"fluid\": \"\"\n    }\n  }, [_c('v-row', [_c('v-col', {\n    attrs: {\n      \"lg2\": \"\",\n      \"md3\": \"\",\n      \"sm3\": \"\"\n    }\n  }, [_c('div', {\n    staticClass: \"headerAvatar\"\n  }, [_c('img', {\n    staticClass: \"avatarImage\",\n    attrs: {\n      \"src\": _vm.currentBattletag.profile.avatar,\n      \"width\": \"80\",\n      \"height\": \"80\"\n    }\n  })])]), _vm._v(\" \"), _c('v-col', {\n    staticClass: \"headerNameCol\",\n    attrs: {\n      \"lg10\": \"\",\n      \"md9\": \"\",\n      \"sm9\": \"\"\n    }\n  }, [_c('h3', {\n    staticClass: \"whiteText\"\n  }, [_c('span', [_vm._v(_vm._s(_vm.currentBattletag.tag))]), _vm._v(\" \"), _c('small', {\n    staticClass: \"subHeader\"\n  }, [_vm._v(\" on \" + _vm._s(_vm.currentBattletag.platform) + \" (\" + _vm._s(_vm.currentBattletag.region) + \")\")])])])], 1)], 1)], 1), _vm._v(\" \"), _c('v-col', {\n    attrs: {\n      \"md6\": \"\"\n    }\n  })], 1)], 1)\n},staticRenderFns: []}\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('v-container', {\n    attrs: {\n      \"id\": \"battletagCard\"\n    }\n  }, [_c('v-row', [_c('v-col', {\n    attrs: {\n      \"md2\": \"\"\n    }\n  }, [_c('p', [_vm._v(\"Platform\")]), _vm._v(\" \"), _c('select', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.query.platform),\n      expression: \"query.platform\"\n    }],\n    staticClass: \"select\",\n    attrs: {\n      \"name\": \"Platform\"\n    },\n    on: {\n      \"change\": function($event) {\n        var $$selectedVal = Array.prototype.filter.call($event.target.options, function(o) {\n          return o.selected\n        }).map(function(o) {\n          var val = \"_value\" in o ? o._value : o.value;\n          return val\n        });\n        _vm.query.platform = $event.target.multiple ? $$selectedVal : $$selectedVal[0]\n      }\n    }\n  }, [_c('option', [_vm._v(\"PC\")]), _vm._v(\" \"), _c('option', [_vm._v(\"XBL\")]), _vm._v(\" \"), _c('option', [_vm._v(\"PSN\")])])]), _vm._v(\" \"), _c('v-col', {\n    attrs: {\n      \"md2\": \"\"\n    }\n  }, [_c('p', [_vm._v(\"Region\")]), _vm._v(\" \"), _c('select', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.query.region),\n      expression: \"query.region\"\n    }],\n    staticClass: \"select\",\n    attrs: {\n      \"name\": \"Region\"\n    },\n    on: {\n      \"change\": function($event) {\n        var $$selectedVal = Array.prototype.filter.call($event.target.options, function(o) {\n          return o.selected\n        }).map(function(o) {\n          var val = \"_value\" in o ? o._value : o.value;\n          return val\n        });\n        _vm.query.region = $event.target.multiple ? $$selectedVal : $$selectedVal[0]\n      }\n    }\n  }, [_c('option', [_vm._v(\"US\")]), _vm._v(\" \"), _c('option', [_vm._v(\"EU\")]), _vm._v(\" \"), _c('option', [_vm._v(\"CN\")]), _vm._v(\" \"), _c('option', [_vm._v(\"KR\")])])]), _vm._v(\" \"), _c('v-col', {\n    staticClass: \"battletagCol\",\n    attrs: {\n      \"md8\": \"\"\n    }\n  }, [_c('v-row', [_c('p', {\n    attrs: {\n      \"id\": \"battletagP\"\n    }\n  }, [_vm._v(\"Battletag\")])]), _vm._v(\" \"), _c('v-row', {\n    attrs: {\n      \"id\": \"inputRow\"\n    }\n  }, [_c('div', {\n    attrs: {\n      \"id\": \"inputContainer\"\n    }\n  }, [_c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model.trim\",\n      value: (_vm.query.battletag),\n      expression: \"query.battletag\",\n      modifiers: {\n        \"trim\": true\n      }\n    }],\n    attrs: {\n      \"type\": \"text\",\n      \"name\": \"user-search\",\n      \"label\": \"Search\",\n      \"placeholder\": \"Battletag is case sensitive!\"\n    },\n    domProps: {\n      \"value\": (_vm.query.battletag)\n    },\n    on: {\n      \"keyup\": function($event) {\n        if (!('button' in $event) && _vm._k($event.keyCode, \"enter\", 13)) { return null; }\n        _vm.onClickButton($event)\n      },\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.query.battletag = $event.target.value.trim()\n      },\n      \"blur\": function($event) {\n        _vm.$forceUpdate()\n      }\n    }\n  }), _vm._v(\" \"), _c('button', {\n    attrs: {\n      \"id\": \"submit\"\n    },\n    on: {\n      \"click\": _vm.onClickButton\n    }\n  }, [_vm._v(\"Onward\")])])])], 1)], 1)], 1)\n},staticRenderFns: []}\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    style: (_vm.appStyleObject),\n    attrs: {\n      \"id\": \"appContainer\"\n    }\n  }, [_c('v-toolbar', {\n    attrs: {\n      \"id\": \"toolbar\"\n    }\n  }, [_c('v-toolbar-title', {\n    attrs: {\n      \"id\": \"brand\"\n    }\n  }, [_c('router-link', {\n    attrs: {\n      \"to\": \"/\"\n    }\n  }, [_vm._v(\"WatchOver\")])], 1), _vm._v(\" \"), _c('v-toolbar-items', [_c('v-toolbar-item', [_c('user-search', {\n    on: {\n      \"clicked\": _vm.onClickSearch\n    }\n  })], 1)], 1)], 1), _vm._v(\" \"), _c('main', [_c('v-content', [_c('router-view', {\n    attrs: {\n      \"viewMode\": _vm.view.mode,\n      \"toggleLoading\": _vm.toggleLoading,\n      \"loadHeroData\": _vm.loadHeroData,\n      \"loading\": _vm.loading,\n      \"view\": _vm.view,\n      \"current-battletag\": _vm.currentBattletag\n    },\n    on: {\n      \"clicked\": _vm.onClickSearch,\n      \"switchView\": _vm.switchView,\n      \"switchRoleView\": _vm.switchRoleView\n    }\n  })], 1)], 1)], 1)\n},staticRenderFns: []}\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    attrs: {\n      \"id\": \"ProfileContainer\"\n    }\n  }, [(_vm.loading) ? _c('div', {\n    attrs: {\n      \"id\": \"loadingDiv\"\n    }\n  }, [_c('v-progress-circular', {\n    staticClass: \"goldenrod\",\n    attrs: {\n      \"size\": 200,\n      \"indeterminate\": \"\"\n    }\n  })], 1) : _vm._e(), _vm._v(\" \"), (!_vm.loading) ? _c('div', {\n    attrs: {\n      \"id\": \"HeadingContainer\"\n    }\n  }, [_c('player-header', {\n    attrs: {\n      \"currentBattletag\": _vm.currentBattletag\n    }\n  })], 1) : _vm._e(), _vm._v(\" \"), (!_vm.loading) ? _c('div', {\n    attrs: {\n      \"id\": \"viewButtonsDiv\"\n    }\n  }, [_c('button', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Competitive'),\n      expression: \"viewMode === 'Competitive'\"\n    }],\n    staticClass: \"viewToggle activeViewButton\",\n    attrs: {\n      \"id\": \"switchViewBtn\"\n    },\n    on: {\n      \"click\": _vm.switchView\n    }\n  }, [_vm._v(_vm._s(_vm.viewMode))]), _vm._v(\" \"), _c('button', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Quickplay'),\n      expression: \"viewMode === 'Quickplay'\"\n    }],\n    staticClass: \"viewToggle red\",\n    attrs: {\n      \"id\": \"switchViewBtn\"\n    },\n    on: {\n      \"click\": _vm.switchView\n    }\n  }, [_vm._v(_vm._s(_vm.viewMode))]), _vm._v(\" \"), _c('button', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.view.roles.defense && _vm.view.roles.offense && _vm.view.roles.tank && _vm.view.roles.support),\n      expression: \"view.roles.defense && view.roles.offense && view.roles.tank && view.roles.support\"\n    }],\n    staticClass: \"viewToggle activeViewButton\",\n    on: {\n      \"click\": function($event) {\n        _vm.switchRoleView('all')\n      }\n    }\n  }, [_vm._v(\"All Heroes\")]), _vm._v(\" \"), _c('button', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (!_vm.view.roles.defense || !_vm.view.roles.offense || !_vm.view.roles.tank || !_vm.view.roles.support),\n      expression: \"!view.roles.defense || !view.roles.offense || !view.roles.tank || !view.roles.support\"\n    }],\n    staticClass: \"viewToggle\",\n    on: {\n      \"click\": function($event) {\n        _vm.switchRoleView('all')\n      }\n    }\n  }, [_vm._v(\"All Heroes\")]), _vm._v(\" \"), _c('button', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.view.roles.defense && _vm.view.roles.offense),\n      expression: \"view.roles.defense && view.roles.offense\"\n    }],\n    staticClass: \"viewToggle activeViewButton\",\n    on: {\n      \"click\": function($event) {\n        _vm.switchRoleView('damage')\n      }\n    }\n  }, [_vm._v(\"Damage\")]), _vm._v(\" \"), _c('button', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (!_vm.view.roles.defense && !_vm.view.roles.offense),\n      expression: \"!view.roles.defense && !view.roles.offense\"\n    }],\n    staticClass: \"viewToggle\",\n    on: {\n      \"click\": function($event) {\n        _vm.switchRoleView('damage')\n      }\n    }\n  }, [_vm._v(\"Damage\")]), _vm._v(\" \"), _c('button', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.view.roles.tank),\n      expression: \"view.roles.tank\"\n    }],\n    staticClass: \"viewToggle activeViewButton\",\n    on: {\n      \"click\": function($event) {\n        _vm.switchRoleView('tank')\n      }\n    }\n  }, [_vm._v(\"Tank\")]), _vm._v(\" \"), _c('button', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (!_vm.view.roles.tank),\n      expression: \"!view.roles.tank\"\n    }],\n    staticClass: \"viewToggle\",\n    on: {\n      \"click\": function($event) {\n        _vm.switchRoleView('tank')\n      }\n    }\n  }, [_vm._v(\"Tank\")]), _vm._v(\" \"), _c('button', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.view.roles.support),\n      expression: \"view.roles.support\"\n    }],\n    staticClass: \"viewToggle activeViewButton\",\n    on: {\n      \"click\": function($event) {\n        _vm.switchRoleView('support')\n      }\n    }\n  }, [_vm._v(\"Support\")]), _vm._v(\" \"), _c('button', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (!_vm.view.roles.support),\n      expression: \"!view.roles.support\"\n    }],\n    staticClass: \"viewToggle\",\n    on: {\n      \"click\": function($event) {\n        _vm.switchRoleView('support')\n      }\n    }\n  }, [_vm._v(\"Support\")])]) : _vm._e(), _vm._v(\" \"), _c('div', {\n    attrs: {\n      \"id\": \"CardContainer\"\n    }\n  }, _vm._l((_vm.currentBattletag.heroStats), function(hero) {\n    return (!_vm.loading) ? _c('hero-card', {\n      directives: [{\n        name: \"show\",\n        rawName: \"v-show\",\n        value: (_vm.view.roles[hero.role]),\n        expression: \"view.roles[hero.role]\"\n      }],\n      key: hero.name,\n      attrs: {\n        \"hero\": hero,\n        \"viewMode\": _vm.view.mode\n      }\n    }) : _vm._e()\n  }))])\n},staticRenderFns: []}\n\n/***/ }),\n/* 53 */,\n/* 54 */,\n/* 55 */,\n/* 56 */,\n/* 57 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__App__ = __webpack_require__(10);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__App___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__App__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__router__ = __webpack_require__(3);\n\n\n\n\n__WEBPACK_IMPORTED_MODULE_0_vue__[\"a\" /* default */].config.productionTip = false;\n\nnew __WEBPACK_IMPORTED_MODULE_0_vue__[\"a\" /* default */]({\n  el: '#app',\n  router: __WEBPACK_IMPORTED_MODULE_2__router__[\"a\" /* default */],\n  render: function render(h) {\n    return h(__WEBPACK_IMPORTED_MODULE_1__App___default.a);\n  }\n});\n\n/***/ })\n],[57]);\n\n\n// WEBPACK FOOTER //\n// static/js/app.5011394b518b62508ea7.js","import Vue from 'vue'\r\nimport Vuetify from 'vuetify'\r\nimport Router from 'vue-router'\r\nimport Home from '@/components/Home'\r\nimport Profile from '@/components/Profile'\r\n\r\nVue.use(Router)\r\nVue.use(Vuetify)\r\n\r\nexport default new Router({\r\n  routes: [\r\n    {\r\n      path: '/',\r\n      name: 'Home',\r\n      component: Home,\r\n      props: true\r\n    },\r\n    {\r\n      path: '/profile/:platform/:region/:battletag/',\r\n      name: 'Profile',\r\n      component: Profile,\r\n      props: true\r\n    }\r\n  ]\r\n})\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/router/index.js","\n/* styles */\nrequire(\"!!../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../node_modules/vue-loader/lib/style-rewriter?{\\\"id\\\":\\\"data-v-a2a45a28\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../node_modules/vue-loader/lib/selector?type=styles&index=0!./App.vue\")\n\nvar Component = require(\"!../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"),\n  /* template */\n  require(\"!!../node_modules/vue-loader/lib/template-compiler?{\\\"id\\\":\\\"data-v-a2a45a28\\\"}!../node_modules/vue-loader/lib/selector?type=template&index=0!./App.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/App.vue\n// module id = 10\n// module chunks = 1","<template>\r\n  <div id='appContainer' :style=\"appStyleObject\">\r\n\r\n    <v-toolbar id=\"toolbar\">\r\n      <v-toolbar-title id=\"brand\"><router-link to=\"/\">WatchOver</router-link></v-toolbar-title>\r\n      <v-toolbar-items>\r\n        <v-toolbar-item><user-search @clicked =\"onClickSearch\"/></v-toolbar-item>\r\n      </v-toolbar-items>\r\n    </v-toolbar>\r\n\r\n    <main>\r\n      <v-content>\r\n        <router-view :viewMode=\"view.mode\" :toggleLoading=\"toggleLoading\" :loadHeroData=\"loadHeroData\" @clicked =\"onClickSearch\" :loading=\"loading\" :view=\"view\" @switchView=\"switchView\" @switchRoleView=\"switchRoleView\" :current-battletag=\"currentBattletag\" ></router-view>\r\n      </v-content>\r\n    </main>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport userSearch from './components/user-search.vue'\r\nimport axios from 'axios'\r\nimport router from './router/index.js'\r\nexport default {\r\n  name: 'app',\r\n  components: {\r\n    userSearch\r\n  },\r\n  data () {\r\n    return {\r\n      loading: false,\r\n      appStyleObject: {\r\n        backgroundImage: '/static/Dorado_004.jpg'\r\n      },\r\n      heroQueryString: 'Ana%2CBastion%2CDVa%2CGenji%2CHanzo%2CJunkrat%2CLucio%2CMccree%2CMei%2CMercy%2CPharah%2CReaper%2CReinhardt%2CRoadhog%2CSoldier76%2CSombra%2CSymmetra%2CTracer%2CTorbjoern%2CWidowmaker%2CWinston%2CZarya%2CZenyatta',\r\n      currentBattletag: {\r\n        loaded: false,\r\n        tag: '',\r\n        platform: 'pc',\r\n        region: 'us',\r\n        profile: {},\r\n        combinedStats: {\r\n          quick: [],\r\n          competitive: []\r\n        },\r\n        heroStats: {\r\n          Ana: {\r\n            name: 'Ana',\r\n            image: 'static/Ana.png',\r\n            role: 'support'\r\n          },\r\n          Bastion: {\r\n            name: 'Bastion',\r\n            image: 'static/Bastion.png',\r\n            role: 'defense'\r\n          },\r\n          DVa: {\r\n            name: 'D.Va',\r\n            image: 'static/Dva.png',\r\n            role: 'tank'\r\n          },\r\n          Genji: {\r\n            name: 'Genji',\r\n            image: 'static/Genji.png',\r\n            role: 'offense'\r\n          },\r\n          Hanzo: {\r\n            name: 'Hanzo',\r\n            image: 'static/Hanzo.png',\r\n            role: 'defense'\r\n          },\r\n          Junkrat: {\r\n            name: 'Junkrat',\r\n            image: 'static/Junkrat.png',\r\n            role: 'defense'\r\n          },\r\n          Lucio: {\r\n            name: 'Lúcio',\r\n            image: 'static/Lucio.png',\r\n            role: 'support'\r\n          },\r\n          Mccree: {\r\n            name: 'McCree',\r\n            image: 'static/McCree.png',\r\n            role: 'offense'\r\n          },\r\n          Mei: {\r\n            name: 'Mei',\r\n            image: 'static/Mei.png',\r\n            role: 'defense'\r\n          },\r\n          Mercy: {\r\n            name: 'Mercy',\r\n            image: 'static/Mercy.png',\r\n            role: 'support'\r\n          },\r\n          Pharah: {\r\n            name: 'Pharah',\r\n            image: 'static/Pharah.png',\r\n            role: 'offense'\r\n          },\r\n          Reaper: {\r\n            name: 'Reaper',\r\n            image: 'static/Reaper.png',\r\n            role: 'offense'\r\n          },\r\n          Reinhardt: {\r\n            name: 'Reinhardt',\r\n            image: 'static/Reinhardt.png',\r\n            role: 'tank'\r\n          },\r\n          Roadhog: {\r\n            name: 'Roadhog',\r\n            image: 'static/Roadhog.png',\r\n            role: 'tank'\r\n          },\r\n          Soldier76: {\r\n            name: 'Soldier: 76',\r\n            image: 'static/Soldier.png',\r\n            role: 'offense'\r\n          },\r\n          Sombra: {\r\n            name: 'Sombra',\r\n            image: 'static/Sombra.png',\r\n            role: 'offense'\r\n          },\r\n          Symmetra: {\r\n            name: 'Symmetra',\r\n            image: 'static/Symmetra.png',\r\n            role: 'support'\r\n          },\r\n          Tracer: {\r\n            name: 'Tracer',\r\n            image: 'static/Tracer.png',\r\n            role: 'offense'\r\n          },\r\n          Torbjoern: {\r\n            name: 'Torbjörn',\r\n            image: 'static/Torb.png',\r\n            role: 'defense'\r\n          },\r\n          Widowmaker: {\r\n            name: 'Widowmaker',\r\n            image: 'static/Widowmaker.png',\r\n            role: 'defense'\r\n          },\r\n          Winston: {\r\n            name: 'Harambe',\r\n            image: 'static/Harambe.png',\r\n            role: 'tank'\r\n          },\r\n          Zarya: {\r\n            name: 'Zarya',\r\n            image: 'static/Zarya.png',\r\n            role: 'tank'\r\n          },\r\n          Zenyatta: {\r\n            name: 'Zenyatta',\r\n            image: 'static/Zenyatta.png',\r\n            role: 'support'\r\n          }\r\n        }\r\n      },\r\n      view: {\r\n        mode: 'Competitive', // set to Competitive or Quickplay,\r\n        roles: {\r\n          tank: true,\r\n          support: true,\r\n          offense: true,\r\n          defense: true\r\n        }\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    renderBackground: function () {\r\n      let proImage = 'static/Dorado_004.jpg'\r\n      let devImage = '/static/Dorado_004.jpg'\r\n\r\n      if (process.env.NODE_ENV === 'production') {\r\n        console.log('production background')\r\n        this.appStyleObject.backgroundImage = 'url(' + proImage + ')'\r\n      } else {\r\n        console.log('dev background')\r\n        this.appStyleObject.backgroundImage = 'url(' + devImage + ')'\r\n      }\r\n    },\r\n    toggleLoading: function () {\r\n      if (this.loading === true) {\r\n        this.loading = false\r\n      } else if (this.loading === false) {\r\n        this.loading = true\r\n      }\r\n    },\r\n    onClickSearch: function (query) {\r\n      this.currentBattletag.loaded = false\r\n      this.currentBattletag.tag = query.battletag\r\n      this.currentBattletag.platform = query.platform.toLowerCase()\r\n      this.currentBattletag.region = query.region.toLowerCase()\r\n      let battletag = this.currentBattletag.tag.replace('#', '-')\r\n      let platform = this.currentBattletag.platform\r\n      let region = this.currentBattletag.region\r\n      router.push('/profile/' + platform + '/' + region + '/' + battletag + '/')\r\n    },\r\n    switchView: function (view) {\r\n      this.view.mode = view\r\n    },\r\n    loadHeroData: function () {\r\n      this.loading = true\r\n      this.currentBattletag.tag = this.$route.params.battletag.replace('-', '#')\r\n      let battletag = this.$route.params.battletag || this.currentBattletag.tag.replace('#', '-')\r\n      let platform = this.$route.params.platform || this.currentBattletag.platform\r\n      let region = this.$route.params.region || this.currentBattletag.region\r\n\r\n      axios.all([\r\n        axios.get('https://api.lootbox.eu/' + platform + '/' + region + '/' + battletag + '/profile'),\r\n        axios.get('https://api.lootbox.eu/' + platform + '/' + region + '/' + battletag + '/competitive/allHeroes/'),\r\n        axios.get('https://api.lootbox.eu/' + platform + '/' + region + '/' + battletag + '/quickplay/allHeroes/'),\r\n        axios.get('https://api.lootbox.eu/' + platform + '/' + region + '/' + battletag + '/competitive/hero/' + this.heroQueryString + '/'),\r\n        axios.get('https://api.lootbox.eu/' + platform + '/' + region + '/' + battletag + '/quickplay/hero/' + this.heroQueryString + '/')\r\n      ])\r\n      .then((response) => {\r\n        this.currentBattletag.profile = response[0].data.data\r\n        this.currentBattletag.combinedStats.competitive = response[1].data\r\n        this.currentBattletag.combinedStats.quickplay = response[2].data\r\n\r\n        for (var hero in response[3].data) {\r\n          this.currentBattletag.heroStats[hero].competitive = response[3].data[hero]\r\n        }\r\n        for (hero in response[4].data) {\r\n          this.currentBattletag.heroStats[hero].quickplay = response[4].data[hero]\r\n        }\r\n        this.currentBattletag.loaded = true\r\n        this.loading = false\r\n      })\r\n    },\r\n    switchRoleView: function (role) {\r\n      if (role === 'all') {\r\n        this.view.roles.tank = true\r\n        this.view.roles.support = true\r\n        this.view.roles.offense = true\r\n        this.view.roles.defense = true\r\n      } else if (role === 'damage') {\r\n        this.view.roles.offense = true\r\n        this.view.roles.defense = true\r\n        this.view.roles.support = false\r\n        this.view.roles.tank = false\r\n      } else if (role === 'tank') {\r\n        this.view.roles.offense = false\r\n        this.view.roles.defense = false\r\n        this.view.roles.support = false\r\n        this.view.roles.tank = true\r\n      } else if (role === 'support') {\r\n        this.view.roles.offense = false\r\n        this.view.roles.defense = false\r\n        this.view.roles.support = true\r\n        this.view.roles.tank = false\r\n      }\r\n    }\r\n  },\r\n  created: function () {\r\n    this.renderBackground()\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style>\r\n\r\nhtml {\r\n\r\n}\r\n\r\nbody {\r\n  background: black;\r\n  background: #060606; /* Old browsers */\r\n  background: -moz-linear-gradient(left, #222222 0%,  #222222 100%); /* FF3.6-15 */\r\n  background: -webkit-linear-gradient(left, #222222 0%,#222222 100%); /* Chrome10-25,Safari5.1-6 */\r\n  background: linear-gradient(to right, #222222 0%,#222222 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */\r\n  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#222222', endColorstr='#222222',GradientType=1 ); /* IE6-9 fallback on horizontal gradient */\r\n}\r\n\r\nmain {\r\n  background: transparent;\r\n  min-height: 100vh;\r\n}\r\n\r\n.content {\r\n  background: transparent;\r\n}\r\n\r\n@font-face {\r\n    font-family: Overwatch;\r\n    src: url(https://us.battle.net/forums/static/fonts/bignoodletoo/bignoodletoo.woff);\r\n}\r\n#appContainer {\r\n  font-family: 'Overwatch', Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  text-align: center;\r\n  color: #2c3e50;\r\n  background: transparent;\r\n}\r\n\r\n#toolbar {\r\n  text-align: left;\r\n  background: transparent;\r\n  padding: 0 0 0 10px;\r\n}\r\n\r\n.toolbar__item{\r\n  padding-right: 0;\r\n}\r\n\r\n.card__row {\r\n  align-items: flex-start;\r\n  flex-flow: row wrap;\r\n}\r\n\r\n#brand {\r\n  width: 50px;\r\n}\r\n\r\n#brand a{\r\n  color: #f29a2c;\r\n}\r\n\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// App.vue?9a9c297a","<template>\r\n<v-card class=\"heroCard\">\r\n  <!-- Title -->\r\n  <v-card-row class=\"cardTitleRow\" :id=\"headerId(hero)\">\r\n    <v-card-title @click=\"toggleHeroStats\">\r\n      <span class=\"white--text heroName\">{{hero.name}}</span>\r\n      <v-spacer></v-spacer>\r\n      <span>\r\n        <v-icon v-if=\"fullStats\">expand_more</v-icon>\r\n        <v-icon v-if=\"!fullStats\">expand_less</v-icon>\r\n      </span>\r\n    </v-card-title>\r\n  </v-card-row>\r\n  <!-- Title -->\r\n\r\n  <!-- Content -->\r\n  <v-card-row>\r\n    <!-- Avatar -->\r\n    <v-card-column id=\"avatar\">\r\n      <v-card-row :img=\"hero.image\"></v-card-row>\r\n    </v-card-column>\r\n    <!-- Avatar -->\r\n\r\n    <v-card-column>\r\n\r\n      <v-card-row>\r\n\r\n        <v-card-column>\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Time Played</strong></p>\r\n            <p>{{hero.competitive.TimePlayed || '---'}} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Time Played</strong></p>\r\n            <p>{{hero.quickplay.TimePlayed || '---'}}</p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column>\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Games Won</strong></p>\r\n            <p>{{hero.competitive.GamesWon || '---'}} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Games Won</strong></p>\r\n            <p>{{hero.quickplay.GamesWon || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-show=\"viewMode ==='Competitive'\">\r\n          <v-card-text class=\"card_text\">\r\n            <p><strong>Games Lost</strong></p>\r\n            <p>{{hero.competitive.GamesLost || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-show=\"viewMode ==='Competitive'\">\r\n          <v-card-text class=\"card_text\">\r\n            <p><strong>Win %</strong></p>\r\n            <p>{{hero.competitive.WinPercentage || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column>\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Time on Fire</strong></p>\r\n            <p>{{hero.competitive.TimeSpentonFire || '---'}} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Time on Fire</strong></p>\r\n            <p>{{hero.quickplay.TimeSpentonFire || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column>\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Avg Fire</strong></p>\r\n            <p>{{hero.competitive['TimeSpentonFire-Average'] || '---'}} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Avg Fire</strong></p>\r\n            <p>{{hero.quickplay['TimeSpentonFire-Average'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column>\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Most Fire</strong></p>\r\n            <p>{{hero.competitive['TimeSpentonFire-MostinGame'] || '---'}} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Most Fire</strong></p>\r\n            <p>{{hero.quickplay['TimeSpentonFire-MostinGame'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n\r\n        <!-- Medals -->\r\n\r\n        <v-card-column class=\"medalColumn\">\r\n          <v-card-text class=\"card_text medalText\" v-if=\"viewMode ==='Competitive'\">\r\n            <v-icon class=\"goldMedal\">fiber_manual_record</v-icon>\r\n            <p>{{hero.competitive['Medals-Gold'] || '---'}} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text medalText\" v-if=\"viewMode ==='Quickplay'\">\r\n            <v-icon class=\"goldMedal\">fiber_manual_record</v-icon>\r\n            <p>{{hero.quickplay['Medals-Gold'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column class=\"medalColumn\">\r\n          <v-card-text class=\"card_text medalText\" v-if=\"viewMode ==='Competitive'\">\r\n            <v-icon class=\"silverMedal\">fiber_manual_record</v-icon>\r\n            <p>{{hero.competitive['Medals-Silver'] || '---'}} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text medalText\" v-if=\"viewMode ==='Quickplay'\">\r\n            <v-icon class=\"silverMedal\">fiber_manual_record</v-icon>\r\n            <p>{{hero.quickplay['Medals-Silver'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column class=\"medalColumn\">\r\n          <v-card-text class=\"card_text medalText\" v-if=\"viewMode ==='Competitive'\">\r\n            <v-icon class=\"bronzeMedal\">fiber_manual_record</v-icon>\r\n            <p>{{hero.competitive['Medals-Bronze'] || '---'}} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text medalText\" v-if=\"viewMode ==='Quickplay'\">\r\n            <v-icon class=\"bronzeMedal\">fiber_manual_record</v-icon>\r\n            <p>{{hero.quickplay['Medals-Bronze'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <!-- End Medals -->\r\n\r\n        <v-card-column>\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Cards</strong></p>\r\n            <p>{{hero.competitive.Cards || hero.competitive.Card || '---'}} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Cards</strong></p>\r\n            <p>{{hero.quickplay.Cards || hero.quickplay.Card || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column>\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Elims</strong></p>\r\n            <p>{{hero.competitive.Eliminations || hero.competitive.Elimination || '---'}} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Elims</strong></p>\r\n            <p>{{hero.quickplay.Eliminations || hero.quickplay.Elimination || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column>\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Avg Elims</strong></p>\r\n            <p>{{hero.competitive['Eliminations-Average'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Avg Elims</strong></p>\r\n            <p>{{hero.quickplay['Eliminations-Average'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column>\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Deaths</strong></p>\r\n            <p>{{hero.competitive.Deaths || hero.competitive.Death || '---'}} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Deaths</strong></p>\r\n            <p>{{hero.quickplay.Deaths || hero.quickplay.Death || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column>\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Avg Deaths</strong></p>\r\n            <p>{{hero.competitive['Deaths-Average'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Avg Deaths</strong></p>\r\n            <p>{{hero.quickplay['Deaths-Average'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column>\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Elims/Life</strong></p>\r\n            <p>{{hero.competitive['EliminationsperLife'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Elims/Life</strong></p>\r\n            <p>{{hero.quickplay['EliminationsperLife'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column>\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Best Streak</strong></p>\r\n            <p>{{hero.competitive['KillStreak-Best'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Best Streak</strong></p>\r\n            <p>{{hero.quickplay['KillStreak-Best'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column>\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Weapon Accuracy</strong></p>\r\n            <p>{{hero.competitive['WeaponAccuracy'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Weapon Accuracy</strong></p>\r\n            <p>{{hero.quickplay['WeaponAccuracy'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column>\r\n          <v-card-text class=\"card_text\" v-show=\"viewMode ==='Competitive'\">\r\n            <p><strong>Damage Done</strong></p>\r\n            <p>{{hero.competitive['DamageDone'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-show=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Damage Done</strong></p>\r\n            <p>{{hero.quickplay['DamageDone'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column>\r\n          <v-card-text class=\"card_text\" v-show=\"viewMode ==='Competitive'\">\r\n            <p><strong>Avg Damage</strong></p>\r\n            <p>{{hero.competitive['DamageDone-Average'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-show=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Avg Damage</strong></p>\r\n            <p>{{hero.quickplay['DamageDone-Average'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column>\r\n          <v-card-text class=\"card_text\" v-show=\"viewMode ==='Competitive'\">\r\n            <p><strong>Most Damage</strong></p>\r\n            <p>{{hero.competitive['DamageDone-MostinGame'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-show=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Most Damage</strong></p>\r\n            <p>{{hero.quickplay['DamageDone-MostinGame'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n      </v-card-row>\r\n\r\n    </v-card-column>\r\n\r\n  </v-card-row>\r\n\r\n  <hr/>\r\n\r\n  <!-- Role specific Stats -->\r\n  <v-card-row v-if=\"hero.name !== 'Symmetra'\" v-show=\"fullStats\" class=\"roleStatRow\">\r\n    <v-card-column>\r\n\r\n      <!-- Row Heading -->\r\n      <v-card-row  class=\"statHeader\">\r\n        <p>{{hero.role}} Stats</p>\r\n      </v-card-row>\r\n\r\n      <v-card-row>\r\n\r\n        <!-- Support Stats -->\r\n        <v-card-column  v-if=\"hero.role === 'support'\">\r\n          <v-card-text class=\"card_text\" v-show=\"viewMode ==='Competitive'\">\r\n            <p><strong>Healing Done</strong></p>\r\n            <p>{{hero.competitive['HealingDone'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-show=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Healing Done</strong></p>\r\n            <p>{{hero.quickplay['HealingDone'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column  v-if=\"hero.role === 'support'\">\r\n          <v-card-text class=\"card_text\" v-show=\"viewMode ==='Competitive'\">\r\n            <p><strong>Avg Healing</strong></p>\r\n            <p>{{hero.competitive['HealingDone-Average'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-show=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Avg Healing</strong></p>\r\n            <p>{{hero.quickplay['HealingDone-Average'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column  v-if=\"hero.role === 'support'\">\r\n          <v-card-text class=\"card_text\" v-show=\"viewMode ==='Competitive'\">\r\n            <p><strong>Most Healing in Game</strong></p>\r\n            <p>{{hero.competitive['HealingDone-MostinGame'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-show=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Most Healing in Game</strong></p>\r\n            <p>{{hero.quickplay['HealingDone-MostinGame'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column  v-if=\"hero.role === 'support'\">\r\n          <v-card-text class=\"card_text\" v-show=\"viewMode ==='Competitive'\">\r\n            <p><strong>Most Healing in Life</strong></p>\r\n            <p>{{hero.competitive['HealingDone-MostinLife'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-show=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Most Healing in Life</strong></p>\r\n            <p>{{hero.quickplay['HealingDone-MostinLife'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column  v-if=\"hero.role === 'support'\">\r\n          <v-card-text class=\"card_text\" v-show=\"viewMode ==='Competitive'\">\r\n            <p><strong>Self Healing</strong></p>\r\n            <p>{{hero.competitive['SelfHealing'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-show=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Self Healing</strong></p>\r\n            <p>{{hero.quickplay['SelfHealing'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column  v-if=\"hero.role === 'support'\">\r\n          <v-card-text class=\"card_text\" v-show=\"viewMode ==='Competitive'\">\r\n            <p><strong>Avg Self Healing</strong></p>\r\n            <p>{{hero.competitive['SelfHealing-Average'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-show=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Avg Self Healing</strong></p>\r\n            <p>{{hero.quickplay['SelfHealing-Average'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column  v-if=\"hero.role === 'support'\">\r\n          <v-card-text class=\"card_text\" v-show=\"viewMode ==='Competitive'\">\r\n            <p><strong>D. Assists</strong></p>\r\n            <p>{{hero.competitive['DefensiveAssists'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-show=\"viewMode ==='Quickplay'\">\r\n            <p><strong>D. Assists</strong></p>\r\n            <p>{{hero.quickplay['DefensiveAssists'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column  v-if=\"hero.role === 'support'\">\r\n          <v-card-text class=\"card_text\" v-show=\"viewMode ==='Competitive'\">\r\n            <p><strong>Avg D. Assists</strong></p>\r\n            <p>{{hero.competitive['DefensiveAssists-Average'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-show=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Avg D. Assists</strong></p>\r\n            <p>{{hero.quickplay['DefensiveAssists-Average'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column  v-if=\"hero.role === 'support'\">\r\n          <v-card-text class=\"card_text\" v-show=\"viewMode ==='Competitive'\">\r\n            <p><strong>Most D. Assists</strong></p>\r\n            <p>{{hero.competitive['DefensiveAssists-MostinGame'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-show=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Most D. Assists</strong></p>\r\n            <p>{{hero.quickplay['DefensiveAssists-MostinGame'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column  v-if=\"hero.role === 'support'\">\r\n          <v-card-text class=\"card_text\" v-show=\"viewMode ==='Competitive'\">\r\n            <p><strong>O. Assists</strong></p>\r\n            <p>{{hero.competitive['OffensiveAssists'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-show=\"viewMode ==='Quickplay'\">\r\n            <p><strong>O. Assists</strong></p>\r\n            <p>{{hero.quickplay['OffensiveAssists'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column  v-if=\"hero.role === 'support'\">\r\n          <v-card-text class=\"card_text\" v-show=\"viewMode ==='Competitive'\">\r\n            <p><strong>Avg O. Assists</strong></p>\r\n            <p>{{hero.competitive['OffensiveAssists-Average'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-show=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Avg O. Assists</strong></p>\r\n            <p>{{hero.quickplay['OffensiveAssists-Average'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column  v-if=\"hero.role === 'support'\">\r\n          <v-card-text class=\"card_text\" v-show=\"viewMode ==='Competitive'\">\r\n            <p><strong>Most O. Assists</strong></p>\r\n            <p>{{hero.competitive['OffensiveAssists-MostinGame'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-show=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Most O. Assists</strong></p>\r\n            <p>{{hero.quickplay['OffensiveAssists-MostinGame'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <!-- End Support Stats -->\r\n\r\n        <!-- Tank Stats -->\r\n        <v-card-column v-if=\"hero.role === 'tank'\">\r\n          <v-card-text class=\"card_text\" v-show=\"viewMode ==='Competitive'\" >\r\n            <p><strong>Damage Blocked</strong></p>\r\n            <p>{{hero.competitive['DamageBlocked'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-show=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Damage Blocked</strong></p>\r\n            <p>{{hero.quickplay['DamageBlocked'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.role === 'tank'\">\r\n          <v-card-text class=\"card_text\" v-show=\"viewMode ==='Competitive'\" >\r\n            <p><strong>Avg Damage Blocked</strong></p>\r\n            <p>{{hero.competitive['DamageBlocked-Average'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-show=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Avg Damage Blocked</strong></p>\r\n            <p>{{hero.quickplay['DamageBlocked-Average'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.role === 'tank'\">\r\n          <v-card-text class=\"card_text\" v-show=\"viewMode ==='Competitive'\" >\r\n            <p><strong>Most Damage Blocked</strong></p>\r\n            <p>{{hero.competitive['DamageBlocked-MostinGame'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-show=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Most Damage Blocked</strong></p>\r\n            <p>{{hero.quickplay['DamageBlocked-MostinGame'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.role === 'tank'\">\r\n          <v-card-text class=\"card_text\" v-show=\"viewMode ==='Competitive'\" >\r\n            <p><strong>Objective Time</strong></p>\r\n            <p>{{hero.competitive['ObjectiveTime'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-show=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Objective Time</strong></p>\r\n            <p>{{hero.quickplay['ObjectiveTime'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.role === 'tank'\">\r\n          <v-card-text class=\"card_text\" v-show=\"viewMode ==='Competitive'\" >\r\n            <p><strong>Avg Obj Time</strong></p>\r\n            <p>{{hero.competitive['ObjectiveTime-Average'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-show=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Avg Obj Time</strong></p>\r\n            <p>{{hero.quickplay['ObjectiveTime-Average'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.role === 'tank'\">\r\n          <v-card-text class=\"card_text\" v-show=\"viewMode ==='Competitive'\" >\r\n            <p><strong>Most Obj Time</strong></p>\r\n            <p>{{hero.competitive['ObjectiveTime-MostinGame'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-show=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Most Obj Time</strong></p>\r\n            <p>{{hero.quickplay['ObjectiveTime-MostinGame'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.role === 'tank'\">\r\n          <v-card-text class=\"card_text\" v-show=\"viewMode ==='Competitive'\" >\r\n            <p><strong>Objective Kills</strong></p>\r\n            <p>{{hero.competitive['ObjectiveKills'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-show=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Objective Kills</strong></p>\r\n            <p>{{hero.quickplay['ObjectiveKills'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.role === 'tank'\">\r\n          <v-card-text class=\"card_text\" v-show=\"viewMode ==='Competitive'\" >\r\n            <p><strong>Avg Obj Kills</strong></p>\r\n            <p>{{hero.competitive['ObjectiveKills-Average'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-show=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Avg Obj Kills</strong></p>\r\n            <p>{{hero.quickplay['ObjectiveKills-Average'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.role === 'tank'\">\r\n          <v-card-text class=\"card_text\" v-show=\"viewMode ==='Competitive'\" >\r\n            <p><strong>Most Obj Kills</strong></p>\r\n            <p>{{hero.competitive['ObjectiveKills-MostinGame'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-show=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Most Obj Kills</strong></p>\r\n            <p>{{hero.quickplay['ObjectiveKills-MostinGame'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <!-- End Tank Stats -->\r\n        <!-- Damage and Defense Hero Stats -->\r\n\r\n        <v-card-column v-if=\"hero.role === 'offense' || hero.role === 'defense'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Solo Kills</strong></p>\r\n            <p>{{hero.competitive['SoloKills'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Solo Kills</strong></p>\r\n            <p>{{hero.quickplay['SoloKills'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.role === 'offense' || hero.role === 'defense'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Avg Solo Kills</strong></p>\r\n            <p>{{hero.competitive['SoloKills-Average'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Avg Solo Kills</strong></p>\r\n            <p>{{hero.quickplay['SoloKills-Average'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.role === 'offense' || hero.role === 'defense'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Most Solo Kills</strong></p>\r\n            <p>{{hero.competitive['SoloKills-MostinGame'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Most Solo Kills</strong></p>\r\n            <p>{{hero.quickplay['SoloKills-MostinGame'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.role === 'offense' || hero.role === 'defense'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Final Blows</strong></p>\r\n            <p>{{hero.competitive['FinalBlows'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Final Blows</strong></p>\r\n            <p>{{hero.quickplay['FinalBlows'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.role === 'offense' || hero.role === 'defense'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Avg Final Blows</strong></p>\r\n            <p>{{hero.competitive['FinalBlows-Average'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Avg Final Blows</strong></p>\r\n            <p>{{hero.quickplay['FinalBlows-Average'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.role === 'offense' || hero.role === 'defense'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Most Final Blows</strong></p>\r\n            <p>{{hero.competitive['FinalBlows-MostinGame'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Most Final Blows</strong></p>\r\n            <p>{{hero.quickplay['FinalBlows-MostinGame'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.role === 'offense' || hero.role === 'defense'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Melee Final Blows</strong></p>\r\n            <p>{{hero.competitive['MeleeFinalBlows'] || hero.competitive['MeleeFinalBlow'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Melee Final Blows</strong></p>\r\n            <p>{{hero.quickplay['MeleeFinalBlows'] || hero.quickplay['MeleeFinalBlow'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.role === 'offense' || hero.role === 'defense'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Avg Melee Final Blows</strong></p>\r\n            <p>{{hero.competitive['MeleeFinalBlows-Average'] || hero.competitive['MeleeFinalBlow-Average'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Avg Melee Final Blows</strong></p>\r\n            <p>{{hero.quickplay['MeleeFinalBlows-Average'] || hero.quickplay['MeleeFinalBlow-Average'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.role === 'offense' || hero.role === 'defense'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Most Melee Final Blows</strong></p>\r\n            <p>{{hero.competitive['MeleeFinalBlows-MostinGame'] || hero.competitive['MeleeFinalBlow-MostinGame'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Most Melee Final Blows</strong></p>\r\n            <p>{{hero.quickplay['MeleeFinalBlows-MostinGame'] || hero.quickplay['MeleeFinalBlow-MostinGame'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n      </v-card-row>\r\n    </v-card-column>\r\n\r\n  </v-card-row>\r\n  <hr v-if=\"hero.name !== 'Symmetra'\"/>\r\n\r\n  <!-- Hero Specific Stats -->\r\n  <v-card-row v-show=\"fullStats\" class=\"heroStatRow\">\r\n    <v-card-column>\r\n\r\n      <!-- Row Heading -->\r\n      <v-card-row class=\"statHeader\">\r\n        <p>Hero Stats</p>\r\n      </v-card-row>\r\n\r\n      <v-card-row>\r\n\r\n      <!-- ============================================================================================================================ -->\r\n      <!-- GENERAL ------------------------------------------------------------------------------------------------------------------>\r\n      <!-- ============================================================================================================================ -->\r\n\r\n      <v-card-column v-if=\"noCrit.indexOf(hero.name) < 0\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Crits</strong></p>\r\n            <p>{{hero.competitive['CriticalHits'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Crits</strong></p>\r\n            <p>{{hero.quickplay['CriticalHits'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"noCrit.indexOf(hero.name) < 0\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Avg Crits</strong></p>\r\n            <p>{{hero.competitive['CriticalHits-Average'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Avg Crits</strong></p>\r\n            <p>{{hero.quickplay['CriticalHits-Average'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"noCrit.indexOf(hero.name) < 0\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Most Crits</strong></p>\r\n            <p>{{hero.competitive['CriticalHits-MostinGame'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Most Crits</strong></p>\r\n            <p>{{hero.quickplay['CriticalHits-MostinGame'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"noCrit.indexOf(hero.name) < 0\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Crit %</strong></p>\r\n            <p>{{hero.competitive['CriticalHitAccuracy'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Crit %</strong></p>\r\n            <p>{{hero.quickplay['CriticalHitAccuracy'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <!-- ============================================================================================================================ -->\r\n        <!-- ANA ------------------------------------------------------------------------------------------------------------------>\r\n        <!-- ============================================================================================================================ -->\r\n\r\n        <v-card-column v-if=\"hero.name === 'Ana'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Enemies Slept</strong></p>\r\n            <p>{{hero.competitive['EnemiesSlept'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Enemies Slept</strong></p>\r\n            <p>{{hero.quickplay['EnemiesSlept'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Ana'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Avg Enemies Slept</strong></p>\r\n            <p>{{hero.competitive['EnemiesSlept-Average'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Avg Enemies Slept</strong></p>\r\n            <p>{{hero.quickplay['EnemiesSlept-Average'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Ana'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Most Enemies Slept</strong></p>\r\n            <p>{{hero.competitive['EnemiesSlept-MostinGame'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Most Enemies Slept</strong></p>\r\n            <p>{{hero.quickplay['EnemiesSlept-MostinGame'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Ana'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Nano Boosts</strong></p>\r\n            <p>{{hero.competitive['NanoBoostsApplied'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Nano Boosts</strong></p>\r\n            <p>{{hero.quickplay['NanoBoostsApplied'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Ana'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Avg Nano Boosts</strong></p>\r\n            <p>{{hero.competitive['NanoBoostsApplied-Average'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Avg Nano Boosts</strong></p>\r\n            <p>{{hero.quickplay['NanoBoostsApplied-Average'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Ana'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Most Nano Boosts</strong></p>\r\n            <p>{{hero.competitive['NanoBoostsApplied-MostinGame'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Most Nano Boosts</strong></p>\r\n            <p>{{hero.quickplay['NanoBoostsApplied-MostinGame'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Ana'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Nano Boost Assits</strong></p>\r\n            <p>{{hero.competitive['NanoBoostAssists'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Nano Boost Assits</strong></p>\r\n            <p>{{hero.quickplay['NanoBoostAssists'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Ana'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Avg Nano Assits</strong></p>\r\n            <p>{{hero.competitive['NanoBoostAssists-Average'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Avg Nano Assits</strong></p>\r\n            <p>{{hero.quickplay['NanoBoostAssists-Average'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Ana'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Most Nano Assits</strong></p>\r\n            <p>{{hero.competitive['NanoBoostAssists-MostinGame'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Most Nano Assits</strong></p>\r\n            <p>{{hero.quickplay['NanoBoostAssists-MostinGame'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Ana'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Scoped Hits</strong></p>\r\n            <p>{{hero.competitive['ScopedHits'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Scoped Hits</strong></p>\r\n            <p>{{hero.quickplay['ScopedHits'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Ana'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Scoped Accuracy</strong></p>\r\n            <p>{{hero.competitive['ScopedAccuracy'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Scoped Accuracy</strong></p>\r\n            <p>{{hero.quickplay['ScopedAccuracy'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Ana'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Scoped Best</strong></p>\r\n            <p>{{hero.competitive['ScopedAccuracy-BestinGame'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Scoped Best</strong></p>\r\n            <p>{{hero.quickplay['ScopedAccuracy-BestinGame'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Ana'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Unscoped Hits</strong></p>\r\n            <p>{{hero.competitive['UnscopedShots'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Unscoped Hits</strong></p>\r\n            <p>{{hero.quickplay['UnscopedShots'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Ana'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Unscoped Accuracy</strong></p>\r\n            <p>{{hero.competitive['UnscopedAccuracy'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Unscoped Accuracy</strong></p>\r\n            <p>{{hero.quickplay['UnscopedAccuracy'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Ana'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Unscoped Best</strong></p>\r\n            <p>{{hero.competitive['UnscopedAccuracy-BestinGame'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Unscoped Best</strong></p>\r\n            <p>{{hero.quickplay['UnscopedAccuracy-BestinGame'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <!-- ============================================================================================================================ -->\r\n        <!-- Bastion ------------------------------------------------------------------------------------------------------------------>\r\n        <!-- ============================================================================================================================ -->\r\n\r\n        <v-card-column v-if=\"hero.name === 'Bastion'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Shots Fired</strong></p>\r\n            <p>{{hero.competitive['ShotsFired'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Shots Fired</strong></p>\r\n            <p>{{hero.quickplay['ShotsFired'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Bastion'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Shots Hit</strong></p>\r\n            <p>{{hero.competitive['ShotsHit'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Shots Hit</strong></p>\r\n            <p>{{hero.quickplay['ShotsHit'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Bastion'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Recon Kills</strong></p>\r\n            <p>{{hero.competitive['ReconKills'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Recon Kills</strong></p>\r\n            <p>{{hero.quickplay['ReconKills'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Bastion'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Avg Recon Kills</strong></p>\r\n            <p>{{hero.competitive['ReconKills-Average'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Avg Recon Kills</strong></p>\r\n            <p>{{hero.quickplay['ReconKills-Average'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Bastion'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Most Recon Kills</strong></p>\r\n            <p>{{hero.competitive['ReconKills-MostinGame'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Most Recon Kills</strong></p>\r\n            <p>{{hero.quickplay['ReconKills-MostinGame'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Bastion'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Sentry Kills</strong></p>\r\n            <p>{{hero.competitive['SentryKills'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Sentry Kills</strong></p>\r\n            <p>{{hero.quickplay['SentryKills'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Bastion'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Avg Sentry Kills</strong></p>\r\n            <p>{{hero.competitive['SentryKills-Average'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Avg Sentry Kills</strong></p>\r\n            <p>{{hero.quickplay['SentryKills-Average'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Bastion'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Most Sentry Kills</strong></p>\r\n            <p>{{hero.competitive['SentryKills-MostinGame'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Most Sentry Kills</strong></p>\r\n            <p>{{hero.quickplay['SentryKills-MostinGame'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Bastion'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Tank Kills</strong></p>\r\n            <p>{{hero.competitive['TankKills'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Tank Kills</strong></p>\r\n            <p>{{hero.quickplay['TankKills'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Bastion'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Avg Tank Kills</strong></p>\r\n            <p>{{hero.competitive['TankKills-Average'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Avg Tank Kills</strong></p>\r\n            <p>{{hero.quickplay['TankKills-Average'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Bastion'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Most Tank Kills</strong></p>\r\n            <p>{{hero.competitive['TankKills-MostinGame'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Most Tank Kills</strong></p>\r\n            <p>{{hero.quickplay['TankKills-MostinGame'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Bastion'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Self Healing</strong></p>\r\n            <p>{{hero.competitive['SelfHealing'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Self Healing</strong></p>\r\n            <p>{{hero.quickplay['SelfHealing'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Bastion'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Avg Self Healing</strong></p>\r\n            <p>{{hero.competitive['SelfHealing-Average'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Avg Self Healing</strong></p>\r\n            <p>{{hero.quickplay['SelfHealing-Average'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Bastion'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Most Self Healing</strong></p>\r\n            <p>{{hero.competitive['SelfHealing-MostinGame'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Most Self Healing</strong></p>\r\n            <p>{{hero.quickplay['SelfHealing-MostinGame'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <!-- ============================================================================================================================ -->\r\n        <!-- D.Va ------------------------------------------------------------------------------------------------------------------>\r\n        <!-- ============================================================================================================================ -->\r\n\r\n        <v-card-column v-if=\"hero.name === 'D.Va'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Mech Deaths</strong></p>\r\n            <p>{{hero.competitive['MechDeaths'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Mech Deaths</strong></p>\r\n            <p>{{hero.quickplay['MechDeaths'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'D.Va'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Mechs Called</strong></p>\r\n            <p>{{hero.competitive['MechsCalled'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Mechs Called</strong></p>\r\n            <p>{{hero.quickplay['MechsCalled'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'D.Va'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Self-Destruct Kills</strong></p>\r\n            <p>{{hero.competitive['Self-DestructKills'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Self-Destruct Kills</strong></p>\r\n            <p>{{hero.quickplay['Self-DestructKills'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'D.Va'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Avg Self-Destruct Kills</strong></p>\r\n            <p>{{hero.competitive['Self-DestructKills-Average'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Avg Self-Destruct Kills</strong></p>\r\n            <p>{{hero.quickplay['Self-DestructKills-Average'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'D.Va'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Most Self-Destruct Kills</strong></p>\r\n            <p>{{hero.competitive['Self-DestructKills-MostinGame'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Most Self-Destruct Kills</strong></p>\r\n            <p>{{hero.quickplay['Self-DestructKills-MostinGame'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n\r\n        <!-- ============================================================================================================================ -->\r\n        <!-- Genji ------------------------------------------------------------------------------------------------------------------>\r\n        <!-- ============================================================================================================================ -->\r\n\r\n        <v-card-column v-if=\"hero.name === 'Genji'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Dragonblades</strong></p>\r\n            <p>{{hero.competitive['Dragonblades'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Dragonblades</strong></p>\r\n            <p>{{hero.quickplay['Dragonblades'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Genji'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Dragonblade Kills</strong></p>\r\n            <p>{{hero.competitive['DragonbladeKills'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Dragonblade Kills</strong></p>\r\n            <p>{{hero.quickplay['DragonbladeKills'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Genji'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Avg Dragonblade Kills</strong></p>\r\n            <p>{{hero.competitive['DragonbladeKills-Average'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Avg Dragonblade Kills</strong></p>\r\n            <p>{{hero.quickplay['DragonbladeKills-Average'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Genji'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Most Dragonblade Kills</strong></p>\r\n            <p>{{hero.competitive['DragonbladeKills-MostinGame'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Most Dragonblade Kills</strong></p>\r\n            <p>{{hero.quickplay['DragonbladeKills-MostinGame'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <!-- ============================================================================================================================ -->\r\n        <!-- Hanzo ------------------------------------------------------------------------------------------------------------------>\r\n        <!-- ============================================================================================================================ -->\r\n\r\n        <v-card-column v-if=\"hero.name === 'Hanzo'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Dragonstrike Kills</strong></p>\r\n            <p>{{hero.competitive['DragonstrikeKills'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Dragonstrike Kills</strong></p>\r\n            <p>{{hero.quickplay['DragonstrikeKills'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Hanzo'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Avg Dragonstrike Kills</strong></p>\r\n            <p>{{hero.competitive['DragonstrikeKills-Average'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Avg Dragonstrike Kills</strong></p>\r\n            <p>{{hero.quickplay['DragonstrikeKills-Average'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Hanzo'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Most Dragonstrike Kills</strong></p>\r\n            <p>{{hero.competitive['DragonstrikeKills-MostinGame'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Most Dragonstrike Kills</strong></p>\r\n            <p>{{hero.quickplay['DragonstrikeKills-MostinGame'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Hanzo'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Scatter Arrow Kills</strong></p>\r\n            <p>{{hero.competitive['ScatterArrowKills'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Scatter Arrow Kills</strong></p>\r\n            <p>{{hero.quickplay['ScatterArrowKills'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Hanzo'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Avg Scatter Arrow Kills</strong></p>\r\n            <p>{{hero.competitive['ScatterArrowKills-Average'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Avg Scatter Arrow Kills</strong></p>\r\n            <p>{{hero.quickplay['ScatterArrowKills-Average'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Hanzo'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Most Scatter Arrow Kills</strong></p>\r\n            <p>{{hero.competitive['ScatterArrowKills-MostinGame'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Most Scatter Arrow Kills</strong></p>\r\n            <p>{{hero.quickplay['ScatterArrowKills-MostinGame'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <!-- ============================================================================================================================ -->\r\n        <!-- Junkrat ------------------------------------------------------------------------------------------------------------------>\r\n        <!-- ============================================================================================================================ -->\r\n\r\n        <v-card-column v-if=\"hero.name === 'Junkrat'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Enemies Trapped</strong></p>\r\n            <p>{{hero.competitive['EnemiesTrapped'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Enemies Trapped</strong></p>\r\n            <p>{{hero.quickplay['EnemiesTrapped'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Junkrat'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Most Enemies Trapped</strong></p>\r\n            <p>{{hero.competitive['EnemiesTrapped-MostinGame'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Most Enemies Trapped</strong></p>\r\n            <p>{{hero.quickplay['EnemiesTrapped-MostinGame'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Junkrat'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>RIP Tire Kills</strong></p>\r\n            <p>{{hero.competitive['RIP-TireKills'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>RIP Tire Kills</strong></p>\r\n            <p>{{hero.quickplay['RIP-TireKills'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Junkrat'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Avg RIP Tire Kills</strong></p>\r\n            <p>{{hero.competitive['RIP-TireKills-Average'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Avg RIP Tire Kills</strong></p>\r\n            <p>{{hero.quickplay['RIP-TireKills-Average'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Junkrat'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Most RIP Tire Kills</strong></p>\r\n            <p>{{hero.competitive['RIP-TireKills-MostinGame'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Most RIP Tire Kills</strong></p>\r\n            <p>{{hero.quickplay['RIP-TireKills-MostinGame'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <!-- ============================================================================================================================ -->\r\n        <!-- Lucio ------------------------------------------------------------------------------------------------------------------>\r\n        <!-- ============================================================================================================================ -->\r\n\r\n        <v-card-column v-if=\"hero.name === 'Lúcio'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Environmental Kills</strong></p>\r\n            <p>{{hero.competitive['EnvironmentalKills'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Environmental Kills</strong></p>\r\n            <p>{{hero.quickplay['EnvironmentalKills'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Lúcio'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Sound Barriers</strong></p>\r\n            <p>{{hero.competitive['SoundBarriersProvided'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Sound Barriers</strong></p>\r\n            <p>{{hero.quickplay['SoundBarriersProvided'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Lúcio'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Avg Sound Barriers</strong></p>\r\n            <p>{{hero.competitive['SoundBarriersProvided-Average'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Avg Sound Barriers</strong></p>\r\n            <p>{{hero.quickplay['SoundBarriersProvided-Average'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Lúcio'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Most Sound Barriers</strong></p>\r\n            <p>{{hero.competitive['SoundBarriersProvided-MostinGame'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Most Sound Barriers</strong></p>\r\n            <p>{{hero.quickplay['SoundBarriersProvided-MostinGame'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <!-- ============================================================================================================================ -->\r\n        <!-- McCree ------------------------------------------------------------------------------------------------------------------>\r\n        <!-- ============================================================================================================================ -->\r\n\r\n        <v-card-column v-if=\"hero.name === 'McCree'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Fan the Hammer Kills</strong></p>\r\n            <p>{{hero.competitive['FantheHammerKills'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Fan the Hammer Kills</strong></p>\r\n            <p>{{hero.quickplay['FantheHammerKills'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'McCree'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Avg Fan the Hammer Kills</strong></p>\r\n            <p>{{hero.competitive['FantheHammerKills-Average'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Avg Fan the Hammer Kills</strong></p>\r\n            <p>{{hero.quickplay['FantheHammerKills-Average'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'McCree'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Most Fan the Hammer Kills</strong></p>\r\n            <p>{{hero.competitive['FantheHammerKills-MostinGame'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Most Fan the Hammer Kills</strong></p>\r\n            <p>{{hero.quickplay['FantheHammerKills-MostinGame'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'McCree'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Deadeye Kills</strong></p>\r\n            <p>{{hero.competitive['DeadeyeKills'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Deadeye Kills</strong></p>\r\n            <p>{{hero.quickplay['DeadeyeKills'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'McCree'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Avg Deadeye Kills</strong></p>\r\n            <p>{{hero.competitive['DeadeyeKills-Average'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Avg Deadeye Kills</strong></p>\r\n            <p>{{hero.quickplay['DeadeyeKills-Average'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'McCree'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Most Deadeye Kills</strong></p>\r\n            <p>{{hero.competitive['DeadeyeKills-MostinGame'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Most Deadeye Kills</strong></p>\r\n            <p>{{hero.quickplay['DeadeyeKills-MostinGame'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <!-- ============================================================================================================================ -->\r\n        <!-- Mei ------------------------------------------------------------------------------------------------------------------>\r\n        <!-- ============================================================================================================================ -->\r\n\r\n        <v-card-column v-if=\"hero.name === 'Mei'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Blizzard Kills</strong></p>\r\n            <p>{{hero.competitive['BlizzardKills'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Blizzard Kills</strong></p>\r\n            <p>{{hero.quickplay['BlizzardKills'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Mei'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Avg Blizzard Kills</strong></p>\r\n            <p>{{hero.competitive['BlizzardKills-Average'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Avg Blizzard Kills</strong></p>\r\n            <p>{{hero.quickplay['BlizzardKills-Average'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Mei'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Most Blizzard Kills</strong></p>\r\n            <p>{{hero.competitive['BlizzardKills-MostinGame'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Most Blizzard Kills</strong></p>\r\n            <p>{{hero.quickplay['BlizzardKills-MostinGame'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Mei'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Enemies Frozen</strong></p>\r\n            <p>{{hero.competitive['EnemiesFrozen'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Enemies Frozen</strong></p>\r\n            <p>{{hero.quickplay['EnemiesFrozen'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Mei'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Avg Enemies Frozen</strong></p>\r\n            <p>{{hero.competitive['EnemiesFrozen-Average'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Avg Enemies Frozen</strong></p>\r\n            <p>{{hero.quickplay['EnemiesFrozen-Average'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Mei'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Most Enemies Frozen</strong></p>\r\n            <p>{{hero.competitive['EnemiesFrozen-MostinGame'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Most Enemies Frozen</strong></p>\r\n            <p>{{hero.quickplay['EnemiesFrozen-MostinGame'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <!-- ============================================================================================================================ -->\r\n        <!-- Mercy ------------------------------------------------------------------------------------------------------------------>\r\n        <!-- ============================================================================================================================ -->\r\n\r\n        <v-card-column v-if=\"hero.name === 'Mercy'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Players Resurrected</strong></p>\r\n            <p>{{hero.competitive['PlayersResurrected'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Players Resurrected</strong></p>\r\n            <p>{{hero.quickplay['PlayersResurrected'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Mercy'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Avg Players Resurrected</strong></p>\r\n            <p>{{hero.competitive['PlayersResurrected-Average'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Avg Players Resurrected</strong></p>\r\n            <p>{{hero.quickplay['PlayersResurrected-Average'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Mercy'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Most Players Resurrected</strong></p>\r\n            <p>{{hero.competitive['PlayersResurrected-MostinGame'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Most Players Resurrected</strong></p>\r\n            <p>{{hero.quickplay['PlayersResurrected-MostinGame'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Mercy'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Damage Amplified</strong></p>\r\n            <p>{{hero.competitive['DamageAmplified'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Damage Amplified</strong></p>\r\n            <p>{{hero.quickplay['DamageAmplified'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Mercy'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Avg Damage Amplified</strong></p>\r\n            <p>{{hero.competitive['DamageAmplified-Average'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Avg Damage Amplified</strong></p>\r\n            <p>{{hero.quickplay['DamageAmplified-Average'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Mercy'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Most Damage Amplified</strong></p>\r\n            <p>{{hero.competitive['DamageAmplified-MostinGame'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Most Damage Amplified</strong></p>\r\n            <p>{{hero.quickplay['DamageAmplified-MostinGame'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Mercy'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Blaster Kills</strong></p>\r\n            <p>{{hero.competitive['BlasterKills'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Blaster Kills</strong></p>\r\n            <p>{{hero.quickplay['BlasterKills'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Mercy'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Avg Blaster Kills</strong></p>\r\n            <p>{{hero.competitive['BlasterKills-Average'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Avg Blaster Kills</strong></p>\r\n            <p>{{hero.quickplay['BlasterKills-Average'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Mercy'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Most Blaster Kills</strong></p>\r\n            <p>{{hero.competitive['BlasterKills-MostinGame'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Most Blaster Kills</strong></p>\r\n            <p>{{hero.quickplay['BlasterKills-MostinGame'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <!-- ============================================================================================================================ -->\r\n        <!-- Pharah ------------------------------------------------------------------------------------------------------------------>\r\n        <!-- ============================================================================================================================ -->\r\n\r\n        <v-card-column v-if=\"hero.name === 'Pharah'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Direct Hits</strong></p>\r\n            <p>{{hero.competitive['RocketDirectHits'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Direct Hits</strong></p>\r\n            <p>{{hero.quickplay['RocketDirectHits'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Pharah'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Avg Direct Hits</strong></p>\r\n            <p>{{hero.competitive['RocketDirectHits-Average'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Avg Direct Hits</strong></p>\r\n            <p>{{hero.quickplay['RocketDirectHits-Average'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Pharah'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Most Direct Hits</strong></p>\r\n            <p>{{hero.competitive['RocketDirectHits-MostinGame'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Most Direct Hits</strong></p>\r\n            <p>{{hero.quickplay['RocketDirectHits-MostinGame'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Pharah'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Barrage Kills</strong></p>\r\n            <p>{{hero.competitive['BarrageKills'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Barrage Kills</strong></p>\r\n            <p>{{hero.quickplay['BarrageKills'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Pharah'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Avg Barrage Kills</strong></p>\r\n            <p>{{hero.competitive['BarrageKills-Average'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Avg Barrage Kills</strong></p>\r\n            <p>{{hero.quickplay['BarrageKills-Average'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Pharah'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Most Barrage Kills</strong></p>\r\n            <p>{{hero.competitive['BarrageKills-MostinGame'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Most Barrage Kills</strong></p>\r\n            <p>{{hero.quickplay['BarrageKills-MostinGame'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <!-- ============================================================================================================================ -->\r\n        <!-- Reaper ------------------------------------------------------------------------------------------------------------------>\r\n        <!-- ============================================================================================================================ -->\r\n\r\n        <v-card-column v-if=\"hero.name === 'Reaper'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Souls Consumed</strong></p>\r\n            <p>{{hero.competitive['SoulsConsumed'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Souls Consumed</strong></p>\r\n            <p>{{hero.quickplay['SoulsConsumed'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Reaper'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Avg Souls Consumed</strong></p>\r\n            <p>{{hero.competitive['SoulsConsumed-Average'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Avg Souls Consumed</strong></p>\r\n            <p>{{hero.quickplay['SoulsConsumed-Average'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Reaper'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Most Souls Consumed</strong></p>\r\n            <p>{{hero.competitive['SoulsConsumed-MostinGame'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Most Souls Consumed</strong></p>\r\n            <p>{{hero.quickplay['SoulsConsumed-MostinGame'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Reaper'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Death Blossom Kills</strong></p>\r\n            <p>{{hero.competitive['DeathBlossomKills'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Death Blossom Kills</strong></p>\r\n            <p>{{hero.quickplay['DeathBlossomKills'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Reaper'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Avg Death Blossom Kills</strong></p>\r\n            <p>{{hero.competitive['DeathBlossomKills-Average'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Avg Death Blossom Kills</strong></p>\r\n            <p>{{hero.quickplay['DeathBlossomKills-Average'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Reaper'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Most Death Blossom Kills</strong></p>\r\n            <p>{{hero.competitive['DeathBlossomKills-MostinGame'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Most Death Blossom Kills</strong></p>\r\n            <p>{{hero.quickplay['DeathBlossomKills-MostinGame'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <!-- ============================================================================================================================ -->\r\n        <!-- Reinhardt ------------------------------------------------------------------------------------------------------------------>\r\n        <!-- ============================================================================================================================ -->\r\n\r\n        <v-card-column v-if=\"hero.name === 'Reinhardt'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Charge Kills</strong></p>\r\n            <p>{{hero.competitive['ChargeKills'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Charge Kills</strong></p>\r\n            <p>{{hero.quickplay['ChargeKills'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Reinhardt'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Avg Charge Kills</strong></p>\r\n            <p>{{hero.competitive['ChargeKills-Average'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Avg Charge Kills</strong></p>\r\n            <p>{{hero.quickplay['ChargeKills-Average'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Reinhardt'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Most Charge Kills</strong></p>\r\n            <p>{{hero.competitive['ChargeKills-MostinGame'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Most Charge Kills</strong></p>\r\n            <p>{{hero.quickplay['ChargeKills-MostinGame'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Reinhardt'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Fire Strike Kills</strong></p>\r\n            <p>{{hero.competitive['FireStrikeKills'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Fire Strike Kills</strong></p>\r\n            <p>{{hero.quickplay['FireStrikeKills'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Reinhardt'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Avg Fire Strike Kills</strong></p>\r\n            <p>{{hero.competitive['FireStrikeKills-Average'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Avg Fire Strike Kills</strong></p>\r\n            <p>{{hero.quickplay['FireStrikeKills-Average'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Reinhardt'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Most Fire Strike Kills</strong></p>\r\n            <p>{{hero.competitive['FireStrikeKills-MostinGame'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Most Fire Strike Kills</strong></p>\r\n            <p>{{hero.quickplay['FireStrikeKills-MostinGame'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n          <v-card-column v-if=\"hero.name === 'Reinhardt'\">\r\n            <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n              <p><strong>Earthshatter Kills</strong></p>\r\n              <p>{{hero.competitive['EarthshatterKills'] || '---' }} </p>\r\n            </v-card-text>\r\n\r\n            <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n              <p><strong>Earthshatter Kills</strong></p>\r\n              <p>{{hero.quickplay['EarthshatterKills'] || '---'}} </p>\r\n            </v-card-text>\r\n          </v-card-column>\r\n\r\n          <v-card-column v-if=\"hero.name === 'Reinhardt'\">\r\n            <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n              <p><strong>Avg Earthshatter Kills</strong></p>\r\n              <p>{{hero.competitive['EarthshatterKills-Average'] || '---' }} </p>\r\n            </v-card-text>\r\n\r\n            <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n              <p><strong>Avg Earthshatter Kills</strong></p>\r\n              <p>{{hero.quickplay['EarthshatterKills-Average'] || '---'}} </p>\r\n            </v-card-text>\r\n          </v-card-column>\r\n\r\n          <v-card-column v-if=\"hero.name === 'Reinhardt'\">\r\n            <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n              <p><strong>Most Earthshatter Kills</strong></p>\r\n              <p>{{hero.competitive['EarthshatterKills-MostinGame'] || '---' }} </p>\r\n            </v-card-text>\r\n\r\n            <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n              <p><strong>Most Earthshatter Kills</strong></p>\r\n              <p>{{hero.quickplay['EarthshatterKills-MostinGame'] || '---'}} </p>\r\n            </v-card-text>\r\n        </v-card-column>\r\n\r\n        <!-- ============================================================================================================================ -->\r\n        <!-- Roadhog ------------------------------------------------------------------------------------------------------------------>\r\n        <!-- ============================================================================================================================ -->\r\n\r\n        <v-card-column v-if=\"hero.name === 'Roadhog'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Hooks Attempted</strong></p>\r\n            <p>{{hero.competitive['HooksAttempted'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Hooks Attempted</strong></p>\r\n            <p>{{hero.quickplay['HooksAttempted'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Roadhog'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Hook Accuracy</strong></p>\r\n            <p>{{hero.competitive['HookAccuracy'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Hook Accuracy</strong></p>\r\n            <p>{{hero.quickplay['HookAccuracy'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Roadhog'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Best Hook Accuracy</strong></p>\r\n            <p>{{hero.competitive['HookAccuracy-BestinGame'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Best Hook Accuracy</strong></p>\r\n            <p>{{hero.quickplay['HookAccuracy-BestinGame'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Roadhog'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Enemies Hooked</strong></p>\r\n            <p>{{hero.competitive['EnemiesHooked'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Enemies Hooked</strong></p>\r\n            <p>{{hero.quickplay['EnemiesHooked'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Roadhog'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Avg Enemies Hooked</strong></p>\r\n            <p>{{hero.competitive['EnemiesHooked-Average'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Avg Enemies Hooked</strong></p>\r\n            <p>{{hero.quickplay['EnemiesHooked-Average'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Roadhog'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Most Enemies Hooked</strong></p>\r\n            <p>{{hero.competitive['EnemiesHooked-MostinGame'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Most Enemies Hooked</strong></p>\r\n            <p>{{hero.quickplay['EnemiesHooked-MostinGame'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Roadhog'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Whole Hog Kills</strong></p>\r\n            <p>{{hero.competitive['WholeHogKills'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Whole Hog Kills</strong></p>\r\n            <p>{{hero.quickplay['WholeHogKills'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Roadhog'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Avg Whole Hog Kills</strong></p>\r\n            <p>{{hero.competitive['WholeHogKills-Average'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Avg Whole Hog Kills</strong></p>\r\n            <p>{{hero.quickplay['WholeHogKills-Average'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Roadhog'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Most Whole Hog Kills</strong></p>\r\n            <p>{{hero.competitive['WholeHogKills-MostinGame'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Most Whole Hog Kills</strong></p>\r\n            <p>{{hero.quickplay['WholeHogKills-MostinGame'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <!-- ============================================================================================================================ -->\r\n        <!-- Soldier: 76 ------------------------------------------------------------------------------------------------------------------>\r\n        <!-- ============================================================================================================================ -->\r\n\r\n        <v-card-column v-if=\"hero.name === 'Soldier: 76'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Helix Rocket Kills</strong></p>\r\n            <p>{{hero.competitive['HelixRocketKIlls'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Helix Rocket Kills</strong></p>\r\n            <p>{{hero.quickplay['HelixRocketKIlls'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Soldier: 76'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Avg H. Rocket Kills</strong></p>\r\n            <p>{{hero.competitive['HelixRocketKIlls-Average'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Avg H. Rocket Kills</strong></p>\r\n            <p>{{hero.quickplay['HelixRocketKIlls-Average'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Soldier: 76'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Most H. Rocket Kills</strong></p>\r\n            <p>{{hero.competitive['HelixRocketKIlls-MostinGame'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Most H. Rocket Kills</strong></p>\r\n            <p>{{hero.quickplay['HelixRocketKIlls-MostinGame'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Soldier: 76'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Tactical Visor Kills</strong></p>\r\n            <p>{{hero.competitive['TacticalVisorKills'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Tactical Visor Kills</strong></p>\r\n            <p>{{hero.quickplay['TacticalVisorKills'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Soldier: 76'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Avg T. Visor Kills</strong></p>\r\n            <p>{{hero.competitive['TacticalVisorKills-Average'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Avg T. Visor Kills</strong></p>\r\n            <p>{{hero.quickplay['TacticalVisorKills-Average'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Soldier: 76'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Most T. Visor Kills</strong></p>\r\n            <p>{{hero.competitive['TacticalVisorKills-MostinGame'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Most T. Visor Kills</strong></p>\r\n            <p>{{hero.quickplay['TacticalVisorKills-MostinGame'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Soldier: 76'\">\r\n          <v-card-text class=\"card_text\" v-show=\"viewMode ==='Competitive'\">\r\n            <p><strong>Healing Done</strong></p>\r\n            <p>{{hero.competitive['HealingDone'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-show=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Healing Done</strong></p>\r\n            <p>{{hero.quickplay['HealingDone'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Soldier: 76'\">\r\n          <v-card-text class=\"card_text\" v-show=\"viewMode ==='Competitive'\">\r\n            <p><strong>Avg Healing</strong></p>\r\n            <p>{{hero.competitive['HealingDone-Average'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-show=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Avg Healing</strong></p>\r\n            <p>{{hero.quickplay['HealingDone-Average'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Soldier: 76'\">\r\n          <v-card-text class=\"card_text\" v-show=\"viewMode ==='Competitive'\">\r\n            <p><strong>Most Healing in Game</strong></p>\r\n            <p>{{hero.competitive['HealingDone-MostinGame'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-show=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Most Healing in Game</strong></p>\r\n            <p>{{hero.quickplay['HealingDone-MostinGame'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Soldier: 76'\">\r\n          <v-card-text class=\"card_text\" v-show=\"viewMode ==='Competitive'\">\r\n            <p><strong>Most Healing in Life</strong></p>\r\n            <p>{{hero.competitive['HealingDone-MostinLife'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-show=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Most Healing in Life</strong></p>\r\n            <p>{{hero.quickplay['HealingDone-MostinLife'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Soldier: 76'\">\r\n          <v-card-text class=\"card_text\" v-show=\"viewMode ==='Competitive'\">\r\n            <p><strong>Biotic Fields Deployed</strong></p>\r\n            <p>{{hero.competitive['BioticFieldsDeployed'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-show=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Biotic Fields Deployed</strong></p>\r\n            <p>{{hero.quickplay['BioticFieldsDeployed'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Soldier: 76'\">\r\n          <v-card-text class=\"card_text\" v-show=\"viewMode ==='Competitive'\">\r\n            <p><strong>Biotic Field Healing</strong></p>\r\n            <p>{{hero.competitive['BioticFieldHealingDone'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-show=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Biotic Field Healing</strong></p>\r\n            <p>{{hero.quickplay['BioticFieldHealingDone'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <!-- ============================================================================================================================ -->\r\n        <!-- Sombra ------------------------------------------------------------------------------------------------------------------>\r\n        <!-- ============================================================================================================================ -->\r\n        <!-- CURRENTLY NO DATA -->\r\n\r\n\r\n        <!-- ============================================================================================================================ -->\r\n        <!-- Symmetra ------------------------------------------------------------------------------------------------------------------>\r\n        <!-- ============================================================================================================================ -->\r\n\r\n        <v-card-column v-if=\"hero.name === 'Symmetra'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Teleporter Uptime</strong></p>\r\n            <p>{{hero.competitive['TeleporterUptime'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Teleporter Uptime</strong></p>\r\n            <p>{{hero.quickplay['TeleporterUptime'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Symmetra'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Avg Teleporter Uptime</strong></p>\r\n            <p>{{hero.competitive['TeleporterUptime-Average'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Avg Teleporter Uptime</strong></p>\r\n            <p>{{hero.quickplay['TeleporterUptime-Average'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Symmetra'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Best Teleporter Uptime</strong></p>\r\n            <p>{{hero.competitive['TeleporterUptime-BestinGame'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Best Teleporter Uptime</strong></p>\r\n            <p>{{hero.quickplay['TeleporterUptime-BestinGame'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Symmetra'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Players Teleported</strong></p>\r\n            <p>{{hero.competitive['PlayersTeleported'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Players Teleported</strong></p>\r\n            <p>{{hero.quickplay['PlayersTeleported'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Symmetra'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Avg Players Teleported</strong></p>\r\n            <p>{{hero.competitive['PlayersTeleported-Average'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Avg Players Teleported</strong></p>\r\n            <p>{{hero.quickplay['PlayersTeleported-Average'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Symmetra'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Most Players Teleported</strong></p>\r\n            <p>{{hero.competitive['PlayersTeleported-MostinGame'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Most Players Teleported</strong></p>\r\n            <p>{{hero.quickplay['PlayersTeleported-MostinGame'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Symmetra'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Sentry Turret Kills</strong></p>\r\n            <p>{{hero.competitive['SentryTurretKills'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Sentry Turret Kills</strong></p>\r\n            <p>{{hero.quickplay['SentryTurretKills'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Symmetra'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Avg Sentry Turret Kills</strong></p>\r\n            <p>{{hero.competitive['SentryTurretKills-Average'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Avg Sentry Turret Kills</strong></p>\r\n            <p>{{hero.quickplay['SentryTurretKills-Average'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Symmetra'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Most Sentry Turret Kills</strong></p>\r\n            <p>{{hero.competitive['SentryTurretKills-MostinGame'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Most Sentry Turret Kills</strong></p>\r\n            <p>{{hero.quickplay['SentryTurretKills-MostinGame'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Symmetra'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Damage Blocked</strong></p>\r\n            <p>{{hero.competitive['DamageBlocked'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Damage Blocked</strong></p>\r\n            <p>{{hero.quickplay['DamageBlocked'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Symmetra'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Avg Damage Blocked</strong></p>\r\n            <p>{{hero.competitive['DamageBlocked-Average'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Avg Damage Blocked</strong></p>\r\n            <p>{{hero.quickplay['DamageBlocked-Average'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Symmetra'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Most Damage Blocked</strong></p>\r\n            <p>{{hero.competitive['DamageBlocked-MostinGame'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Most Damage Blocked</strong></p>\r\n            <p>{{hero.quickplay['DamageBlocked-MostinGame'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <!-- ============================================================================================================================ -->\r\n        <!-- Tracer ------------------------------------------------------------------------------------------------------------------>\r\n        <!-- ============================================================================================================================ -->\r\n\r\n        <v-card-column v-if=\"hero.name === 'Tracer'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Pulse Bombs Attached</strong></p>\r\n            <p>{{hero.competitive['PulseBombsAttached'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Pulse Bombs Attached</strong></p>\r\n            <p>{{hero.quickplay['PulseBombsAttached'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Tracer'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Avg Pulse Bombs Attached</strong></p>\r\n            <p>{{hero.competitive['PulseBombsAttached-Average'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Avg Pulse Bombs Attached</strong></p>\r\n            <p>{{hero.quickplay['PulseBombsAttached-Average'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Tracer'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Most Pulse Bombs Attached</strong></p>\r\n            <p>{{hero.competitive['PulseBombsAttached-MostinGame'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Most Pulse Bombs Attached</strong></p>\r\n            <p>{{hero.quickplay['PulseBombsAttached-MostinGame'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Tracer'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Pulse Bomb Kills</strong></p>\r\n            <p>{{hero.competitive['PulseBombKills'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Pulse Bomb Kills</strong></p>\r\n            <p>{{hero.quickplay['PulseBombKills'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Tracer'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Avg Pulse Bomb Kills</strong></p>\r\n            <p>{{hero.competitive['PulseBombKills-Average'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Avg Pulse Bomb Kills</strong></p>\r\n            <p>{{hero.quickplay['PulseBombKills-Average'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Tracer'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Most Pulse Bomb Kills</strong></p>\r\n            <p>{{hero.competitive['PulseBombKills-MostinGame'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Most Pulse Bomb Kills</strong></p>\r\n            <p>{{hero.quickplay['PulseBombKills-MostinGame'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <!-- ============================================================================================================================ -->\r\n        <!-- Torbjörn ------------------------------------------------------------------------------------------------------------------>\r\n        <!-- ============================================================================================================================ -->\r\n\r\n        <v-card-column v-if=\"hero.name === 'Torbjörn'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Torbj&#xF6;rn Kills</strong></p>\r\n            <p>{{hero.competitive['Torbj&#xF6;rnKills'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Torbj&#xF6;rn Kills</strong></p>\r\n            <p>{{hero.quickplay['Torbj&#xF6;rnKills'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Torbjörn'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Avg Torbj&#xF6;rn Kills</strong></p>\r\n            <p>{{hero.competitive['Torbj&#xF6;rnKills-Average'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Avg Torbj&#xF6;rn Kills</strong></p>\r\n            <p>{{hero.quickplay['Torbj&#xF6;rnKills-Average'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Torbjörn'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Most Torbj&#xF6;rn Kills</strong></p>\r\n            <p>{{hero.competitive['Torbj&#xF6;rnKills-MostinGame'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Most Torbj&#xF6;rn Kills</strong></p>\r\n            <p>{{hero.quickplay['Torbj&#xF6;rnKills-MostinGame'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Torbjörn'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Turret Kills</strong></p>\r\n            <p>{{hero.competitive['TurretKills'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Turret Kills</strong></p>\r\n            <p>{{hero.quickplay['TurretKills'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Torbjörn'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Avg Turret Kills</strong></p>\r\n            <p>{{hero.competitive['TurretKills-Average'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Avg Turret Kills</strong></p>\r\n            <p>{{hero.quickplay['TurretKills-Average'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Torbjörn'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Molten Core Kills</strong></p>\r\n            <p>{{hero.competitive['MoltenCoreKillsKills'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Molten Core Kills</strong></p>\r\n            <p>{{hero.quickplay['MoltenCoreKills'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Torbjörn'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Avg Molten Core Kills</strong></p>\r\n            <p>{{hero.competitive['MoltenCoreKills-Average'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Avg Molten Core Kills</strong></p>\r\n            <p>{{hero.quickplay['MoltenCoreKills-Average'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Torbjörn'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Most Molten Core Kills</strong></p>\r\n            <p>{{hero.competitive['MoltenCoreKills-MostinGame'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Most Molten Core Kills</strong></p>\r\n            <p>{{hero.quickplay['MoltenCoreKills-MostinGame'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Torbjörn'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Armor Packs Created</strong></p>\r\n            <p>{{hero.competitive['ArmorPacksCreated'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Armor Packs Created</strong></p>\r\n            <p>{{hero.quickplay['ArmorPacksCreated'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Torbjörn'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Avg Armor Packs Created</strong></p>\r\n            <p>{{hero.competitive['ArmorPacksCreated-Average'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Avg Armor Packs Created</strong></p>\r\n            <p>{{hero.quickplay['ArmorPacksCreated-Average'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <!-- ============================================================================================================================ -->\r\n        <!-- Widowmaker ------------------------------------------------------------------------------------------------------------------>\r\n        <!-- ============================================================================================================================ -->\r\n\r\n        <v-card-column v-if=\"hero.name === 'Widowmaker'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Scoped Shots</strong></p>\r\n            <p>{{hero.competitive['Scoped Shots'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Scoped Shots</strong></p>\r\n            <p>{{hero.quickplay['ScopedShots'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Widowmaker'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Scoped Accuracy</strong></p>\r\n            <p>{{hero.competitive['ScopedAccuracy'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Scoped Accuracy</strong></p>\r\n            <p>{{hero.quickplay['ScopedAccuracy'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Widowmaker'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Best Scoped Accuracy</strong></p>\r\n            <p>{{hero.competitive['ScopedAccuracy-BestinGame'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Best Scoped Accuracy</strong></p>\r\n            <p>{{hero.quickplay['ScopedAccuracy-BestinGame'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Widowmaker'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Scoped Critical Hits</strong></p>\r\n            <p>{{hero.competitive['ScopedCriticalHits'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Scoped Critical Hits</strong></p>\r\n            <p>{{hero.quickplay['ScopedCriticalHits'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Widowmaker'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Avg Scoped Critical Hits</strong></p>\r\n            <p>{{hero.competitive['ScopedCriticalHits-Average'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Avg Scoped Critical Hits</strong></p>\r\n            <p>{{hero.quickplay['ScopedCriticalHits-Average'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Widowmaker'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Most Scoped Critical Hits</strong></p>\r\n            <p>{{hero.competitive['ScopedCriticalHits-MostinGame'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Most Scoped Critical Hits</strong></p>\r\n            <p>{{hero.quickplay['ScopedCriticalHits-MostinGame'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Widowmaker'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Venom Mine Kills</strong></p>\r\n            <p>{{hero.competitive['VenomMineKills'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Venom Mine Kills</strong></p>\r\n            <p>{{hero.quickplay['VenomMineKills'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Widowmaker'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Avg Venom Mine Kills</strong></p>\r\n            <p>{{hero.competitive['VenomMineKills-Average'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Avg Venom Mine Kills</strong></p>\r\n            <p>{{hero.quickplay['VenomMineKills-Average'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Widowmaker'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Most Venom Mine Kills</strong></p>\r\n            <p>{{hero.competitive['VenomMineKills-MostinGame'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Most Venom Mine Kills</strong></p>\r\n            <p>{{hero.quickplay['VenomMineKills-MostinGame'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <!-- ============================================================================================================================ -->\r\n        <!-- Winston ------------------------------------------------------------------------------------------------------------------>\r\n        <!-- ============================================================================================================================ -->\r\n\r\n        <v-card-column v-if=\"hero.name === 'Harambe'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Jump Pack Kills</strong></p>\r\n            <p>{{hero.competitive['JumpPackKills'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Jump Pack Kills</strong></p>\r\n            <p>{{hero.quickplay['JumpPackKills'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Harambe'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Avg Jump Pack Kills</strong></p>\r\n            <p>{{hero.competitive['JumpPackKills-Average'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Avg Jump Pack Kills</strong></p>\r\n            <p>{{hero.quickplay['JumpPackKills-Average'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Harambe'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Most Jump Pack Kills</strong></p>\r\n            <p>{{hero.competitive['JumpPackKills-MostinGame'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Most Jump Pack Kills</strong></p>\r\n            <p>{{hero.quickplay['JumpPackKills-MostinGame'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Harambe'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Primal Rage Kills</strong></p>\r\n            <p>{{hero.competitive['PrimalRageKills'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Primal Rage Kills</strong></p>\r\n            <p>{{hero.quickplay['PrimalRageKills'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Harambe'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Avg Primal Rage Kills</strong></p>\r\n            <p>{{hero.competitive['PrimalRageKills-Average'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Avg Primal Rage Kills</strong></p>\r\n            <p>{{hero.quickplay['PrimalRageKills-Average'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Harambe'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Most Primal Rage Kills</strong></p>\r\n            <p>{{hero.competitive['PrimalRageKills-MostinGame'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Most Primal Rage Kills</strong></p>\r\n            <p>{{hero.quickplay['PrimalRageKills-MostinGame'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Harambe'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Players Knocked Back</strong></p>\r\n            <p>{{hero.competitive['PlayersKnockedBack'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Players Knocked Back</strong></p>\r\n            <p>{{hero.quickplay['PlayersKnockedBack'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Harambe'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Avg Players Knocked Back</strong></p>\r\n            <p>{{hero.competitive['PlayersKnockedBack-Average'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Avg Players Knocked Back</strong></p>\r\n            <p>{{hero.quickplay['PlayersKnockedBack-Average'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Harambe'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Most Players Knocked Back</strong></p>\r\n            <p>{{hero.competitive['PlayersKnockedBack-MostinGame'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Most Players Knocked Back</strong></p>\r\n            <p>{{hero.quickplay['PlayersKnockedBack-MostinGame'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Harambe'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Environmental Kills</strong></p>\r\n            <p>{{hero.competitive['EnvironmentalKills'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Environmental Kills</strong></p>\r\n            <p>{{hero.quickplay['EnvironmentalKills'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <!-- ============================================================================================================================ -->\r\n        <!-- Zarya ------------------------------------------------------------------------------------------------------------------>\r\n        <!-- ============================================================================================================================ -->\r\n\r\n        <v-card-column v-if=\"hero.name === 'Zarya'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Lifetime Energy Accumulation</strong></p>\r\n            <p>{{hero.competitive['LifetimeEnergyAccumulation'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Lifetime Energy Accumulation</strong></p>\r\n            <p>{{hero.quickplay['LifetimeEnergyAccumulation'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Zarya'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>High Energy Kills</strong></p>\r\n            <p>{{hero.competitive['HighEnergyKills'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>High Energy Kills</strong></p>\r\n            <p>{{hero.quickplay['HighEnergyKills'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Zarya'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Avg High Energy Kills</strong></p>\r\n            <p>{{hero.competitive['HighEnergyKills-Average'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Avg High Energy Kills</strong></p>\r\n            <p>{{hero.quickplay['HighEnergyKills-Average'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Zarya'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Most High Energy Kills</strong></p>\r\n            <p>{{hero.competitive['HighEnergyKills-MostinGame'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Most High Energy Kills</strong></p>\r\n            <p>{{hero.quickplay['HighEnergyKills-MostinGame'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Zarya'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Projected Barriers Applied</strong></p>\r\n            <p>{{hero.competitive['ProjectedBarriersApplied'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Projected Barriers Applied</strong></p>\r\n            <p>{{hero.quickplay['ProjectedBarriersApplied'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Zarya'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Avg Projected Barriers Applied</strong></p>\r\n            <p>{{hero.competitive['ProjectedBarriersApplied-Average'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Avg Projected Barriers Applied</strong></p>\r\n            <p>{{hero.quickplay['ProjectedBarriersApplied-Average'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Zarya'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Most Projected Barriers Applied</strong></p>\r\n            <p>{{hero.competitive['ProjectedBarriersApplied-MostinGame'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Most Projected Barriers Applied</strong></p>\r\n            <p>{{hero.quickplay['ProjectedBarriersApplied-MostinGame'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Zarya'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Lifetime Graviton Surge Kills</strong></p>\r\n            <p>{{hero.competitive['LifetimeGravitonSurgeKills'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Lifetime Graviton Surge Kills</strong></p>\r\n            <p>{{hero.quickplay['LifetimeGravitonSurgeKills'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Zarya'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Avg Graviton Surge Kills</strong></p>\r\n            <p>{{hero.competitive['GravitonSurgeKills-Average'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Avg Graviton Surge Kills</strong></p>\r\n            <p>{{hero.quickplay['GravitonSurgeKills-Average'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Zarya'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Most Graviton Surge Kills</strong></p>\r\n            <p>{{hero.competitive['GravitonSurgeKills-MostinGame'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Most Graviton Surge Kills</strong></p>\r\n            <p>{{hero.quickplay['GravitonSurgeKills-MostinGame'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <!-- ============================================================================================================================ -->\r\n        <!-- Zenyatta ------------------------------------------------------------------------------------------------------------------>\r\n        <!-- ============================================================================================================================ -->\r\n\r\n        <v-card-column v-if=\"hero.name === 'Zenyatta'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Orb Healing</strong></p>\r\n            <p>{{hero.competitive['HealingDone'] - hero.competitive['TranscendenceHealing'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Orb Healing</strong></p>\r\n            <p>{{this.numberWithCommas(this.spliceInt(hero.quickplay['HealingDone']) - this.spliceInt(hero.quickplay['TranscendenceHealing'])) || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Zenyatta'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Transcendence Healing</strong></p>\r\n            <p>{{hero.competitive['TranscendenceHealing'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Transcendence Healing</strong></p>\r\n            <p>{{hero.quickplay['TranscendenceHealing'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n        <v-card-column v-if=\"hero.name === 'Zenyatta'\">\r\n          <v-card-text class=\"card_text\" v-if=\"viewMode ==='Competitive'\">\r\n            <p><strong>Best Transcendence Healing</strong></p>\r\n            <p>{{hero.competitive['TranscendenceHealing-Best'] || '---' }} </p>\r\n          </v-card-text>\r\n\r\n          <v-card-text class=\"card_text\" v-else-if=\"viewMode ==='Quickplay'\">\r\n            <p><strong>Best Transcendence Healing</strong></p>\r\n            <p>{{hero.quickplay['TranscendenceHealing-Best'] || '---'}} </p>\r\n          </v-card-text>\r\n        </v-card-column>\r\n\r\n\r\n      </v-card-row>\r\n      <!-- End Hero Stats Row -->\r\n    </v-card-column>\r\n  </v-card-row>\r\n</v-card>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'hero-card',\r\n  props: ['hero', 'viewMode'],\r\n  data () {\r\n    return {\r\n      fullStats: false,\r\n      noCrit: ['Ana', 'Junkrat', 'Pharah', 'Symmetra', 'Reinhardt', 'Harambe', 'Zarya']\r\n    }\r\n  },\r\n  methods: {\r\n    toggleHeroStats: function () {\r\n      if (this.fullStats === true) {\r\n        this.fullStats = false\r\n      } else if (this.fullStats === false) {\r\n        this.fullStats = true\r\n      }\r\n    },\r\n    spliceInt: function (string) {\r\n      // Take the comma out of the string so it can be parsed into an int\r\n      let int = parseInt(string.replace(/,/g, ''))\r\n      // Put the comma back for the new string to be displayed\r\n      return int\r\n    },\r\n    numberWithCommas: function (x) {\r\n      console.log('x', x)\r\n      var parts = x.toString().split('.')\r\n      parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\r\n      return parts.join('.')\r\n    },\r\n    headerId: function (hero) {\r\n      switch (hero.name) {\r\n        case 'D.Va':\r\n          return 'DVa'\r\n        case 'Lúcio':\r\n          return 'Lucio'\r\n        case 'Soldier: 76':\r\n          return 'Soldier76'\r\n        case 'Torbjörn':\r\n          return 'Torbjoern'\r\n        default:\r\n          return hero.name\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\nh1,\r\nh2 {\r\n  font-weight: normal;\r\n}\r\n\r\nul {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\n\r\nli {\r\n  display: inline-block;\r\n  margin: 0 10px;\r\n}\r\n\r\na {\r\n  color: #42b983;\r\n}\r\n\r\np {\r\n  white-space: nowrap;\r\n}\r\n\r\n.heroCard {\r\n  text-align: center;\r\n  background: black;\r\n  background: #060606; /* Old browsers */\r\n  background: -moz-linear-gradient(left, rgba(76, 76, 76, .8) 0%,rgba(47, 47, 47, .8) 100%); /* FF3.6-15 */\r\n  background: -webkit-linear-gradient(left, rgba(76, 76, 76, .8) 0%,rgba(47, 47, 47, .8) 100%); /* Chrome10-25,Safari5.1-6 */\r\n  background: linear-gradient(to right, rgba(76, 76, 76, .8) 0%,rgba(47, 47, 47, .8) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */\r\n  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#222222', endColorstr='#222222',GradientType=1 ); /* IE6-9 fallback on horizontal gradient */\r\n  text-shadow: -1px 1px 20px black;\r\n}\r\n\r\n.card__text {\r\n  padding-left: 15px;\r\n  padding-right: 15px;\r\n  color:white;\r\n  font-family: sans-serif;\r\n  font-size: 10px;\r\n}\r\n\r\n.cardTitleRow {\r\n  height: 45px;\r\n  border: 1px solid black;\r\n}\r\n\r\n.heroName {\r\n  text-shadow: -1px 1px 10px black\r\n}\r\n\r\n.icon {\r\n  text-shadow: none;\r\n}\r\n\r\n.statHeader {\r\n  font-weight: bold;\r\n  text-decoration: underline;\r\n  justify-content: center;\r\n  margin: 0;\r\n  color: white;\r\n}\r\n\r\n.statHeader p {\r\n  margin: 0;\r\n}\r\n\r\n#avatar {\r\n  min-width: 80px;\r\n  max-width: 80px;\r\n  min-height: 80px;\r\n  border-radius: 10px;\r\n}\r\n\r\n.medalColumn {\r\n  flex-grow: .3;\r\n}\r\n\r\n.medalText {\r\n  padding-left: 0;\r\n  padding-right: 0;\r\n}\r\n\r\n.goldMedal {\r\n  color: #eacf00;\r\n}\r\n\r\n.silverMedal {\r\n  color: #d4d8d8;\r\n}\r\n\r\n.bronzeMedal {\r\n  color: #9b6c00;\r\n}\r\n\r\n.medalColumn {\r\n  width: 25px;\r\n}\r\n\r\n/*Hero-specific Header Colors*/\r\n#Ana {\r\n  background-color: #41598a;\r\n}\r\n\r\n#Bastion {\r\n  background-color: #b9b9b9;\r\n}\r\n\r\n#DVa {\r\n  background-color: #ffd2ef;\r\n}\r\n\r\n#Genji {\r\n  background-color: #24ef37;\r\n}\r\n\r\n#Hanzo {\r\n  background-color: #75656f;\r\n}\r\n\r\n#Junkrat {\r\n  background-color: #efae34;\r\n}\r\n\r\n#Lucio {\r\n  background: #f2dc27; /* Old browsers */\r\n  background: -moz-linear-gradient(left, #3ae80d 0%, #f2dc27 100%); /* FF3.6-15 */\r\n  background: -webkit-linear-gradient(left, #3ae80d 0%,#f2dc27 100%); /* Chrome10-25,Safari5.1-6 */\r\n  background: linear-gradient(to right, #3ae80d 0%,#f2dc27 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */\r\n  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#3ae80d', endColorstr='#f2dc27',GradientType=1 ); /* IE6-9 */\r\n}\r\n\r\n#McCree {\r\n  background-color: #cd3432;\r\n}\r\n\r\n#Mei {\r\n  background-color: #95e6f7;\r\n}\r\n\r\n#Mercy {\r\n  background-color: #fefe4e;\r\n}\r\n\r\n#Pharah {\r\n  background-color: #4d7ccb;\r\n}\r\n\r\n#Reaper {\r\n  background-color: #414139;\r\n}\r\n\r\n#Reinhardt {\r\n  background-color: #9ba0a0;\r\n}\r\n\r\n#Roadhog {\r\n  background: #f0cd4b; /* Old browsers */\r\n  background: -moz-linear-gradient(left, #362f34 0%, #f0cd4b 100%); /* FF3.6-15 */\r\n  background: -webkit-linear-gradient(left, #362f34 0%,#f0cd4b 100%); /* Chrome10-25,Safari5.1-6 */\r\n  background: linear-gradient(to right, #362f34 0%,#f0cd4b 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */\r\n  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#362f34', endColorstr='#f0cd4b',GradientType=1 ); /* IE6-9 */\r\n}\r\n\r\n#Soldier76 {\r\n  background-color: #2d4776;\r\n}\r\n\r\n#Sombra {\r\n  background-color: #e24bfa;\r\n}\r\n\r\n#Symmetra {\r\n  background-color: #7fecfc;\r\n}\r\n\r\n#Tracer {\r\n  background-color: #f5bd27;\r\n}\r\n\r\n#Torbjoern {\r\n  background-color: #9b3435;\r\n}\r\n\r\n#Widowmaker {\r\n  background-color: #504057;\r\n}\r\n\r\n#Harambe {\r\n  background-color: #cccdcb;\r\n}\r\n\r\n#Zarya {\r\n  background-color: #e15284;\r\n}\r\n\r\n#Zenyatta {\r\n  background-color: #ccb059;\r\n}\r\n\r\n.card .cardTitleRow:hover {\r\n  -webkit-filter: brightness(120%);\r\n}\r\n\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// HeroCard.vue?7a980a23","<template>\r\n<v-container fluid>\r\n  <v-row>\r\n    <v-col md12>\r\n      <v-row>\r\n        <v-col md4>\r\n\r\n        </v-col>\r\n\r\n        <v-col md4>\r\n          <v-card id='battletagCard'>\r\n            <v-row id=\"battletagCardInputRow\">\r\n\r\n              <v-col md2>\r\n                <p>Platform</p>\r\n                <select class='select' name=\"Platform\" v-model=\"query.platform\">\r\n                      <option>PC</option>\r\n                      <option>XBL</option>\r\n                      <option>PSN</option>\r\n                    </select>\r\n              </v-col>\r\n\r\n              <v-col md2>\r\n                <p>Region</p>\r\n                <select class='select' name=\"Region\" v-model=\"query.region\">\r\n                      <option>US</option>\r\n                      <option>EU</option>\r\n                      <option>CN</option>\r\n                      <option>KR</option>\r\n                    </select>\r\n              </v-col>\r\n\r\n              <v-col md8 class='battletagCol'>\r\n\r\n                <v-row>\r\n                  <p>Battletag</p>\r\n                </v-row>\r\n\r\n                <v-row id='inputRow'>\r\n                  <div id=\"inputContainer\">\r\n                    <input type=\"text\" @keyup.enter=\"onClickButton\" v-model.trim=\"query.battletag\" name=\"user-search\" label=\"Search\" placeholder=\"Battletag is case sensitive!\"/>\r\n                    <button id=\"submit\" @click=\"onClickButton\">Onward</button>\r\n                  </div>\r\n                </v-row>\r\n\r\n              </v-col>\r\n\r\n            </v-row>\r\n          </v-card>\r\n        </v-col>\r\n\r\n        <v-col md4>\r\n\r\n        </v-col>\r\n\r\n      </v-row>\r\n    </v-col>\r\n  </v-row>\r\n</v-container>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'home',\r\n  data () {\r\n    return {\r\n      query: {\r\n        region: 'US',\r\n        platform: 'PC',\r\n        battletag: ''\r\n      }\r\n\r\n    }\r\n  },\r\n  props: ['loading', 'currentBattletag', 'viewMode', 'view'],\r\n  methods: {\r\n    onClickButton: function (event) {\r\n      console.log('clicked')\r\n      this.$emit('clicked', this.query)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\nh1,\r\nh2 {\r\n  font-weight: normal;\r\n}\r\n\r\nul {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\n\r\nli {\r\n  display: inline-block;\r\n  margin: 0 10px;\r\n}\r\n\r\na {\r\n  color: #42b983;\r\n}\r\n\r\n\r\n/*Input Field*/\r\n\r\ninput {\r\n  background-color: white;\r\n  border: 1px solid black;\r\n  min-height: 36px;\r\n  width: 200px;\r\n  padding: 0 25px;\r\n  border-radius: 2px;\r\n  -webkit-transform: skew(-20deg);\r\n  -moz-transform: skew(-20deg);\r\n  -o-transform: skew(-20deg);\r\n}\r\n\r\n#inputContainer .battletagCol {\r\n  text-align: center;\r\n  align-items: center;\r\n}\r\n\r\n.row {\r\n  /*align-items: center;*/\r\n  justify-content: center;\r\n}\r\n\r\n#battletagCard {\r\n  margin-top: 50px;\r\n  height: 150px !important;\r\n  align-items: center;\r\n}\r\n\r\n#battletagCardInputRow {\r\n height: 100%;\r\n padding-top: 25px;\r\n}\r\n\r\n.card {\r\n  height: 150px;\r\n}\r\n\r\nselect {\r\n  min-width: 50px;\r\n  border: 1px solid black;\r\n  padding: 0 10px;\r\n  -webkit-transform: skew(-20deg);\r\n  -moz-transform: skew(-20deg);\r\n  -o-transform: skew(-20deg);\r\n}\r\n\r\nbutton {\r\n  background-color: #f29a2c;\r\n  border-radius: 3px;\r\n  height: 36px;\r\n  width: 75px;\r\n  -webkit-transform: skew(-20deg);\r\n  -moz-transform: skew(-20deg);\r\n  -o-transform: skew(-20deg);\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// Home.vue?5707578a","<template>\r\n    <v-container fluid id=\"playerHeader\">\r\n      <v-row>\r\n\r\n        <v-col md6>\r\n          <v-container fluid>\r\n            <v-row>\r\n\r\n              <v-col lg2 md3 sm3>\r\n                <div class=\"headerAvatar\">\r\n                  <img class=\"avatarImage\" :src=\"currentBattletag.profile.avatar\" width=\"80\" height=\"80\">\r\n                </div>\r\n              </v-col>\r\n              <v-col lg10 md9 sm9 class=\"headerNameCol\">\r\n                <h3 class='whiteText'>\r\n                  <span>{{currentBattletag.tag}}</span>\r\n                  <small class='subHeader'> on {{currentBattletag.platform}} ({{currentBattletag.region}})</small>\r\n                </h3>\r\n              </v-col>\r\n            </v-row>\r\n\r\n\r\n          </v-container>\r\n\r\n        </v-col>\r\n\r\n        <v-col md6>\r\n\r\n        </v-col>\r\n\r\n      </v-row>\r\n    </v-container>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'player-header',\r\n  data () {\r\n    return {\r\n\r\n    }\r\n  },\r\n  props: ['currentBattletag', 'viewMode']\r\n}\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\nh1,\r\nh2 {\r\n  font-weight: normal;\r\n}\r\n\r\nul {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\n\r\nli {\r\n  display: inline-block;\r\n  margin: 0 10px;\r\n}\r\n\r\na {\r\n  color: #42b983;\r\n}\r\n\r\np {\r\n  white-space: nowrap;\r\n}\r\n\r\n.whiteText {\r\n  color: white;\r\n}\r\n\r\n.subHeader {\r\n  font-size: 14px;\r\n  color: #faa02e;\r\n}\r\n\r\n.avatarImage {\r\n  border-radius: 10px;\r\n}\r\n\r\n.headerNameCol {\r\n  text-align: left;\r\n}\r\n\r\n#playerHeader {\r\n\r\n}\r\n\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// PlayerHeader.vue?771012c0","<template>\r\n  <div id=\"ProfileContainer\">\r\n\r\n    <!-- Loading Screen -->\r\n    <div id='loadingDiv' v-if=\"loading\">\r\n      <v-progress-circular class=\"goldenrod\" v-bind:size=\"200\" indeterminate />\r\n    </div>\r\n\r\n    <!-- Player Header -->\r\n    <div v-if=\"!loading\" id=\"HeadingContainer\">\r\n      <player-header :currentBattletag=\"currentBattletag\" ></player-header>\r\n    </div>\r\n\r\n    <!-- Toggle Views -->\r\n    <div id=\"viewButtonsDiv\" v-if=\"!loading\">\r\n      <!-- Render a blue button if the view is competitive -->\r\n      <button id=\"switchViewBtn\" v-show=\"viewMode === 'Competitive'\" class=\"viewToggle activeViewButton\" @click=\"switchView\">{{viewMode}}</button>\r\n      <!-- Render a red button if the view is quickplay -->\r\n      <button id=\"switchViewBtn\" v-show=\"viewMode === 'Quickplay'\" class=\"viewToggle red\" @click=\"switchView\">{{viewMode}}</button>\r\n\r\n      <button class=\"viewToggle activeViewButton\" v-show=\"view.roles.defense && view.roles.offense && view.roles.tank && view.roles.support\" @click=\"switchRoleView('all')\">All Heroes</button>\r\n      <button class=\"viewToggle\" v-show=\"!view.roles.defense || !view.roles.offense || !view.roles.tank || !view.roles.support\" @click=\"switchRoleView('all')\">All Heroes</button>\r\n\r\n      <button class=\"viewToggle activeViewButton\" v-show=\"view.roles.defense && view.roles.offense\" @click=\"switchRoleView('damage')\">Damage</button>\r\n      <button class=\"viewToggle\" v-show=\"!view.roles.defense && !view.roles.offense\" @click=\"switchRoleView('damage')\">Damage</button>\r\n\r\n      <button class=\"viewToggle activeViewButton\" v-show=\"view.roles.tank\" @click=\"switchRoleView('tank')\">Tank</button>\r\n      <button class=\"viewToggle\" v-show=\"!view.roles.tank\" @click=\"switchRoleView('tank')\">Tank</button>\r\n\r\n      <button class=\"viewToggle activeViewButton\" v-show=\"view.roles.support\" @click=\"switchRoleView('support')\">Support</button>\r\n      <button class=\"viewToggle\" v-show=\"!view.roles.support\" @click=\"switchRoleView('support')\">Support</button>\r\n    </div>\r\n\r\n    <div id=\"CardContainer\">\r\n      <hero-card v-if=\"!loading\" v-for=\"hero in currentBattletag.heroStats\" v-show=\"view.roles[hero.role]\" :hero=\"hero\" :viewMode=\"view.mode\" :key=\"hero.name\"></hero-card>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport heroCard from './HeroCard.vue'\r\nimport playerHeader from './PlayerHeader.vue'\r\nexport default {\r\n  name: 'profile',\r\n  data () {\r\n    return {\r\n      msg: 'test'\r\n    }\r\n  },\r\n  components: {\r\n    heroCard,\r\n    playerHeader\r\n  },\r\n  props: ['loading', 'currentBattletag', 'viewMode', 'view', 'loadHeroData', 'toggleLoading'],\r\n  methods: {\r\n    switchView: function (event) {\r\n      if (this.viewMode === 'Competitive') {\r\n        this.$emit('switchView', 'Quickplay')\r\n      } else if (this.viewMode === 'Quickplay') {\r\n        this.$emit('switchView', 'Competitive')\r\n      }\r\n    },\r\n    switchRoleView: function (role) {\r\n      this.$emit('switchRoleView', role)\r\n    }\r\n  },\r\n  created: function () {\r\n    if (!this.currentBattletag.loaded || this.currentBattletag.tag !== this.$route.params.battletag.replace('-', '#')) {\r\n      this.toggleLoading()\r\n      this.loadHeroData()\r\n    }\r\n  },\r\n  watch: {\r\n    // call again the method if the route changes\r\n    '$route': 'loadHeroData'\r\n  }\r\n}\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\nh1,\r\nh2 {\r\n  font-weight: normal;\r\n}\r\n\r\nul {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\n\r\nli {\r\n  display: inline-block;\r\n  margin: 0 10px;\r\n}\r\n\r\na {\r\n  color: #42b983;\r\n}\r\n\r\n#loadingDiv {\r\n  margin-top: 100px;\r\n}\r\n\r\n.basicCard {\r\n  margin-top: 20px;\r\n}\r\n\r\n#ProfileContainer {\r\n  text-align: center;\r\n  justify-content: center;\r\n  font-family: 'Overwatch';\r\n}\r\n\r\n#HeadingContainer {\r\n  height: 200px;\r\n  padding-top: 20px;\r\n  background: black;\r\n  background: #060606; /* Old browsers */\r\n  background: -moz-linear-gradient(left, rgba(76, 76, 76, .8) 0%,rgba(47, 47, 47, .8) 100%); /* FF3.6-15 */\r\n  background: -webkit-linear-gradient(left, rgba(76, 76, 76, .8) 0%,rgba(47, 47, 47, .8) 100%); /* Chrome10-25,Safari5.1-6 */\r\n  background: linear-gradient(to right, rgba(76, 76, 76, .8) 0%,rgba(47, 47, 47, .8) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */\r\n  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#222222', endColorstr='#222222',GradientType=1 ); /* IE6-9 fallback on horizontal gradient */\r\n}\r\n\r\n#CardContainer {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n}\r\n\r\n.heroCard {\r\n  margin-bottom: 20px;\r\n  flex-wrap: wrap;\r\n\r\n}\r\n\r\n.card__row {\r\n  align-items: flex-start;\r\n  flex-flow: row wrap;\r\n}\r\n\r\n#viewButtonsDiv {\r\n  color: white;\r\n  margin-bottom: 30px;\r\n  width: 100%;\r\n}\r\n\r\n.viewToggle {\r\n  width: 80px;\r\n  height: 35px;\r\n  background-color: #bec1c4;\r\n  -webkit-transform: skew(-20deg);\r\n  -moz-transform: skew(-20deg);\r\n  -o-transform: skew(-20deg);\r\n  border: 1px solid black;\r\n  border-radius: 3px;\r\n}\r\n\r\n.card {\r\n  max-width: 100%;\r\n}\r\n\r\n#avatar {\r\n  max-width: 150px;\r\n  min-height: 150px;\r\n}\r\n\r\n.activeViewButton {\r\n  background-color: #f29a2c;\r\n}\r\n\r\n.goldenrod {\r\n  color: #f29a2c;\r\n}\r\n\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// Profile.vue?3511e15e","<template>\r\n  <v-container id='battletagCard'>\r\n    <v-row>\r\n\r\n      <v-col md2>\r\n        <p>Platform</p>\r\n        <select class='select' name=\"Platform\" v-model=\"query.platform\">\r\n              <option>PC</option>\r\n              <option>XBL</option>\r\n              <option>PSN</option>\r\n            </select>\r\n      </v-col>\r\n\r\n      <v-col md2>\r\n        <p>Region</p>\r\n        <select class='select' name=\"Region\" v-model=\"query.region\">\r\n              <option>US</option>\r\n              <option>EU</option>\r\n              <option>CN</option>\r\n              <option>KR</option>\r\n            </select>\r\n      </v-col>\r\n\r\n      <v-col md8 class='battletagCol'>\r\n\r\n        <v-row>\r\n          <p id=\"battletagP\">Battletag</p>\r\n        </v-row>\r\n\r\n        <v-row id='inputRow'>\r\n          <div id=\"inputContainer\">\r\n            <input type=\"text\" @keyup.enter=\"onClickButton\" v-model.trim=\"query.battletag\" name=\"user-search\" label=\"Search\" placeholder=\"Battletag is case sensitive!\"/>\r\n            <button id=\"submit\" @click=\"onClickButton\">Onward</button>\r\n          </div>\r\n        </v-row>\r\n\r\n      </v-col>\r\n\r\n    </v-row>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'user-search',\r\n  data () {\r\n    return {\r\n      query: {\r\n        region: 'US',\r\n        platform: 'PC',\r\n        battletag: ''\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    onClickButton: function (event) {\r\n      this.$emit('clicked', this.query)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n  input {\r\n    background-color: white;\r\n    color: black;\r\n    border: 1px solid black;\r\n    min-height: 36px;\r\n    width: 175px;\r\n    padding: 0 25px;\r\n    border-radius: 2px;\r\n    -webkit-transform: skew(-20deg);\r\n    -moz-transform: skew(-20deg);\r\n    -o-transform: skew(-20deg);\r\n  }\r\n\r\n  #inputContainer .battletagCol {\r\n    text-align: center;\r\n    align-items: center;\r\n  }\r\n\r\n  .row {\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n\r\n  .toolbar__item:hover {\r\n    background: none;\r\n  }\r\n\r\n  select {\r\n    min-width: 50px;\r\n    border: 1px solid black;\r\n    padding: 0 5px;\r\n    -webkit-transform: skew(-20deg);\r\n    -moz-transform: skew(-20deg);\r\n    -o-transform: skew(-20deg);\r\n  }\r\n\r\n  select option {\r\n    color: black;\r\n  }\r\n\r\n  button {\r\n    background-color: #f29a2c;\r\n    height: 36px;\r\n    width: 75px;\r\n    border-radius: 3px;\r\n    -webkit-transform: skew(-20deg);\r\n    -moz-transform: skew(-20deg);\r\n    -o-transform: skew(-20deg);\r\n    border: 1px solid black;\r\n  }\r\n\r\n  #battletagP {\r\n    margin-bottom: 0;\r\n  }\r\n\r\n\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// user-search.vue?ed0e0080","\n/* styles */\nrequire(\"!!../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-rewriter?{\\\"id\\\":\\\"data-v-3261f70e\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./HeroCard.vue\")\n\nvar Component = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./HeroCard.vue\"),\n  /* template */\n  require(\"!!../../node_modules/vue-loader/lib/template-compiler?{\\\"id\\\":\\\"data-v-3261f70e\\\"}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./HeroCard.vue\"),\n  /* scopeId */\n  \"data-v-3261f70e\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/HeroCard.vue\n// module id = 42\n// module chunks = 1","\n/* styles */\nrequire(\"!!../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-rewriter?{\\\"id\\\":\\\"data-v-313bdd43\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Home.vue\")\n\nvar Component = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Home.vue\"),\n  /* template */\n  require(\"!!../../node_modules/vue-loader/lib/template-compiler?{\\\"id\\\":\\\"data-v-313bdd43\\\"}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Home.vue\"),\n  /* scopeId */\n  \"data-v-313bdd43\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Home.vue\n// module id = 43\n// module chunks = 1","\n/* styles */\nrequire(\"!!../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-rewriter?{\\\"id\\\":\\\"data-v-631b6c9c\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./PlayerHeader.vue\")\n\nvar Component = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./PlayerHeader.vue\"),\n  /* template */\n  require(\"!!../../node_modules/vue-loader/lib/template-compiler?{\\\"id\\\":\\\"data-v-631b6c9c\\\"}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./PlayerHeader.vue\"),\n  /* scopeId */\n  \"data-v-631b6c9c\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/PlayerHeader.vue\n// module id = 44\n// module chunks = 1","\n/* styles */\nrequire(\"!!../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-rewriter?{\\\"id\\\":\\\"data-v-ce282216\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Profile.vue\")\n\nvar Component = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Profile.vue\"),\n  /* template */\n  require(\"!!../../node_modules/vue-loader/lib/template-compiler?{\\\"id\\\":\\\"data-v-ce282216\\\"}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Profile.vue\"),\n  /* scopeId */\n  \"data-v-ce282216\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Profile.vue\n// module id = 45\n// module chunks = 1","\n/* styles */\nrequire(\"!!../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-rewriter?{\\\"id\\\":\\\"data-v-767ff654\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./user-search.vue\")\n\nvar Component = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./user-search.vue\"),\n  /* template */\n  require(\"!!../../node_modules/vue-loader/lib/template-compiler?{\\\"id\\\":\\\"data-v-767ff654\\\"}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./user-search.vue\"),\n  /* scopeId */\n  \"data-v-767ff654\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/user-search.vue\n// module id = 46\n// module chunks = 1","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('v-container', {\n    attrs: {\n      \"fluid\": \"\"\n    }\n  }, [_c('v-row', [_c('v-col', {\n    attrs: {\n      \"md12\": \"\"\n    }\n  }, [_c('v-row', [_c('v-col', {\n    attrs: {\n      \"md4\": \"\"\n    }\n  }), _vm._v(\" \"), _c('v-col', {\n    attrs: {\n      \"md4\": \"\"\n    }\n  }, [_c('v-card', {\n    attrs: {\n      \"id\": \"battletagCard\"\n    }\n  }, [_c('v-row', {\n    attrs: {\n      \"id\": \"battletagCardInputRow\"\n    }\n  }, [_c('v-col', {\n    attrs: {\n      \"md2\": \"\"\n    }\n  }, [_c('p', [_vm._v(\"Platform\")]), _vm._v(\" \"), _c('select', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.query.platform),\n      expression: \"query.platform\"\n    }],\n    staticClass: \"select\",\n    attrs: {\n      \"name\": \"Platform\"\n    },\n    on: {\n      \"change\": function($event) {\n        var $$selectedVal = Array.prototype.filter.call($event.target.options, function(o) {\n          return o.selected\n        }).map(function(o) {\n          var val = \"_value\" in o ? o._value : o.value;\n          return val\n        });\n        _vm.query.platform = $event.target.multiple ? $$selectedVal : $$selectedVal[0]\n      }\n    }\n  }, [_c('option', [_vm._v(\"PC\")]), _vm._v(\" \"), _c('option', [_vm._v(\"XBL\")]), _vm._v(\" \"), _c('option', [_vm._v(\"PSN\")])])]), _vm._v(\" \"), _c('v-col', {\n    attrs: {\n      \"md2\": \"\"\n    }\n  }, [_c('p', [_vm._v(\"Region\")]), _vm._v(\" \"), _c('select', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.query.region),\n      expression: \"query.region\"\n    }],\n    staticClass: \"select\",\n    attrs: {\n      \"name\": \"Region\"\n    },\n    on: {\n      \"change\": function($event) {\n        var $$selectedVal = Array.prototype.filter.call($event.target.options, function(o) {\n          return o.selected\n        }).map(function(o) {\n          var val = \"_value\" in o ? o._value : o.value;\n          return val\n        });\n        _vm.query.region = $event.target.multiple ? $$selectedVal : $$selectedVal[0]\n      }\n    }\n  }, [_c('option', [_vm._v(\"US\")]), _vm._v(\" \"), _c('option', [_vm._v(\"EU\")]), _vm._v(\" \"), _c('option', [_vm._v(\"CN\")]), _vm._v(\" \"), _c('option', [_vm._v(\"KR\")])])]), _vm._v(\" \"), _c('v-col', {\n    staticClass: \"battletagCol\",\n    attrs: {\n      \"md8\": \"\"\n    }\n  }, [_c('v-row', [_c('p', [_vm._v(\"Battletag\")])]), _vm._v(\" \"), _c('v-row', {\n    attrs: {\n      \"id\": \"inputRow\"\n    }\n  }, [_c('div', {\n    attrs: {\n      \"id\": \"inputContainer\"\n    }\n  }, [_c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model.trim\",\n      value: (_vm.query.battletag),\n      expression: \"query.battletag\",\n      modifiers: {\n        \"trim\": true\n      }\n    }],\n    attrs: {\n      \"type\": \"text\",\n      \"name\": \"user-search\",\n      \"label\": \"Search\",\n      \"placeholder\": \"Battletag is case sensitive!\"\n    },\n    domProps: {\n      \"value\": (_vm.query.battletag)\n    },\n    on: {\n      \"keyup\": function($event) {\n        if (!('button' in $event) && _vm._k($event.keyCode, \"enter\", 13)) { return null; }\n        _vm.onClickButton($event)\n      },\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.query.battletag = $event.target.value.trim()\n      },\n      \"blur\": function($event) {\n        _vm.$forceUpdate()\n      }\n    }\n  }), _vm._v(\" \"), _c('button', {\n    attrs: {\n      \"id\": \"submit\"\n    },\n    on: {\n      \"click\": _vm.onClickButton\n    }\n  }, [_vm._v(\"Onward\")])])])], 1)], 1)], 1)], 1), _vm._v(\" \"), _c('v-col', {\n    attrs: {\n      \"md4\": \"\"\n    }\n  })], 1)], 1)], 1)], 1)\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler.js?{\"id\":\"data-v-313bdd43\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/Home.vue\n// module id = 47\n// module chunks = 1","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('v-card', {\n    staticClass: \"heroCard\"\n  }, [_c('v-card-row', {\n    staticClass: \"cardTitleRow\",\n    attrs: {\n      \"id\": _vm.headerId(_vm.hero)\n    }\n  }, [_c('v-card-title', {\n    on: {\n      \"click\": _vm.toggleHeroStats\n    }\n  }, [_c('span', {\n    staticClass: \"white--text heroName\"\n  }, [_vm._v(_vm._s(_vm.hero.name))]), _vm._v(\" \"), _c('v-spacer'), _vm._v(\" \"), _c('span', [(_vm.fullStats) ? _c('v-icon', [_vm._v(\"expand_more\")]) : _vm._e(), _vm._v(\" \"), (!_vm.fullStats) ? _c('v-icon', [_vm._v(\"expand_less\")]) : _vm._e()], 1)], 1)], 1), _vm._v(\" \"), _c('v-card-row', [_c('v-card-column', {\n    attrs: {\n      \"id\": \"avatar\"\n    }\n  }, [_c('v-card-row', {\n    attrs: {\n      \"img\": _vm.hero.image\n    }\n  })], 1), _vm._v(\" \"), _c('v-card-column', [_c('v-card-row', [_c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Time Played\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive.TimePlayed || '---') + \" \")])]) : _vm._e(), _vm._v(\" \"), (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Time Played\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay.TimePlayed || '---'))])]) : _vm._e()], 1), _vm._v(\" \"), _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Games Won\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive.GamesWon || '---') + \" \")])]) : _vm._e(), _vm._v(\" \"), (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Games Won\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay.GamesWon || '---') + \" \")])]) : _vm._e()], 1), _vm._v(\" \"), _c('v-card-column', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Competitive'),\n      expression: \"viewMode ==='Competitive'\"\n    }]\n  }, [_c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Games Lost\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive.GamesLost || '---') + \" \")])])], 1), _vm._v(\" \"), _c('v-card-column', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Competitive'),\n      expression: \"viewMode ==='Competitive'\"\n    }]\n  }, [_c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Win %\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive.WinPercentage || '---') + \" \")])])], 1), _vm._v(\" \"), _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Time on Fire\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive.TimeSpentonFire || '---') + \" \")])]) : _vm._e(), _vm._v(\" \"), (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Time on Fire\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay.TimeSpentonFire || '---') + \" \")])]) : _vm._e()], 1), _vm._v(\" \"), _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Fire\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['TimeSpentonFire-Average'] || '---') + \" \")])]) : _vm._e(), _vm._v(\" \"), (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Fire\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['TimeSpentonFire-Average'] || '---') + \" \")])]) : _vm._e()], 1), _vm._v(\" \"), _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Fire\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['TimeSpentonFire-MostinGame'] || '---') + \" \")])]) : _vm._e(), _vm._v(\" \"), (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Fire\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['TimeSpentonFire-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1), _vm._v(\" \"), _c('v-card-column', {\n    staticClass: \"medalColumn\"\n  }, [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text medalText\"\n  }, [_c('v-icon', {\n    staticClass: \"goldMedal\"\n  }, [_vm._v(\"fiber_manual_record\")]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['Medals-Gold'] || '---') + \" \")])], 1) : _vm._e(), _vm._v(\" \"), (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text medalText\"\n  }, [_c('v-icon', {\n    staticClass: \"goldMedal\"\n  }, [_vm._v(\"fiber_manual_record\")]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['Medals-Gold'] || '---') + \" \")])], 1) : _vm._e()], 1), _vm._v(\" \"), _c('v-card-column', {\n    staticClass: \"medalColumn\"\n  }, [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text medalText\"\n  }, [_c('v-icon', {\n    staticClass: \"silverMedal\"\n  }, [_vm._v(\"fiber_manual_record\")]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['Medals-Silver'] || '---') + \" \")])], 1) : _vm._e(), _vm._v(\" \"), (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text medalText\"\n  }, [_c('v-icon', {\n    staticClass: \"silverMedal\"\n  }, [_vm._v(\"fiber_manual_record\")]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['Medals-Silver'] || '---') + \" \")])], 1) : _vm._e()], 1), _vm._v(\" \"), _c('v-card-column', {\n    staticClass: \"medalColumn\"\n  }, [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text medalText\"\n  }, [_c('v-icon', {\n    staticClass: \"bronzeMedal\"\n  }, [_vm._v(\"fiber_manual_record\")]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['Medals-Bronze'] || '---') + \" \")])], 1) : _vm._e(), _vm._v(\" \"), (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text medalText\"\n  }, [_c('v-icon', {\n    staticClass: \"bronzeMedal\"\n  }, [_vm._v(\"fiber_manual_record\")]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['Medals-Bronze'] || '---') + \" \")])], 1) : _vm._e()], 1), _vm._v(\" \"), _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Cards\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive.Cards || _vm.hero.competitive.Card || '---') + \" \")])]) : _vm._e(), _vm._v(\" \"), (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Cards\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay.Cards || _vm.hero.quickplay.Card || '---') + \" \")])]) : _vm._e()], 1), _vm._v(\" \"), _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Elims\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive.Eliminations || _vm.hero.competitive.Elimination || '---') + \" \")])]) : _vm._e(), _vm._v(\" \"), (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Elims\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay.Eliminations || _vm.hero.quickplay.Elimination || '---') + \" \")])]) : _vm._e()], 1), _vm._v(\" \"), _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Elims\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['Eliminations-Average'] || '---') + \" \")])]) : _vm._e(), _vm._v(\" \"), (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Elims\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['Eliminations-Average'] || '---') + \" \")])]) : _vm._e()], 1), _vm._v(\" \"), _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Deaths\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive.Deaths || _vm.hero.competitive.Death || '---') + \" \")])]) : _vm._e(), _vm._v(\" \"), (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Deaths\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay.Deaths || _vm.hero.quickplay.Death || '---') + \" \")])]) : _vm._e()], 1), _vm._v(\" \"), _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Deaths\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['Deaths-Average'] || '---') + \" \")])]) : _vm._e(), _vm._v(\" \"), (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Deaths\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['Deaths-Average'] || '---') + \" \")])]) : _vm._e()], 1), _vm._v(\" \"), _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Elims/Life\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['EliminationsperLife'] || '---') + \" \")])]) : _vm._e(), _vm._v(\" \"), (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Elims/Life\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['EliminationsperLife'] || '---') + \" \")])]) : _vm._e()], 1), _vm._v(\" \"), _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Best Streak\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['KillStreak-Best'] || '---') + \" \")])]) : _vm._e(), _vm._v(\" \"), (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Best Streak\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['KillStreak-Best'] || '---') + \" \")])]) : _vm._e()], 1), _vm._v(\" \"), _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Weapon Accuracy\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['WeaponAccuracy'] || '---') + \" \")])]) : _vm._e(), _vm._v(\" \"), (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Weapon Accuracy\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['WeaponAccuracy'] || '---') + \" \")])]) : _vm._e()], 1), _vm._v(\" \"), _c('v-card-column', [_c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Competitive'),\n      expression: \"viewMode ==='Competitive'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Damage Done\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['DamageDone'] || '---') + \" \")])]), _vm._v(\" \"), _c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Quickplay'),\n      expression: \"viewMode ==='Quickplay'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Damage Done\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['DamageDone'] || '---') + \" \")])])], 1), _vm._v(\" \"), _c('v-card-column', [_c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Competitive'),\n      expression: \"viewMode ==='Competitive'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Damage\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['DamageDone-Average'] || '---') + \" \")])]), _vm._v(\" \"), _c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Quickplay'),\n      expression: \"viewMode ==='Quickplay'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Damage\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['DamageDone-Average'] || '---') + \" \")])])], 1), _vm._v(\" \"), _c('v-card-column', [_c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Competitive'),\n      expression: \"viewMode ==='Competitive'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Damage\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['DamageDone-MostinGame'] || '---') + \" \")])]), _vm._v(\" \"), _c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Quickplay'),\n      expression: \"viewMode ==='Quickplay'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Damage\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['DamageDone-MostinGame'] || '---') + \" \")])])], 1)], 1)], 1)], 1), _vm._v(\" \"), _c('hr'), _vm._v(\" \"), (_vm.hero.name !== 'Symmetra') ? _c('v-card-row', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.fullStats),\n      expression: \"fullStats\"\n    }],\n    staticClass: \"roleStatRow\"\n  }, [_c('v-card-column', [_c('v-card-row', {\n    staticClass: \"statHeader\"\n  }, [_c('p', [_vm._v(_vm._s(_vm.hero.role) + \" Stats\")])]), _vm._v(\" \"), _c('v-card-row', [(_vm.hero.role === 'support') ? _c('v-card-column', [_c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Competitive'),\n      expression: \"viewMode ==='Competitive'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Healing Done\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['HealingDone'] || '---') + \" \")])]), _vm._v(\" \"), _c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Quickplay'),\n      expression: \"viewMode ==='Quickplay'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Healing Done\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['HealingDone'] || '---') + \" \")])])], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.role === 'support') ? _c('v-card-column', [_c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Competitive'),\n      expression: \"viewMode ==='Competitive'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Healing\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['HealingDone-Average'] || '---') + \" \")])]), _vm._v(\" \"), _c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Quickplay'),\n      expression: \"viewMode ==='Quickplay'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Healing\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['HealingDone-Average'] || '---') + \" \")])])], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.role === 'support') ? _c('v-card-column', [_c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Competitive'),\n      expression: \"viewMode ==='Competitive'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Healing in Game\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['HealingDone-MostinGame'] || '---') + \" \")])]), _vm._v(\" \"), _c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Quickplay'),\n      expression: \"viewMode ==='Quickplay'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Healing in Game\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['HealingDone-MostinGame'] || '---') + \" \")])])], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.role === 'support') ? _c('v-card-column', [_c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Competitive'),\n      expression: \"viewMode ==='Competitive'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Healing in Life\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['HealingDone-MostinLife'] || '---') + \" \")])]), _vm._v(\" \"), _c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Quickplay'),\n      expression: \"viewMode ==='Quickplay'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Healing in Life\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['HealingDone-MostinLife'] || '---') + \" \")])])], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.role === 'support') ? _c('v-card-column', [_c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Competitive'),\n      expression: \"viewMode ==='Competitive'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Self Healing\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['SelfHealing'] || '---') + \" \")])]), _vm._v(\" \"), _c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Quickplay'),\n      expression: \"viewMode ==='Quickplay'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Self Healing\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['SelfHealing'] || '---') + \" \")])])], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.role === 'support') ? _c('v-card-column', [_c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Competitive'),\n      expression: \"viewMode ==='Competitive'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Self Healing\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['SelfHealing-Average'] || '---') + \" \")])]), _vm._v(\" \"), _c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Quickplay'),\n      expression: \"viewMode ==='Quickplay'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Self Healing\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['SelfHealing-Average'] || '---') + \" \")])])], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.role === 'support') ? _c('v-card-column', [_c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Competitive'),\n      expression: \"viewMode ==='Competitive'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"D. Assists\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['DefensiveAssists'] || '---') + \" \")])]), _vm._v(\" \"), _c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Quickplay'),\n      expression: \"viewMode ==='Quickplay'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"D. Assists\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['DefensiveAssists'] || '---') + \" \")])])], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.role === 'support') ? _c('v-card-column', [_c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Competitive'),\n      expression: \"viewMode ==='Competitive'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg D. Assists\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['DefensiveAssists-Average'] || '---') + \" \")])]), _vm._v(\" \"), _c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Quickplay'),\n      expression: \"viewMode ==='Quickplay'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg D. Assists\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['DefensiveAssists-Average'] || '---') + \" \")])])], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.role === 'support') ? _c('v-card-column', [_c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Competitive'),\n      expression: \"viewMode ==='Competitive'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most D. Assists\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['DefensiveAssists-MostinGame'] || '---') + \" \")])]), _vm._v(\" \"), _c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Quickplay'),\n      expression: \"viewMode ==='Quickplay'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most D. Assists\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['DefensiveAssists-MostinGame'] || '---') + \" \")])])], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.role === 'support') ? _c('v-card-column', [_c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Competitive'),\n      expression: \"viewMode ==='Competitive'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"O. Assists\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['OffensiveAssists'] || '---') + \" \")])]), _vm._v(\" \"), _c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Quickplay'),\n      expression: \"viewMode ==='Quickplay'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"O. Assists\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['OffensiveAssists'] || '---') + \" \")])])], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.role === 'support') ? _c('v-card-column', [_c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Competitive'),\n      expression: \"viewMode ==='Competitive'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg O. Assists\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['OffensiveAssists-Average'] || '---') + \" \")])]), _vm._v(\" \"), _c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Quickplay'),\n      expression: \"viewMode ==='Quickplay'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg O. Assists\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['OffensiveAssists-Average'] || '---') + \" \")])])], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.role === 'support') ? _c('v-card-column', [_c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Competitive'),\n      expression: \"viewMode ==='Competitive'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most O. Assists\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['OffensiveAssists-MostinGame'] || '---') + \" \")])]), _vm._v(\" \"), _c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Quickplay'),\n      expression: \"viewMode ==='Quickplay'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most O. Assists\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['OffensiveAssists-MostinGame'] || '---') + \" \")])])], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.role === 'tank') ? _c('v-card-column', [_c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Competitive'),\n      expression: \"viewMode ==='Competitive'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Damage Blocked\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['DamageBlocked'] || '---') + \" \")])]), _vm._v(\" \"), _c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Quickplay'),\n      expression: \"viewMode ==='Quickplay'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Damage Blocked\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['DamageBlocked'] || '---') + \" \")])])], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.role === 'tank') ? _c('v-card-column', [_c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Competitive'),\n      expression: \"viewMode ==='Competitive'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Damage Blocked\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['DamageBlocked-Average'] || '---') + \" \")])]), _vm._v(\" \"), _c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Quickplay'),\n      expression: \"viewMode ==='Quickplay'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Damage Blocked\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['DamageBlocked-Average'] || '---') + \" \")])])], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.role === 'tank') ? _c('v-card-column', [_c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Competitive'),\n      expression: \"viewMode ==='Competitive'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Damage Blocked\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['DamageBlocked-MostinGame'] || '---') + \" \")])]), _vm._v(\" \"), _c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Quickplay'),\n      expression: \"viewMode ==='Quickplay'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Damage Blocked\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['DamageBlocked-MostinGame'] || '---') + \" \")])])], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.role === 'tank') ? _c('v-card-column', [_c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Competitive'),\n      expression: \"viewMode ==='Competitive'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Objective Time\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['ObjectiveTime'] || '---') + \" \")])]), _vm._v(\" \"), _c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Quickplay'),\n      expression: \"viewMode ==='Quickplay'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Objective Time\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['ObjectiveTime'] || '---') + \" \")])])], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.role === 'tank') ? _c('v-card-column', [_c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Competitive'),\n      expression: \"viewMode ==='Competitive'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Obj Time\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['ObjectiveTime-Average'] || '---') + \" \")])]), _vm._v(\" \"), _c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Quickplay'),\n      expression: \"viewMode ==='Quickplay'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Obj Time\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['ObjectiveTime-Average'] || '---') + \" \")])])], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.role === 'tank') ? _c('v-card-column', [_c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Competitive'),\n      expression: \"viewMode ==='Competitive'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Obj Time\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['ObjectiveTime-MostinGame'] || '---') + \" \")])]), _vm._v(\" \"), _c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Quickplay'),\n      expression: \"viewMode ==='Quickplay'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Obj Time\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['ObjectiveTime-MostinGame'] || '---') + \" \")])])], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.role === 'tank') ? _c('v-card-column', [_c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Competitive'),\n      expression: \"viewMode ==='Competitive'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Objective Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['ObjectiveKills'] || '---') + \" \")])]), _vm._v(\" \"), _c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Quickplay'),\n      expression: \"viewMode ==='Quickplay'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Objective Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['ObjectiveKills'] || '---') + \" \")])])], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.role === 'tank') ? _c('v-card-column', [_c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Competitive'),\n      expression: \"viewMode ==='Competitive'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Obj Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['ObjectiveKills-Average'] || '---') + \" \")])]), _vm._v(\" \"), _c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Quickplay'),\n      expression: \"viewMode ==='Quickplay'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Obj Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['ObjectiveKills-Average'] || '---') + \" \")])])], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.role === 'tank') ? _c('v-card-column', [_c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Competitive'),\n      expression: \"viewMode ==='Competitive'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Obj Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['ObjectiveKills-MostinGame'] || '---') + \" \")])]), _vm._v(\" \"), _c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Quickplay'),\n      expression: \"viewMode ==='Quickplay'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Obj Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['ObjectiveKills-MostinGame'] || '---') + \" \")])])], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.role === 'offense' || _vm.hero.role === 'defense') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Solo Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['SoloKills'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Solo Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['SoloKills'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.role === 'offense' || _vm.hero.role === 'defense') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Solo Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['SoloKills-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Solo Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['SoloKills-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.role === 'offense' || _vm.hero.role === 'defense') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Solo Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['SoloKills-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Solo Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['SoloKills-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.role === 'offense' || _vm.hero.role === 'defense') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Final Blows\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['FinalBlows'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Final Blows\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['FinalBlows'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.role === 'offense' || _vm.hero.role === 'defense') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Final Blows\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['FinalBlows-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Final Blows\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['FinalBlows-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.role === 'offense' || _vm.hero.role === 'defense') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Final Blows\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['FinalBlows-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Final Blows\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['FinalBlows-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.role === 'offense' || _vm.hero.role === 'defense') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Melee Final Blows\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['MeleeFinalBlows'] || _vm.hero.competitive['MeleeFinalBlow'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Melee Final Blows\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['MeleeFinalBlows'] || _vm.hero.quickplay['MeleeFinalBlow'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.role === 'offense' || _vm.hero.role === 'defense') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Melee Final Blows\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['MeleeFinalBlows-Average'] || _vm.hero.competitive['MeleeFinalBlow-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Melee Final Blows\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['MeleeFinalBlows-Average'] || _vm.hero.quickplay['MeleeFinalBlow-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.role === 'offense' || _vm.hero.role === 'defense') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Melee Final Blows\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['MeleeFinalBlows-MostinGame'] || _vm.hero.competitive['MeleeFinalBlow-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Melee Final Blows\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['MeleeFinalBlows-MostinGame'] || _vm.hero.quickplay['MeleeFinalBlow-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e()], 1)], 1)], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name !== 'Symmetra') ? _c('hr') : _vm._e(), _vm._v(\" \"), _c('v-card-row', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.fullStats),\n      expression: \"fullStats\"\n    }],\n    staticClass: \"heroStatRow\"\n  }, [_c('v-card-column', [_c('v-card-row', {\n    staticClass: \"statHeader\"\n  }, [_c('p', [_vm._v(\"Hero Stats\")])]), _vm._v(\" \"), _c('v-card-row', [(_vm.noCrit.indexOf(_vm.hero.name) < 0) ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Crits\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['CriticalHits'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Crits\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['CriticalHits'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.noCrit.indexOf(_vm.hero.name) < 0) ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Crits\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['CriticalHits-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Crits\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['CriticalHits-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.noCrit.indexOf(_vm.hero.name) < 0) ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Crits\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['CriticalHits-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Crits\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['CriticalHits-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.noCrit.indexOf(_vm.hero.name) < 0) ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Crit %\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['CriticalHitAccuracy'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Crit %\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['CriticalHitAccuracy'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Ana') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Enemies Slept\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['EnemiesSlept'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Enemies Slept\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['EnemiesSlept'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Ana') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Enemies Slept\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['EnemiesSlept-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Enemies Slept\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['EnemiesSlept-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Ana') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Enemies Slept\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['EnemiesSlept-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Enemies Slept\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['EnemiesSlept-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Ana') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Nano Boosts\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['NanoBoostsApplied'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Nano Boosts\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['NanoBoostsApplied'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Ana') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Nano Boosts\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['NanoBoostsApplied-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Nano Boosts\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['NanoBoostsApplied-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Ana') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Nano Boosts\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['NanoBoostsApplied-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Nano Boosts\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['NanoBoostsApplied-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Ana') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Nano Boost Assits\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['NanoBoostAssists'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Nano Boost Assits\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['NanoBoostAssists'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Ana') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Nano Assits\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['NanoBoostAssists-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Nano Assits\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['NanoBoostAssists-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Ana') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Nano Assits\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['NanoBoostAssists-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Nano Assits\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['NanoBoostAssists-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Ana') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Scoped Hits\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['ScopedHits'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Scoped Hits\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['ScopedHits'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Ana') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Scoped Accuracy\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['ScopedAccuracy'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Scoped Accuracy\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['ScopedAccuracy'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Ana') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Scoped Best\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['ScopedAccuracy-BestinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Scoped Best\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['ScopedAccuracy-BestinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Ana') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Unscoped Hits\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['UnscopedShots'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Unscoped Hits\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['UnscopedShots'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Ana') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Unscoped Accuracy\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['UnscopedAccuracy'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Unscoped Accuracy\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['UnscopedAccuracy'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Ana') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Unscoped Best\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['UnscopedAccuracy-BestinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Unscoped Best\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['UnscopedAccuracy-BestinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Bastion') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Shots Fired\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['ShotsFired'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Shots Fired\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['ShotsFired'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Bastion') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Shots Hit\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['ShotsHit'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Shots Hit\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['ShotsHit'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Bastion') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Recon Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['ReconKills'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Recon Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['ReconKills'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Bastion') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Recon Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['ReconKills-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Recon Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['ReconKills-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Bastion') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Recon Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['ReconKills-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Recon Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['ReconKills-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Bastion') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Sentry Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['SentryKills'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Sentry Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['SentryKills'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Bastion') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Sentry Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['SentryKills-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Sentry Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['SentryKills-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Bastion') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Sentry Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['SentryKills-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Sentry Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['SentryKills-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Bastion') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Tank Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['TankKills'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Tank Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['TankKills'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Bastion') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Tank Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['TankKills-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Tank Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['TankKills-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Bastion') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Tank Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['TankKills-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Tank Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['TankKills-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Bastion') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Self Healing\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['SelfHealing'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Self Healing\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['SelfHealing'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Bastion') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Self Healing\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['SelfHealing-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Self Healing\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['SelfHealing-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Bastion') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Self Healing\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['SelfHealing-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Self Healing\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['SelfHealing-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'D.Va') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Mech Deaths\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['MechDeaths'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Mech Deaths\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['MechDeaths'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'D.Va') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Mechs Called\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['MechsCalled'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Mechs Called\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['MechsCalled'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'D.Va') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Self-Destruct Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['Self-DestructKills'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Self-Destruct Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['Self-DestructKills'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'D.Va') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Self-Destruct Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['Self-DestructKills-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Self-Destruct Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['Self-DestructKills-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'D.Va') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Self-Destruct Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['Self-DestructKills-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Self-Destruct Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['Self-DestructKills-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Genji') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Dragonblades\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['Dragonblades'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Dragonblades\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['Dragonblades'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Genji') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Dragonblade Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['DragonbladeKills'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Dragonblade Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['DragonbladeKills'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Genji') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Dragonblade Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['DragonbladeKills-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Dragonblade Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['DragonbladeKills-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Genji') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Dragonblade Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['DragonbladeKills-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Dragonblade Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['DragonbladeKills-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Hanzo') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Dragonstrike Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['DragonstrikeKills'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Dragonstrike Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['DragonstrikeKills'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Hanzo') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Dragonstrike Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['DragonstrikeKills-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Dragonstrike Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['DragonstrikeKills-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Hanzo') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Dragonstrike Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['DragonstrikeKills-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Dragonstrike Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['DragonstrikeKills-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Hanzo') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Scatter Arrow Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['ScatterArrowKills'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Scatter Arrow Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['ScatterArrowKills'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Hanzo') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Scatter Arrow Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['ScatterArrowKills-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Scatter Arrow Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['ScatterArrowKills-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Hanzo') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Scatter Arrow Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['ScatterArrowKills-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Scatter Arrow Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['ScatterArrowKills-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Junkrat') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Enemies Trapped\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['EnemiesTrapped'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Enemies Trapped\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['EnemiesTrapped'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Junkrat') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Enemies Trapped\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['EnemiesTrapped-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Enemies Trapped\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['EnemiesTrapped-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Junkrat') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"RIP Tire Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['RIP-TireKills'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"RIP Tire Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['RIP-TireKills'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Junkrat') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg RIP Tire Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['RIP-TireKills-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg RIP Tire Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['RIP-TireKills-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Junkrat') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most RIP Tire Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['RIP-TireKills-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most RIP Tire Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['RIP-TireKills-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Lúcio') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Environmental Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['EnvironmentalKills'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Environmental Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['EnvironmentalKills'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Lúcio') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Sound Barriers\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['SoundBarriersProvided'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Sound Barriers\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['SoundBarriersProvided'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Lúcio') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Sound Barriers\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['SoundBarriersProvided-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Sound Barriers\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['SoundBarriersProvided-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Lúcio') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Sound Barriers\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['SoundBarriersProvided-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Sound Barriers\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['SoundBarriersProvided-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'McCree') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Fan the Hammer Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['FantheHammerKills'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Fan the Hammer Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['FantheHammerKills'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'McCree') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Fan the Hammer Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['FantheHammerKills-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Fan the Hammer Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['FantheHammerKills-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'McCree') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Fan the Hammer Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['FantheHammerKills-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Fan the Hammer Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['FantheHammerKills-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'McCree') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Deadeye Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['DeadeyeKills'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Deadeye Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['DeadeyeKills'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'McCree') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Deadeye Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['DeadeyeKills-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Deadeye Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['DeadeyeKills-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'McCree') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Deadeye Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['DeadeyeKills-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Deadeye Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['DeadeyeKills-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Mei') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Blizzard Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['BlizzardKills'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Blizzard Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['BlizzardKills'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Mei') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Blizzard Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['BlizzardKills-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Blizzard Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['BlizzardKills-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Mei') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Blizzard Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['BlizzardKills-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Blizzard Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['BlizzardKills-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Mei') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Enemies Frozen\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['EnemiesFrozen'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Enemies Frozen\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['EnemiesFrozen'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Mei') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Enemies Frozen\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['EnemiesFrozen-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Enemies Frozen\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['EnemiesFrozen-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Mei') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Enemies Frozen\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['EnemiesFrozen-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Enemies Frozen\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['EnemiesFrozen-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Mercy') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Players Resurrected\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['PlayersResurrected'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Players Resurrected\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['PlayersResurrected'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Mercy') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Players Resurrected\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['PlayersResurrected-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Players Resurrected\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['PlayersResurrected-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Mercy') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Players Resurrected\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['PlayersResurrected-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Players Resurrected\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['PlayersResurrected-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Mercy') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Damage Amplified\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['DamageAmplified'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Damage Amplified\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['DamageAmplified'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Mercy') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Damage Amplified\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['DamageAmplified-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Damage Amplified\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['DamageAmplified-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Mercy') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Damage Amplified\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['DamageAmplified-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Damage Amplified\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['DamageAmplified-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Mercy') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Blaster Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['BlasterKills'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Blaster Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['BlasterKills'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Mercy') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Blaster Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['BlasterKills-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Blaster Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['BlasterKills-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Mercy') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Blaster Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['BlasterKills-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Blaster Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['BlasterKills-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Pharah') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Direct Hits\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['RocketDirectHits'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Direct Hits\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['RocketDirectHits'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Pharah') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Direct Hits\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['RocketDirectHits-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Direct Hits\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['RocketDirectHits-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Pharah') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Direct Hits\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['RocketDirectHits-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Direct Hits\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['RocketDirectHits-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Pharah') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Barrage Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['BarrageKills'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Barrage Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['BarrageKills'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Pharah') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Barrage Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['BarrageKills-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Barrage Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['BarrageKills-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Pharah') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Barrage Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['BarrageKills-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Barrage Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['BarrageKills-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Reaper') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Souls Consumed\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['SoulsConsumed'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Souls Consumed\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['SoulsConsumed'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Reaper') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Souls Consumed\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['SoulsConsumed-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Souls Consumed\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['SoulsConsumed-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Reaper') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Souls Consumed\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['SoulsConsumed-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Souls Consumed\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['SoulsConsumed-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Reaper') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Death Blossom Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['DeathBlossomKills'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Death Blossom Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['DeathBlossomKills'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Reaper') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Death Blossom Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['DeathBlossomKills-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Death Blossom Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['DeathBlossomKills-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Reaper') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Death Blossom Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['DeathBlossomKills-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Death Blossom Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['DeathBlossomKills-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Reinhardt') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Charge Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['ChargeKills'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Charge Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['ChargeKills'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Reinhardt') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Charge Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['ChargeKills-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Charge Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['ChargeKills-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Reinhardt') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Charge Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['ChargeKills-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Charge Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['ChargeKills-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Reinhardt') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Fire Strike Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['FireStrikeKills'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Fire Strike Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['FireStrikeKills'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Reinhardt') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Fire Strike Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['FireStrikeKills-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Fire Strike Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['FireStrikeKills-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Reinhardt') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Fire Strike Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['FireStrikeKills-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Fire Strike Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['FireStrikeKills-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Reinhardt') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Earthshatter Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['EarthshatterKills'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Earthshatter Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['EarthshatterKills'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Reinhardt') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Earthshatter Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['EarthshatterKills-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Earthshatter Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['EarthshatterKills-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Reinhardt') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Earthshatter Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['EarthshatterKills-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Earthshatter Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['EarthshatterKills-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Roadhog') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Hooks Attempted\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['HooksAttempted'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Hooks Attempted\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['HooksAttempted'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Roadhog') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Hook Accuracy\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['HookAccuracy'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Hook Accuracy\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['HookAccuracy'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Roadhog') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Best Hook Accuracy\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['HookAccuracy-BestinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Best Hook Accuracy\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['HookAccuracy-BestinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Roadhog') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Enemies Hooked\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['EnemiesHooked'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Enemies Hooked\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['EnemiesHooked'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Roadhog') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Enemies Hooked\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['EnemiesHooked-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Enemies Hooked\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['EnemiesHooked-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Roadhog') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Enemies Hooked\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['EnemiesHooked-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Enemies Hooked\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['EnemiesHooked-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Roadhog') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Whole Hog Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['WholeHogKills'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Whole Hog Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['WholeHogKills'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Roadhog') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Whole Hog Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['WholeHogKills-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Whole Hog Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['WholeHogKills-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Roadhog') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Whole Hog Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['WholeHogKills-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Whole Hog Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['WholeHogKills-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Soldier: 76') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Helix Rocket Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['HelixRocketKIlls'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Helix Rocket Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['HelixRocketKIlls'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Soldier: 76') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg H. Rocket Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['HelixRocketKIlls-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg H. Rocket Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['HelixRocketKIlls-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Soldier: 76') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most H. Rocket Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['HelixRocketKIlls-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most H. Rocket Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['HelixRocketKIlls-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Soldier: 76') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Tactical Visor Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['TacticalVisorKills'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Tactical Visor Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['TacticalVisorKills'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Soldier: 76') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg T. Visor Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['TacticalVisorKills-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg T. Visor Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['TacticalVisorKills-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Soldier: 76') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most T. Visor Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['TacticalVisorKills-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most T. Visor Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['TacticalVisorKills-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Soldier: 76') ? _c('v-card-column', [_c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Competitive'),\n      expression: \"viewMode ==='Competitive'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Healing Done\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['HealingDone'] || '---') + \" \")])]), _vm._v(\" \"), _c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Quickplay'),\n      expression: \"viewMode ==='Quickplay'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Healing Done\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['HealingDone'] || '---') + \" \")])])], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Soldier: 76') ? _c('v-card-column', [_c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Competitive'),\n      expression: \"viewMode ==='Competitive'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Healing\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['HealingDone-Average'] || '---') + \" \")])]), _vm._v(\" \"), _c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Quickplay'),\n      expression: \"viewMode ==='Quickplay'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Healing\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['HealingDone-Average'] || '---') + \" \")])])], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Soldier: 76') ? _c('v-card-column', [_c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Competitive'),\n      expression: \"viewMode ==='Competitive'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Healing in Game\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['HealingDone-MostinGame'] || '---') + \" \")])]), _vm._v(\" \"), _c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Quickplay'),\n      expression: \"viewMode ==='Quickplay'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Healing in Game\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['HealingDone-MostinGame'] || '---') + \" \")])])], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Soldier: 76') ? _c('v-card-column', [_c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Competitive'),\n      expression: \"viewMode ==='Competitive'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Healing in Life\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['HealingDone-MostinLife'] || '---') + \" \")])]), _vm._v(\" \"), _c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Quickplay'),\n      expression: \"viewMode ==='Quickplay'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Healing in Life\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['HealingDone-MostinLife'] || '---') + \" \")])])], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Soldier: 76') ? _c('v-card-column', [_c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Competitive'),\n      expression: \"viewMode ==='Competitive'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Biotic Fields Deployed\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['BioticFieldsDeployed'] || '---') + \" \")])]), _vm._v(\" \"), _c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Quickplay'),\n      expression: \"viewMode ==='Quickplay'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Biotic Fields Deployed\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['BioticFieldsDeployed'] || '---') + \" \")])])], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Soldier: 76') ? _c('v-card-column', [_c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Competitive'),\n      expression: \"viewMode ==='Competitive'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Biotic Field Healing\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['BioticFieldHealingDone'] || '---') + \" \")])]), _vm._v(\" \"), _c('v-card-text', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Quickplay'),\n      expression: \"viewMode ==='Quickplay'\"\n    }],\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Biotic Field Healing\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['BioticFieldHealingDone'] || '---') + \" \")])])], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Symmetra') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Teleporter Uptime\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['TeleporterUptime'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Teleporter Uptime\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['TeleporterUptime'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Symmetra') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Teleporter Uptime\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['TeleporterUptime-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Teleporter Uptime\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['TeleporterUptime-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Symmetra') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Best Teleporter Uptime\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['TeleporterUptime-BestinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Best Teleporter Uptime\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['TeleporterUptime-BestinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Symmetra') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Players Teleported\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['PlayersTeleported'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Players Teleported\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['PlayersTeleported'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Symmetra') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Players Teleported\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['PlayersTeleported-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Players Teleported\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['PlayersTeleported-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Symmetra') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Players Teleported\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['PlayersTeleported-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Players Teleported\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['PlayersTeleported-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Symmetra') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Sentry Turret Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['SentryTurretKills'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Sentry Turret Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['SentryTurretKills'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Symmetra') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Sentry Turret Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['SentryTurretKills-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Sentry Turret Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['SentryTurretKills-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Symmetra') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Sentry Turret Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['SentryTurretKills-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Sentry Turret Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['SentryTurretKills-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Symmetra') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Damage Blocked\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['DamageBlocked'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Damage Blocked\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['DamageBlocked'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Symmetra') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Damage Blocked\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['DamageBlocked-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Damage Blocked\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['DamageBlocked-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Symmetra') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Damage Blocked\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['DamageBlocked-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Damage Blocked\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['DamageBlocked-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Tracer') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Pulse Bombs Attached\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['PulseBombsAttached'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Pulse Bombs Attached\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['PulseBombsAttached'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Tracer') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Pulse Bombs Attached\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['PulseBombsAttached-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Pulse Bombs Attached\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['PulseBombsAttached-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Tracer') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Pulse Bombs Attached\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['PulseBombsAttached-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Pulse Bombs Attached\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['PulseBombsAttached-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Tracer') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Pulse Bomb Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['PulseBombKills'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Pulse Bomb Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['PulseBombKills'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Tracer') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Pulse Bomb Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['PulseBombKills-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Pulse Bomb Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['PulseBombKills-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Tracer') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Pulse Bomb Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['PulseBombKills-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Pulse Bomb Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['PulseBombKills-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Torbjörn') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Torbjörn Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['TorbjörnKills'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Torbjörn Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['TorbjörnKills'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Torbjörn') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Torbjörn Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['TorbjörnKills-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Torbjörn Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['TorbjörnKills-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Torbjörn') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Torbjörn Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['TorbjörnKills-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Torbjörn Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['TorbjörnKills-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Torbjörn') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Turret Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['TurretKills'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Turret Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['TurretKills'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Torbjörn') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Turret Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['TurretKills-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Turret Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['TurretKills-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Torbjörn') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Molten Core Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['MoltenCoreKillsKills'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Molten Core Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['MoltenCoreKills'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Torbjörn') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Molten Core Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['MoltenCoreKills-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Molten Core Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['MoltenCoreKills-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Torbjörn') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Molten Core Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['MoltenCoreKills-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Molten Core Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['MoltenCoreKills-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Torbjörn') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Armor Packs Created\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['ArmorPacksCreated'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Armor Packs Created\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['ArmorPacksCreated'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Torbjörn') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Armor Packs Created\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['ArmorPacksCreated-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Armor Packs Created\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['ArmorPacksCreated-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Widowmaker') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Scoped Shots\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['Scoped Shots'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Scoped Shots\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['ScopedShots'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Widowmaker') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Scoped Accuracy\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['ScopedAccuracy'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Scoped Accuracy\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['ScopedAccuracy'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Widowmaker') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Best Scoped Accuracy\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['ScopedAccuracy-BestinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Best Scoped Accuracy\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['ScopedAccuracy-BestinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Widowmaker') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Scoped Critical Hits\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['ScopedCriticalHits'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Scoped Critical Hits\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['ScopedCriticalHits'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Widowmaker') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Scoped Critical Hits\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['ScopedCriticalHits-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Scoped Critical Hits\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['ScopedCriticalHits-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Widowmaker') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Scoped Critical Hits\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['ScopedCriticalHits-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Scoped Critical Hits\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['ScopedCriticalHits-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Widowmaker') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Venom Mine Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['VenomMineKills'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Venom Mine Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['VenomMineKills'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Widowmaker') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Venom Mine Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['VenomMineKills-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Venom Mine Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['VenomMineKills-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Widowmaker') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Venom Mine Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['VenomMineKills-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Venom Mine Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['VenomMineKills-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Harambe') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Jump Pack Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['JumpPackKills'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Jump Pack Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['JumpPackKills'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Harambe') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Jump Pack Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['JumpPackKills-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Jump Pack Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['JumpPackKills-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Harambe') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Jump Pack Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['JumpPackKills-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Jump Pack Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['JumpPackKills-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Harambe') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Primal Rage Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['PrimalRageKills'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Primal Rage Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['PrimalRageKills'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Harambe') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Primal Rage Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['PrimalRageKills-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Primal Rage Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['PrimalRageKills-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Harambe') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Primal Rage Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['PrimalRageKills-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Primal Rage Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['PrimalRageKills-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Harambe') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Players Knocked Back\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['PlayersKnockedBack'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Players Knocked Back\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['PlayersKnockedBack'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Harambe') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Players Knocked Back\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['PlayersKnockedBack-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Players Knocked Back\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['PlayersKnockedBack-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Harambe') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Players Knocked Back\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['PlayersKnockedBack-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Players Knocked Back\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['PlayersKnockedBack-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Harambe') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Environmental Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['EnvironmentalKills'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Environmental Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['EnvironmentalKills'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Zarya') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Lifetime Energy Accumulation\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['LifetimeEnergyAccumulation'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Lifetime Energy Accumulation\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['LifetimeEnergyAccumulation'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Zarya') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"High Energy Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['HighEnergyKills'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"High Energy Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['HighEnergyKills'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Zarya') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg High Energy Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['HighEnergyKills-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg High Energy Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['HighEnergyKills-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Zarya') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most High Energy Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['HighEnergyKills-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most High Energy Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['HighEnergyKills-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Zarya') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Projected Barriers Applied\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['ProjectedBarriersApplied'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Projected Barriers Applied\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['ProjectedBarriersApplied'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Zarya') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Projected Barriers Applied\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['ProjectedBarriersApplied-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Projected Barriers Applied\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['ProjectedBarriersApplied-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Zarya') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Projected Barriers Applied\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['ProjectedBarriersApplied-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Projected Barriers Applied\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['ProjectedBarriersApplied-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Zarya') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Lifetime Graviton Surge Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['LifetimeGravitonSurgeKills'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Lifetime Graviton Surge Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['LifetimeGravitonSurgeKills'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Zarya') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Graviton Surge Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['GravitonSurgeKills-Average'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Avg Graviton Surge Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['GravitonSurgeKills-Average'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Zarya') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Graviton Surge Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['GravitonSurgeKills-MostinGame'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Most Graviton Surge Kills\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['GravitonSurgeKills-MostinGame'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Zenyatta') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Orb Healing\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['HealingDone'] - _vm.hero.competitive['TranscendenceHealing'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Orb Healing\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(this.numberWithCommas(this.spliceInt(_vm.hero.quickplay['HealingDone']) - this.spliceInt(_vm.hero.quickplay['TranscendenceHealing'])) || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Zenyatta') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Transcendence Healing\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['TranscendenceHealing'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Transcendence Healing\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['TranscendenceHealing'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e(), _vm._v(\" \"), (_vm.hero.name === 'Zenyatta') ? _c('v-card-column', [(_vm.viewMode === 'Competitive') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Best Transcendence Healing\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.competitive['TranscendenceHealing-Best'] || '---') + \" \")])]) : (_vm.viewMode === 'Quickplay') ? _c('v-card-text', {\n    staticClass: \"card_text\"\n  }, [_c('p', [_c('strong', [_vm._v(\"Best Transcendence Healing\")])]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.hero.quickplay['TranscendenceHealing-Best'] || '---') + \" \")])]) : _vm._e()], 1) : _vm._e()], 1)], 1)], 1)], 1)\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler.js?{\"id\":\"data-v-3261f70e\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/HeroCard.vue\n// module id = 48\n// module chunks = 1","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('v-container', {\n    attrs: {\n      \"fluid\": \"\",\n      \"id\": \"playerHeader\"\n    }\n  }, [_c('v-row', [_c('v-col', {\n    attrs: {\n      \"md6\": \"\"\n    }\n  }, [_c('v-container', {\n    attrs: {\n      \"fluid\": \"\"\n    }\n  }, [_c('v-row', [_c('v-col', {\n    attrs: {\n      \"lg2\": \"\",\n      \"md3\": \"\",\n      \"sm3\": \"\"\n    }\n  }, [_c('div', {\n    staticClass: \"headerAvatar\"\n  }, [_c('img', {\n    staticClass: \"avatarImage\",\n    attrs: {\n      \"src\": _vm.currentBattletag.profile.avatar,\n      \"width\": \"80\",\n      \"height\": \"80\"\n    }\n  })])]), _vm._v(\" \"), _c('v-col', {\n    staticClass: \"headerNameCol\",\n    attrs: {\n      \"lg10\": \"\",\n      \"md9\": \"\",\n      \"sm9\": \"\"\n    }\n  }, [_c('h3', {\n    staticClass: \"whiteText\"\n  }, [_c('span', [_vm._v(_vm._s(_vm.currentBattletag.tag))]), _vm._v(\" \"), _c('small', {\n    staticClass: \"subHeader\"\n  }, [_vm._v(\" on \" + _vm._s(_vm.currentBattletag.platform) + \" (\" + _vm._s(_vm.currentBattletag.region) + \")\")])])])], 1)], 1)], 1), _vm._v(\" \"), _c('v-col', {\n    attrs: {\n      \"md6\": \"\"\n    }\n  })], 1)], 1)\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler.js?{\"id\":\"data-v-631b6c9c\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/PlayerHeader.vue\n// module id = 49\n// module chunks = 1","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('v-container', {\n    attrs: {\n      \"id\": \"battletagCard\"\n    }\n  }, [_c('v-row', [_c('v-col', {\n    attrs: {\n      \"md2\": \"\"\n    }\n  }, [_c('p', [_vm._v(\"Platform\")]), _vm._v(\" \"), _c('select', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.query.platform),\n      expression: \"query.platform\"\n    }],\n    staticClass: \"select\",\n    attrs: {\n      \"name\": \"Platform\"\n    },\n    on: {\n      \"change\": function($event) {\n        var $$selectedVal = Array.prototype.filter.call($event.target.options, function(o) {\n          return o.selected\n        }).map(function(o) {\n          var val = \"_value\" in o ? o._value : o.value;\n          return val\n        });\n        _vm.query.platform = $event.target.multiple ? $$selectedVal : $$selectedVal[0]\n      }\n    }\n  }, [_c('option', [_vm._v(\"PC\")]), _vm._v(\" \"), _c('option', [_vm._v(\"XBL\")]), _vm._v(\" \"), _c('option', [_vm._v(\"PSN\")])])]), _vm._v(\" \"), _c('v-col', {\n    attrs: {\n      \"md2\": \"\"\n    }\n  }, [_c('p', [_vm._v(\"Region\")]), _vm._v(\" \"), _c('select', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: (_vm.query.region),\n      expression: \"query.region\"\n    }],\n    staticClass: \"select\",\n    attrs: {\n      \"name\": \"Region\"\n    },\n    on: {\n      \"change\": function($event) {\n        var $$selectedVal = Array.prototype.filter.call($event.target.options, function(o) {\n          return o.selected\n        }).map(function(o) {\n          var val = \"_value\" in o ? o._value : o.value;\n          return val\n        });\n        _vm.query.region = $event.target.multiple ? $$selectedVal : $$selectedVal[0]\n      }\n    }\n  }, [_c('option', [_vm._v(\"US\")]), _vm._v(\" \"), _c('option', [_vm._v(\"EU\")]), _vm._v(\" \"), _c('option', [_vm._v(\"CN\")]), _vm._v(\" \"), _c('option', [_vm._v(\"KR\")])])]), _vm._v(\" \"), _c('v-col', {\n    staticClass: \"battletagCol\",\n    attrs: {\n      \"md8\": \"\"\n    }\n  }, [_c('v-row', [_c('p', {\n    attrs: {\n      \"id\": \"battletagP\"\n    }\n  }, [_vm._v(\"Battletag\")])]), _vm._v(\" \"), _c('v-row', {\n    attrs: {\n      \"id\": \"inputRow\"\n    }\n  }, [_c('div', {\n    attrs: {\n      \"id\": \"inputContainer\"\n    }\n  }, [_c('input', {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model.trim\",\n      value: (_vm.query.battletag),\n      expression: \"query.battletag\",\n      modifiers: {\n        \"trim\": true\n      }\n    }],\n    attrs: {\n      \"type\": \"text\",\n      \"name\": \"user-search\",\n      \"label\": \"Search\",\n      \"placeholder\": \"Battletag is case sensitive!\"\n    },\n    domProps: {\n      \"value\": (_vm.query.battletag)\n    },\n    on: {\n      \"keyup\": function($event) {\n        if (!('button' in $event) && _vm._k($event.keyCode, \"enter\", 13)) { return null; }\n        _vm.onClickButton($event)\n      },\n      \"input\": function($event) {\n        if ($event.target.composing) { return; }\n        _vm.query.battletag = $event.target.value.trim()\n      },\n      \"blur\": function($event) {\n        _vm.$forceUpdate()\n      }\n    }\n  }), _vm._v(\" \"), _c('button', {\n    attrs: {\n      \"id\": \"submit\"\n    },\n    on: {\n      \"click\": _vm.onClickButton\n    }\n  }, [_vm._v(\"Onward\")])])])], 1)], 1)], 1)\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler.js?{\"id\":\"data-v-767ff654\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/user-search.vue\n// module id = 50\n// module chunks = 1","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    style: (_vm.appStyleObject),\n    attrs: {\n      \"id\": \"appContainer\"\n    }\n  }, [_c('v-toolbar', {\n    attrs: {\n      \"id\": \"toolbar\"\n    }\n  }, [_c('v-toolbar-title', {\n    attrs: {\n      \"id\": \"brand\"\n    }\n  }, [_c('router-link', {\n    attrs: {\n      \"to\": \"/\"\n    }\n  }, [_vm._v(\"WatchOver\")])], 1), _vm._v(\" \"), _c('v-toolbar-items', [_c('v-toolbar-item', [_c('user-search', {\n    on: {\n      \"clicked\": _vm.onClickSearch\n    }\n  })], 1)], 1)], 1), _vm._v(\" \"), _c('main', [_c('v-content', [_c('router-view', {\n    attrs: {\n      \"viewMode\": _vm.view.mode,\n      \"toggleLoading\": _vm.toggleLoading,\n      \"loadHeroData\": _vm.loadHeroData,\n      \"loading\": _vm.loading,\n      \"view\": _vm.view,\n      \"current-battletag\": _vm.currentBattletag\n    },\n    on: {\n      \"clicked\": _vm.onClickSearch,\n      \"switchView\": _vm.switchView,\n      \"switchRoleView\": _vm.switchRoleView\n    }\n  })], 1)], 1)], 1)\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler.js?{\"id\":\"data-v-a2a45a28\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n// module id = 51\n// module chunks = 1","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    attrs: {\n      \"id\": \"ProfileContainer\"\n    }\n  }, [(_vm.loading) ? _c('div', {\n    attrs: {\n      \"id\": \"loadingDiv\"\n    }\n  }, [_c('v-progress-circular', {\n    staticClass: \"goldenrod\",\n    attrs: {\n      \"size\": 200,\n      \"indeterminate\": \"\"\n    }\n  })], 1) : _vm._e(), _vm._v(\" \"), (!_vm.loading) ? _c('div', {\n    attrs: {\n      \"id\": \"HeadingContainer\"\n    }\n  }, [_c('player-header', {\n    attrs: {\n      \"currentBattletag\": _vm.currentBattletag\n    }\n  })], 1) : _vm._e(), _vm._v(\" \"), (!_vm.loading) ? _c('div', {\n    attrs: {\n      \"id\": \"viewButtonsDiv\"\n    }\n  }, [_c('button', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Competitive'),\n      expression: \"viewMode === 'Competitive'\"\n    }],\n    staticClass: \"viewToggle activeViewButton\",\n    attrs: {\n      \"id\": \"switchViewBtn\"\n    },\n    on: {\n      \"click\": _vm.switchView\n    }\n  }, [_vm._v(_vm._s(_vm.viewMode))]), _vm._v(\" \"), _c('button', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.viewMode === 'Quickplay'),\n      expression: \"viewMode === 'Quickplay'\"\n    }],\n    staticClass: \"viewToggle red\",\n    attrs: {\n      \"id\": \"switchViewBtn\"\n    },\n    on: {\n      \"click\": _vm.switchView\n    }\n  }, [_vm._v(_vm._s(_vm.viewMode))]), _vm._v(\" \"), _c('button', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.view.roles.defense && _vm.view.roles.offense && _vm.view.roles.tank && _vm.view.roles.support),\n      expression: \"view.roles.defense && view.roles.offense && view.roles.tank && view.roles.support\"\n    }],\n    staticClass: \"viewToggle activeViewButton\",\n    on: {\n      \"click\": function($event) {\n        _vm.switchRoleView('all')\n      }\n    }\n  }, [_vm._v(\"All Heroes\")]), _vm._v(\" \"), _c('button', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (!_vm.view.roles.defense || !_vm.view.roles.offense || !_vm.view.roles.tank || !_vm.view.roles.support),\n      expression: \"!view.roles.defense || !view.roles.offense || !view.roles.tank || !view.roles.support\"\n    }],\n    staticClass: \"viewToggle\",\n    on: {\n      \"click\": function($event) {\n        _vm.switchRoleView('all')\n      }\n    }\n  }, [_vm._v(\"All Heroes\")]), _vm._v(\" \"), _c('button', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.view.roles.defense && _vm.view.roles.offense),\n      expression: \"view.roles.defense && view.roles.offense\"\n    }],\n    staticClass: \"viewToggle activeViewButton\",\n    on: {\n      \"click\": function($event) {\n        _vm.switchRoleView('damage')\n      }\n    }\n  }, [_vm._v(\"Damage\")]), _vm._v(\" \"), _c('button', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (!_vm.view.roles.defense && !_vm.view.roles.offense),\n      expression: \"!view.roles.defense && !view.roles.offense\"\n    }],\n    staticClass: \"viewToggle\",\n    on: {\n      \"click\": function($event) {\n        _vm.switchRoleView('damage')\n      }\n    }\n  }, [_vm._v(\"Damage\")]), _vm._v(\" \"), _c('button', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.view.roles.tank),\n      expression: \"view.roles.tank\"\n    }],\n    staticClass: \"viewToggle activeViewButton\",\n    on: {\n      \"click\": function($event) {\n        _vm.switchRoleView('tank')\n      }\n    }\n  }, [_vm._v(\"Tank\")]), _vm._v(\" \"), _c('button', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (!_vm.view.roles.tank),\n      expression: \"!view.roles.tank\"\n    }],\n    staticClass: \"viewToggle\",\n    on: {\n      \"click\": function($event) {\n        _vm.switchRoleView('tank')\n      }\n    }\n  }, [_vm._v(\"Tank\")]), _vm._v(\" \"), _c('button', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.view.roles.support),\n      expression: \"view.roles.support\"\n    }],\n    staticClass: \"viewToggle activeViewButton\",\n    on: {\n      \"click\": function($event) {\n        _vm.switchRoleView('support')\n      }\n    }\n  }, [_vm._v(\"Support\")]), _vm._v(\" \"), _c('button', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (!_vm.view.roles.support),\n      expression: \"!view.roles.support\"\n    }],\n    staticClass: \"viewToggle\",\n    on: {\n      \"click\": function($event) {\n        _vm.switchRoleView('support')\n      }\n    }\n  }, [_vm._v(\"Support\")])]) : _vm._e(), _vm._v(\" \"), _c('div', {\n    attrs: {\n      \"id\": \"CardContainer\"\n    }\n  }, _vm._l((_vm.currentBattletag.heroStats), function(hero) {\n    return (!_vm.loading) ? _c('hero-card', {\n      directives: [{\n        name: \"show\",\n        rawName: \"v-show\",\n        value: (_vm.view.roles[hero.role]),\n        expression: \"view.roles[hero.role]\"\n      }],\n      key: hero.name,\n      attrs: {\n        \"hero\": hero,\n        \"viewMode\": _vm.view.mode\n      }\n    }) : _vm._e()\n  }))])\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler.js?{\"id\":\"data-v-ce282216\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/Profile.vue\n// module id = 52\n// module chunks = 1","import Vue from 'vue'\r\nimport App from './App'\r\nimport router from './router'\r\n\r\nVue.config.productionTip = false\r\n\r\n/* eslint-disable no-new */\r\nnew Vue({\r\n  el: '#app',\r\n  router,\r\n  render: h => h(App)\r\n})\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js"],"sourceRoot":""}